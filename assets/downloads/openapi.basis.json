{"openapi":"3.0.2","info":{"title":"HCL Domino REST API basis","version":"1.3.7","description":"REST APIs for Domino and more done right. With declarative security and access to Code, Design and Data","contact":{"name":"HCL America Inc","url":"https://opensource.hcltechsw.com/Domino-rest-api/","email":"HeyHCL@pnp-hcl.com"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0"}},"servers":[{"url":"/api/v1","description":"Keep enabled server"}],"paths":{"/lists":{"summary":"Provides the lists (views/folders) present in a database","description":"Provides the lists (views/folders) present in a database","get":{"tags":["data"],"parameters":[{"name":"type","description":"Allows to specify views, folders, all\nTODO: categorized / calendar distinction?","schema":{"enum":["all","folders","views"],"type":"string"},"in":"query"},{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"columns","description":"When set to true, column information gets returned. Use with caution, slows down the API","schema":{"type":"boolean"},"in":"query"},{"name":"filter","description":"If present, perform a case insensitive partial text match that retrieves any lists that contains the input as a part of the list title.","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ListDesignItem"}},"examples":{"lists":{"value":[{"title":"($All)","isFolder":false,"alias":[],"unid":"0E35D520A1EBBB5B48258435003E8284"},{"title":"Customers","isFolder":false,"alias":[],"unid":"86C72C1BF64B6DF04825847100373215"}]},"lists with columns":{"value":[{"title":"($All)","isFolder":false,"alias":[],"unid":"0E35D520A1EBBB5B48258435003E8284","columns":[{"name":"$0","title":"#","position":0,"sorted":false},{"name":"Form","title":"Form","position":1,"sorted":false}]},{"title":"Customers","isFolder":false,"alias":[],"unid":"86C72C1BF64B6DF04825847100373215","columns":[{"name":"Name","title":"Name","position":0,"sorted":false},{"name":"Color","title":"Color","position":1,"sorted":false}]}]}}}},"description":"Shows list of views and folders in the database"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"fetchViews","summary":"Provide information on available views/folders","description":"Uses db.getViews() and filters out excluded views","x-keep-version":1},"parameters":[{"name":"type","description":"Allows to specify views, folders, all\nTODO: categorized / calendar distinction?","schema":{"enum":["all","folders","views"],"type":"string"},"in":"query"},{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/odata/{dataSource}/{name}/{unid}":{"summary":"Retrieve data in ODATA format","description":"return ONE element as ODATA","get":{"tags":["odata"],"parameters":[{"name":"$select","description":"Comma separated list of fields to return","schema":{"type":"string"},"in":"query"},{"name":"unid","description":"UniqueID (primary key) of the item","schema":{"type":"string"},"in":"path","required":true}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ODataDocument"},"examples":{"ODataDbNameUNIDSimple":{"value":{"@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/C1DB10AD7DCC3CC14825881D000C7AF1","@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/C1DB10AD7DCC3CC14825881D000C7AF1","@odata.etag":"W/\" 624ead27\"","Hex0040_unid":"C1DB10AD7DCC3CC14825881D000C7AF1","Color":"Orange","Form":"TestForm","email":"gsellickqu@ning.com","gender":"Male","ip_address":"155.247.81.139"}}}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"status":404,"message":"A scope definition with that name cannot be found: demo","errorId":1112}}}}},"description":"No such database"}},"security":[{"basic":[]},{"jwt":[]}],"operationId":"getOdataItem","summary":"Get document in a form using OData format","description":"Returns OData as JSON format and includes defined metadata.","x-keep-version":1},"put":{"requestBody":{"description":"Document body in JSON format. Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed.\n\nThe Key \"Form\" is required, and also it should have configured mode \"odata\" beforehand. ","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSimpleRequestUpdate"},"examples":{"UpdateOdataDocument":{"value":{"first_name":"Sandy","last_name":"Peterson","email":"sandy@canofsleep.com","gender":"Male","ip_address":"8.8.8.8","Color":"Pthalo Green","Pet":"Coyote"}}}}},"required":true},"tags":["odata"],"parameters":[{"examples":{"revisionSimple":{"value":"26372571825596dc0db73d0eacf1eacb"}},"name":"revision","description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. \r\n\r\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ODataDocument"},"examples":{"ODataDbNameUNIDResponse":{"value":{"@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/FEA2C8C21A2664AE48258814002CD992","@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/FEA2C8C21A2664AE48258814002CD992","@odata.etag":"W/\" 624d1dde\"","Hex0040_unid":"FEA2C8C21A2664AE48258814002CD992","Color":"Pthalo Green","Form":"TestForm","Pet":"Coyote","email":"sandy@canofsleep.com","first_name":"Sandy","gender":"Male","ip_address":"8.8.8.8","last_name":"Peterson"}}}}},"description":"Successful operation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"basic":[]},{"jwt":[]}],"operationId":"updateOdataDocument","summary":"Perform an update on the document in OData format","description":"Updates the document in OData format.","x-keep-version":1},"parameters":[{"examples":{"Demo":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"path","required":true},{"name":"unid","description":"UniqueId of document","schema":{"type":"string"},"in":"path","required":true},{"name":"name","description":"Form name","schema":{"type":"string"},"in":"path","required":true},{"examples":{"Current":{"value":"4.0"}},"name":"OData-MaxVersion","description":"What do we support","schema":{"type":"string"},"in":"header"},{"examples":{"Current":{"value":"4.0"}},"name":"OData-Version","description":"What version is requested","schema":{"type":"string"},"in":"header"},{"examples":{"Current":{"value":"3.0"}},"name":"MaxDataServiceVersion","description":"What's the dataservice","schema":{"type":"string"},"in":"header"}]},"/query":{"summary":"Runs a DQL query against the documents in the database.","description":"Runs a DQL query against the documents in the database.","post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryRequest"},"examples":{"QueryDQL":{"value":{"query":"form = 'Customer' and Color = ?Color","maxScanDocs":500000,"maxScanEntries":200000,"includeFormAlias":true,"timeoutSecs":300,"viewRefresh":true,"noViews":false,"mode":"dql","variables":{"Color":"Maroon","Pet":"Giraffe"}}},"Query to return all documents of a specific form, including any documents that have different aliases.":{"value":{"includeFormAlias":true,"forms":["customer"],"query":"@All","maxScanDocs":500000,"maxScanEntries":200000,"mode":"dql","noViews":false,"timeoutSecs":300,"viewRefresh":true}}}}},"required":true},"tags":["data"],"parameters":[{"name":"count","description":"How many entries shall be returned, default = Integer.MaxInteger","schema":{"type":"integer"},"in":"query"},{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"action","description":"What shall be executed:parse the query, explain or execute","schema":{"enum":["execute","explain","parse"],"type":"string"},"in":"query","required":true},{"name":"start","description":"at which entry should return values start (zero based), default = 0","schema":{"type":"integer"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{}}}},"description":"Succesful query showing results"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"query","summary":"Send a DQL query and get JSON documents back","description":"Send a DQL query and get JSON documents back","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"RichTextAsMime":{"value":"mime"}},"name":"richTextAs","description":"The format of RichText.  HTML is default","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"}]},"/run/formula":{"summary":"Executes a formula and returns results.","description":"Executes a formula and returns results.","post":{"requestBody":{"description":"Formula to be checked","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FormulaRequest"},"examples":{"simpleRequestWithUnid":{"value":{"user":"","type":"domino","formula":"@IsMember(\"[admin]\";@UserRoles)","save":false,"unid":"773342CE75B79B7D4825883100453252","query":""}},"simpleRequestWithQuery":{"value":{"user":"","type":"domino","formula":"@IsMember(\"[admin]\";@UserRoles)","save":false,"unid":"","query":"form = 'Entry' and name = 'Paxon'"}}}}},"required":true},"tags":["code"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FormulaResult"},"examples":{"simpleResponseWithUnid":{"value":{"result":[{"unid":"773342CE75B79B7D4825883100453252","result":[0]}]}},"simpleResponseWithQuery":{"value":{"result":[{"unid":"8C525AE6BE15DB6148258831001F5B7F","result":[0]},{"unid":"AA78E397F5397D054825883100453848","result":[0]}]}}}}},"description":"Successfull test of formula"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"runFormula","summary":"Executes a formula and returns results.","description":"Executes a formula and returns results.","x-keep-version":1},"parameters":[{"examples":{"default":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/document":{"summary":"Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document.","description":"Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document.","post":{"requestBody":{"description":"Document body in JSON format. Key/value pairs of fields and their values to update, 'Form' is required.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSimpleRequest"},"examples":{"createDocument":{"value":{"first_name":"George","last_name":"Branthwaite","email":"gbranthwaite0@nba.com","gender":"Male","ip_address":"91.254.204.27","Color":"Red","Pet":"Black-capped chickadee","Form":"Customer"}}}}},"required":true},"tags":["data"],"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"parentUnid","description":"UNID of an existing document, to make this a response document","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"document":{"value":{"@meta":{"noteid":44026,"unid":"1C62D55D75387684482588DA001F4428","created":"2022-10-13T13:41:30.64+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","addedtofile":"2022-10-13T13:41:30.68+08:00","noteclass":["DATA","DOCUMENT"],"unread":true,"revision":"00000001001F442C482588DA","size":570},"Form":"Customer","Color":"Red","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite","Pet":"Black-capped chickadee"}}}}},"description":"Successful creation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"createDocument","summary":"Create a new document for a specified form.","description":"Create a new document for a specified form.","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"richTextAs","description":"The format RichText fields will be returned.  The default if unspecified is mime.","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"}]},"/bulk/create":{"summary":"Create multiple documents with a single call","description":"Create multiple documents with a single call","post":{"requestBody":{"description":"Object with array property documents","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkCreateDocuments"},"examples":{"SampleBulkCreateDocuments":{"value":{"documents":[{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"}]}}}}},"required":true},"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object"}},"examples":{"SampleResponse":{"value":[{"@unid":"81E039D456E028D3482588140043410B","@noteid":6658,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@lastaccessed":"2022-03-29T20:14:35+08:00","@size":99,"@unread":true,"@etag":"W/\" 6242f82b\"","Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@unid":"597042E199754897482588140043410D","@noteid":6662,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@lastaccessed":"2022-03-29T20:14:35+08:00","@size":99,"@unread":true,"@etag":"W/\" 6242f82b\"","Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@unid":"D2E9CF578D0B3844482588140043410F","@noteid":6666,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@lastaccessed":"2022-03-29T20:14:35+08:00","@size":99,"@unread":true,"@etag":"W/\" 6242f82b\"","Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@unid":"05B08E4A7874C01E4825881400434111","@noteid":6670,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@lastaccessed":"2022-03-29T20:14:35+08:00","@size":99,"@unread":true,"@etag":"W/\" 6242f82b\"","Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@unid":"D650B4BF0DE3BB714825881400434113","@noteid":6674,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@lastaccessed":"2022-03-29T20:14:35+08:00","@size":99,"@unread":true,"@etag":"W/\" 6242f82b\"","Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"}]}}}},"description":"Creation result. Returns success / failure for each document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"bulkCreateDocuments","summary":"Create multiple documents in a single call","description":"Create multiple documents in a request","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"richTextAs","description":"The format RichText fields will be returned.  The default if unspecified is mime.","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"}]},"/bulk/delete":{"summary":"Delete multiple documents with a single call","description":"Delete multiple documents with a single call","post":{"requestBody":{"description":"Object with mode and array document UNIDs. ","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkUnids"},"examples":{"SampleBulkDelete":{"value":{"mode":"default","unids":["F6392938B2A8D0144825881400349085","81E039D456E028D3482588140043410B"]}},"SampleBulkDeleteWithoutMode":{"value":{"unids":["F6392938B2A8D0144825881400349085","81E039D456E028D3482588140043410B"]}}}}},"required":true},"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object"}},"examples":{"SampleBulkDeleteResponse":{"value":[{"statusText":"OK","status":200,"message":"Document F6392938B2A8D0144825881400349085 deleted","unid":"F6392938B2A8D0144825881400349085"},{"statusText":"OK","status":200,"message":"Document 81E039D456E028D3482588140043410B deleted","unid":"81E039D456E028D3482588140043410B"}]}}}},"description":"Creation result. Returns success / failure for each document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"bulkDeleteDocuments","summary":"Delete multiple documents in a single call","description":"Delete multiple documents in a request","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/documentmodes/{unid}":{"summary":"Provides information of all enabled modes for the relevant document","description":"Returns a JSON object of all the modes schemas available for the Form tied to this document.\n\nPeople can configure many different modes which have different fields with Read/Write/Both permission.","get":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/KeepFormMode"}},"examples":{"sampleMode":{"value":[{"modeName":"odata","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":[],"fields":[{"name":"email","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"newField","fieldAccess":"RW","type":"array","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"readAccessFields":[{"name":"email","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"newField","fieldAccess":"RW","type":"array","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"writeAccessFields":[{"name":"email","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"newField","fieldAccess":"RW","type":"array","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}]},{"modeName":"default","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":[],"fields":[],"readAccessFields":[],"writeAccessFields":[]}]}}}},"description":"Modes available and details. **Response format TBA**"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"getDocumentFormModes","summary":"Returns the modes available and fields that can be edited","description":"Returns the modes available and fields that can be edited","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"name":"unid","description":"Universal Id of the document to be acted upon","schema":{"type":"string"},"in":"path","required":true}]},"/attachments/{unid}/{attachmentName}":{"summary":"Retrieve a document's attachment","description":"Retrieve a document's attachment","get":{"tags":["data"],"responses":{"200":{"description":"Successful retrieval\nResponse does not contain a media type since a media type of an attachment can be any type.\nFor a list of well defined media types check the available documentation:\nhttps://www.iana.org/assignments/media-types/media-types.xhtml\n"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getDocumentAttachment","summary":"Retrieve a document's attachment","description":"Get the attachment of a document","x-keep-version":1},"delete":{"tags":["data"],"parameters":[{"name":"fieldName","description":"Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"},"examples":{"complete":{"value":{"status":"OK","statusCode":200,"message":"deletion complete","unid":"61CCE871E79E8DDB8025852F004DFF2D","details":{"appId":"1fe2cd-ac38-26c7d6"}}}}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"deleteDocumentAttachment","summary":"Removes an attachment","description":"Remove the attachment for the document","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"attachmentName":{"value":"myFile.xlsx"}},"name":"attachmentName","description":"Name of the attachment","schema":{"type":"string"},"in":"path","required":true},{"examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"name":"unid","description":"Universal Id of the document to be acted upon","schema":{"type":"string"},"in":"path","required":true}]},"/bulk/update":{"summary":"Update multiple documents with a single call","description":"Update multiple documents with a single call","patch":{"requestBody":{"description":"Object with query, mode and fields to update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkUpdateDocuments"},"examples":{"SampleBulkUpdate":{"value":{"maxScanDocs":500000,"maxScanEntries":200000,"mode":"default","noViews":false,"returnUpdatedDocument":false,"query":"Form = 'TestForm' and first_name = 'Kristoffer' and last_name = 'Aaronsohn'","replaceItems":{"first_name":"TestName"},"timeoutSecs":300,"viewRefresh":true}},"Update documents by DQL document forms listed in array.":{"value":{"forms":["Client","Lead"],"includeFormAlias":true,"maxScanDocs":500000,"maxScanEntries":200000,"mode":"default","noViews":false,"query":"City = ?City","replaceItems":{"Sales_Rep":"James"},"returnUpdatedDocument":false,"timeoutSecs":300,"variables":{"City":"Boston"},"viewRefresh":true}}}}},"required":true},"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object"}},"examples":{"SampleBulkUpdateResponse":{"value":[{"@unid":"D2E9CF578D0B3844482588140043410F","@noteid":6666,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@lastaccessed":"2022-03-29T20:14:35+08:00","@size":124,"@unread":true,"@etag":"W/\" 6243a80a\"","Color":"Purple","form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@unid":"05B08E4A7874C01E4825881400434111","@noteid":6670,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@lastaccessed":"2022-03-29T20:14:35+08:00","@size":124,"@unread":true,"@etag":"W/\" 6243a80a\"","Color":"Purple","form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@unid":"D650B4BF0DE3BB714825881400434113","@noteid":6674,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@lastaccessed":"2022-03-29T20:14:35+08:00","@size":124,"@unread":true,"@etag":"W/\" 6243a80a\"","Color":"Purple","form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"}]}}}},"description":"Update result. Returns success / failure for each document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"bulkUpdateDocumentsByQuery","summary":"Update multiple documents in a single call","description":"Update multiple documents in a single call","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"richTextAs","description":"The format RichText fields will be returned.  The default if unspecified is mime.","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"}]},"/run/agent":{"summary":"Runs an existing agent in a given database","description":"Runs an existing agent in a given database","post":{"requestBody":{"description":"Request body for run an agent. agentName is required. ","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AgentPayload","required":["agentName"],"properties":{"agentName":{"type":"string"}}},"examples":{"sample":{"value":{"agentName":"processJson"}}}}},"required":true},"tags":["code"],"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object"},"examples":{"synchronous":{"value":{"agentResponse":"done"}}}}},"description":"Successful execution of agent"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"executeAgent","summary":"Runs an agent in a database, in real time","description":"Runs an existing agent, serverside. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser\r\n\r\nFormula type agent's target is anything other than \"None\" is unsupported trigger.\r\n\r\nUnsupported trigger will get \"Unsupported trigger and search in the background or embedded agent\"","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/run/agentWithContext":{"summary":"Runs an existing agent in a given database using a specific document as the agent's run context","description":"Provide an array of UNIDs, each unid will be executed by the agent. \nNOTE : NotesSession.documentContext must be used in the agent to access the relevant document. ","post":{"requestBody":{"description":"Name of agent","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AgentWithContextMessage","required":["agentName"],"properties":{"agentName":{"type":"string"},"unid":{"type":"string"},"returnMode":{"type":"string"}}},"examples":{"sample":{"value":{"agentName":"processJson","unids":["36EBDFD11D4381F280258600003ED607","36EBDFD11D4381F280258600003ED608"],"returnMode":"default"}},"sampleWithOutMode":{"value":{"agentName":"processJson","unids":["36EBDFD11D4381F280258600003ED607","36EBDFD11D4381F280258600003ED608"]}}}}},"required":true},"tags":["code"],"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object"},"examples":{"With form mode":{"value":{"@unid":"CAE3F1BD3EB1033A0025870A002CDE3A","@noteid":0,"@created":"2021-07-06T08:10:04Z","@lastmodified":"2021-07-06T08:10:04Z","@lastaccessed":"2021-07-06T08:10:04Z","@size":104,"@unread":false,"@etag":"W/\" 60e40fdc\"","Color":"Red","email":"gbranthwaite0@nba.com","first_name":"George","Form":"Customer","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite","Pet":"Black-capped chickadee"}},"Without form mode":{"value":{"agentResponse":"done"}}}}},"description":"Successful execution of agent"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"executeAgentWithContext","summary":"Runs an agent in a database, in real time, passing a document for context","description":"Runs an existing agent, serverside, passing an UNID of a document to act upon. NotesSession.documentContext can be used in the agent to access the relevant document. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser.","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/auth":{"summary":"Get an JWT session for a given user","description":"Auxilary login for users who exist in Domino with HTTP passwords","post":{"requestBody":{"description":"Username and password in Json format","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BasicAuthRequest"},"examples":{"AuthLogin":{"value":{"username":"AdminName","password":"AdminPassword"}},"Limit scope":{"value":{"password":"supersecret","username":"FirstName LastName","scope":"MAIL $DATA"}}}}},"required":true},"tags":["authentication"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResult"}}},"description":"Successful authentication"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"Unauthorized":{"value":{"status":401,"message":"Invalid credentials or account locked"}}}}},"description":"Unauthorized"}},"security":[{}],"operationId":"authLogin","summary":"Get JWT Session","description":"Login and retrieve JWT token","x-keep-version":1,"x-keep-scope":"ANY"}},"/odata/{dataSource}/$metadata":{"summary":"Retrieve data in ODATA format","description":"XML Metadata describing forms and views","get":{"tags":["odata"],"responses":{"200":{"content":{"application/xml":{"schema":{"type":"string"},"examples":{"ODataDbMetadataSample":{"value":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<edmx:Edmx xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"\r\n            xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"\r\n            Version=\"4.0\">\r\n    <edmx:DataServices>\r\n        <Schema Namespace=\"testdb\">\r\n            <EntityType HasStream=\"true\" Name=\"SampleForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Shape\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Taste\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"Entry\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"TestForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"first_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"last_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"gender\" Type=\"Edm.String\"/>\r\n                <Property Name=\"ip_address\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Pet\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityContainer Name=\"DefaultContainer\">\r\n                <EntitySet EntityType=\"testdb.SampleForm\" Name=\"SampleForm\">\r\n                    <Annotation String=\"SampleForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.Entry\" Name=\"Entry\">\r\n                    <Annotation String=\"Entry\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.TestForm\" Name=\"TestForm\">\r\n                    <Annotation String=\"TestForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n            </EntityContainer>\r\n        </Schema>\r\n    </edmx:DataServices>\r\n</edmx:Edmx>"}}},"text/xml":{"schema":{"type":"string"},"examples":{"ODataDbMetadataSample":{"value":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<edmx:Edmx xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"\r\n            xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"\r\n            Version=\"4.0\">\r\n    <edmx:DataServices>\r\n        <Schema Namespace=\"testdb\">\r\n            <EntityType HasStream=\"true\" Name=\"SampleForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Shape\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Taste\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"Entry\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"TestForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"first_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"last_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"gender\" Type=\"Edm.String\"/>\r\n                <Property Name=\"ip_address\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Pet\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityContainer Name=\"DefaultContainer\">\r\n                <EntitySet EntityType=\"testdb.SampleForm\" Name=\"SampleForm\">\r\n                    <Annotation String=\"SampleForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.Entry\" Name=\"Entry\">\r\n                    <Annotation String=\"Entry\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.TestForm\" Name=\"TestForm\">\r\n                    <Annotation String=\"TestForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n            </EntityContainer>\r\n        </Schema>\r\n    </edmx:DataServices>\r\n</edmx:Edmx>"}}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"status":404,"message":"A scope definition with that name cannot be found: demo","errorId":1112}}}}},"description":"No such database"}},"security":[{"basic":[]},{"jwt":[]}],"operationId":"getOdataMetadata","summary":"Get OData metadata in XML format.","description":"Get OData metadata, which returns in XML format.","x-keep-version":1},"parameters":[{"examples":{"Demo":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"path","required":true},{"examples":{"Current":{"value":"4.0"}},"name":"OData-MaxVersion","description":"What do we support","schema":{"type":"string"},"in":"header"},{"examples":{"Current":{"value":"4.0"}},"name":"OData-Version","description":"What version is requested","schema":{"type":"string"},"in":"header"},{"examples":{"Current":{"value":"3.0"}},"name":"MaxDataServiceVersion","description":"What's the dataservice","schema":{"type":"string"},"in":"header"}]},"/scope":{"summary":"Retrieve a Domino REST API configuration for scope of a domino database","description":"Operation on a Domino REST API configuration for a NSF.","get":{"tags":["scope"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/KeepDatabase"},"examples":{"database":{"value":{"apiName":"demonofieldgroup","nsfPath":"Demo.nsf","iconName":"mountain","icon":"Base64 stuff, preferably SVG","description":"Demo database","formulaEngine":"domino","schemaName":"demoNofieldGroup","requireRevisionToUpdate":false,"allowDecryption":true,"dqlAccess":true,"dqlFormula":{"formulaType":"domino","formula":"@True"},"allowCode":true,"openAccess":true,"forms":[{"formName":"SampleForm","alias":[],"formModes":[{"modeName":"default","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":["Form"],"fields":[{"name":"Age","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Name","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"readAccessFields":[{"name":"Age","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Name","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"writeAccessFields":[{"name":"Age","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Name","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}]},{"modeName":"dql","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":["Form"],"fields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"readAccessFields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"writeAccessFields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}]}]}],"views":[{"name":"($All)","alias":["($All)"],"unid":"0E35D520A1EBBB5B48258435003E8284"},{"name":"Customers","alias":["Customers"],"unid":"86C72C1BF64B6DF04825847100373215"}],"agents":[],"available":true,"isActive":true,"isDBFTIndex":true}},"databaseWithFieldInfo":{"value":{"apiName":"demofieldgroup","nsfPath":"Demo.nsf","iconName":"mountain","icon":"Base64 stuff, preferably SVG","description":"Demo database","formulaEngine":"domino","schemaName":"demofieldGroup","requireRevisionToUpdate":false,"allowDecryption":true,"dqlAccess":true,"dqlFormula":{"formulaType":"domino","formula":"@True"},"allowCode":true,"openAccess":true,"forms":[{"formName":"SampleForm","alias":[],"formModes":[{"modeName":"default","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":["Form"],"fields":[{"name":"Age","fieldAccess":"RW","type":"array","fieldGroup":"person","format":"string","items":{"fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Name","fieldAccess":"RW","type":"array","fieldGroup":"person","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"readAccessFields":[{"name":"Age","fieldAccess":"RW","type":"array","fieldGroup":"person","format":"string","items":{"fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Name","fieldAccess":"RW","type":"array","fieldGroup":"person","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"writeAccessFields":[{"name":"Age","fieldAccess":"RW","type":"array","fieldGroup":"person","format":"string","items":{"fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Name","fieldAccess":"RW","type":"array","fieldGroup":"person","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}]},{"modeName":"dql","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":["Form"],"fields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"readAccessFields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"writeAccessFields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}]}]}],"views":[{"name":"($All)","alias":["($All)"],"unid":"0E35D520A1EBBB5B48258435003E8284"},{"name":"Customers","alias":["Customers"],"unid":"86C72C1BF64B6DF04825847100373215"}],"agents":[],"available":true,"isActive":true,"isDBFTIndex":true}}}}},"description":"Successful retrieval"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"status":404,"message":"A scope definition with that name cannot be found: testscope","errorId":1112}}}}},"description":"No such scope"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"deprecated":false,"security":[{"jwt":[]}],"operationId":"getScope","summary":"Retrieves configuration for one scope mapped to a database schema","description":"Get the configuration for specified scope","x-keep-version":1},"parameters":[{"examples":{"default":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/scope/mode/{form}/{mode}":{"summary":"Retrieve a Domino REST API configuration for specified form in specified mode of a scope","description":"Operation on a Domino REST API configuration for a NSF.","get":{"tags":["scope"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/KeepForm"}}},"description":"Successful retrieval"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"status":404,"message":"A scope definition with that name cannot be found: testscope","errorId":1112}}}}},"description":"FormMode is not found for the form in the scope"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"deprecated":false,"security":[{"jwt":[]}],"operationId":"fetchFormModes","summary":"Retrieves configuration for one mode of a form of a scope mapped to a database schema","description":"Get configuration for one mode of the form of specified scope.","x-keep-version":1},"parameters":[{"examples":{"default":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"form","description":"name or alias as stored in document","schema":{"type":"string"},"in":"path","required":true},{"name":"mode","description":"access mode","schema":{"type":"string"},"in":"path","required":true}]},"/scope/form/{form}":{"summary":"Retrieve a Domino REST API configuration for specified form in database","description":"Operation on a Domino REST API configuration for a NSF.","get":{"tags":["scope"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/KeepForm"}}},"description":"Successful retrieval"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"status":404,"message":"A scope definition with that name cannot be found: testscope","errorId":1112}}}}},"description":"No configured form for this scope "},"500":{"$ref":"#/components/responses/500InternalServerError"}},"deprecated":false,"security":[{"jwt":[]}],"operationId":"getScopeForm","summary":"Retrieves configuration for one form of a scope mapped to a database schema","description":"Get configuration for the form of specified scope.","x-keep-version":1},"parameters":[{"examples":{"default":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"form","description":"name or alias as stored in document","schema":{"type":"string"},"in":"path","required":true}]},"/raw":{"summary":"Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document.","description":"Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document.\nNo schema to normalize or filter the document is applied. Json is written as-is into the Note.\n\nTo be able to use this endpoint a form mode \"raw\" must exist for the value of \"form\" in JSON\nand the current user needs the permission (set by formula in the \"raw\" mode) to use the mode","post":{"requestBody":{"description":"Document body in JSON format. Key/value pairs of fields and their values to update, 'Form' is required.\n","content":{"application/json":{"schema":{"type":"object"},"examples":{"createDocument":{"value":{"first_name":"George","last_name":"Branthwaite","email":"gbranthwaite0@nba.com","gender":"Male","ip_address":"91.254.204.27","Color":"Red","Pet":"Black-capped chickadee","Form":"Customer"}}}}},"required":true},"tags":["data"],"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"parentUnid","description":"UNID of an existing document, to make this a response document","schema":{"type":"string"},"in":"query"},{"examples":{"Customer":{"value":"Customer"}},"name":"form","description":"Name of the form to create a document for","schema":{"type":"string"},"in":"query","required":true}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"document":{"value":{"@meta":{"noteid":44026,"unid":"1C62D55D75387684482588DA001F4428","created":"2022-10-13T13:41:30.64+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","addedtofile":"2022-10-13T13:41:30.68+08:00","noteclass":["DATA","DOCUMENT"],"unread":true,"revision":"00000001001F442C482588DA","size":570},"Form":"Customer","Color":"Red","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite","Pet":"Black-capped chickadee"}}}}},"description":"Successful creation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"createDocumentRaw","summary":"Create a new document for a specified form without data conversion","description":"Create a new document for a specified form.","x-keep-version":1,"x-preview":true},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/raw/{unid}":{"summary":"Acts on a document without a schema conversion applied","description":"No schema to normalize or filter the document is applied. Json is read/written as-is from/into the Note.\n\nTo be able to use this endpoint a form mode \"raw\" must exist for the value of \"form\" in JSON (write)\nor the value of the \"form\" item in the document (read) \nand the current user needs the permission (set by formula in the \"raw\" mode) to use the mode","get":{"tags":["data"],"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"compute":{"value":"true"}},"name":"computeWithForm","description":"Should a document be computed with its form's \"Default Value\", \"Input Translation\" and \"Input Validation\" formulas before retrieval","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"document":{"value":{"@meta":{"noteid":44026,"unid":"1C62D55D75387684482588DA001F4428","created":"2022-10-13T13:41:30.64+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","addedtofile":"2022-10-13T13:41:30.68+08:00","noteclass":["DATA","DOCUMENT"],"unread":true,"revision":"00000001001F442C482588DA","size":570},"Form":"Customer","Color":"Red","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite","Pet":"Black-capped chickadee"}}}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getDocumentRaw","summary":"Retrieve a given document with all items","description":"All items are returned, no item name normalization or translation is applied\nNo schema to normalize or filter the document is applied. Json is returned as-is from the Note.\n\nTo be able to use this endpoint a form mode \"raw\" must exist for the value of \"form\" item in the document\nand the current user needs the permission (set by formula in the \"raw\" mode) to use the mode\n\nUse on your own risk!","x-keep-version":1,"x-preview":true},"put":{"requestBody":{"description":"Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. 'Form' is required.","content":{"application/json":{"schema":{"type":"object"},"examples":{"UpdateDocument":{"value":{"first_name":"Madison","last_name":"Branthwaite","email":"mbranthwaite0@nba.com","gender":"Female","ip_address":"91.254.204.27","Color":"Puce","Pet":"Black-capped chickadee","Form":"TestForm"}}}}},"required":true},"tags":["data"],"parameters":[{"name":"parentUnid","description":"UNID of an existing document, to make this a response document","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"SampleUpdateDocument":{"value":{"@meta":{"noteid":44026,"unid":"1C62D55D75387684482588DA001F4428","created":"2022-10-13T13:41:30.64+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","addedtofile":"2022-10-13T13:41:30.68+08:00","noteclass":["DATA","DOCUMENT"],"unread":true,"revision":"00000001001F442C482588DA","size":570},"Form":"Customer","Color":"Red","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite","Pet":"Black-capped chickadee"}}}}},"description":"Successful mode operation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"updateDocumentRaw","summary":"Perform an update on the document with anything that's in JSON","description":"All items are updated, no item name normalization or translation is applied\nNo schema to normalize or filter the document is applied. Json is written as-is into the Note.\n\nTo be able to use this endpoint a form mode \"raw\" must exist for the value of \"form\" item in the document\nand the current user needs the permission (set by formula in the \"raw\" mode) to use the mode\n\nUse on your own risk!","x-keep-version":1,"x-preview":true},"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"name":"unid","description":"Universal Id of the document to be acted upon","schema":{"type":"string"},"in":"path","required":true}]},"/bulk/unid":{"summary":"Retrieve multiple documents with a single call by unids","description":"Retrieve multiple documents with a single call by unids","post":{"requestBody":{"description":"Object with mode and array document UNIDs.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkUnids"},"examples":{"SampleBulkGetDocumentByUNID":{"value":{"mode":"default","unids":["D2E9CF578D0B3844482588140043410F","05B08E4A7874C01E4825881400434111","D650B4BF0DE3BB714825881400434113"]}},"SampleBulkGetDocByUNIDNoMode":{"value":{"unids":["D2E9CF578D0B3844482588140043410F","05B08E4A7874C01E4825881400434111","D650B4BF0DE3BB714825881400434113"]}},"Request with mode":{"value":{"mode":"mymode","unids":["20E0116E35C1A29300258A3100587BB4","1CC22F3EF91B466200258A3100584D9B","8D2CFCF259A6197E00258A31004F8853"]}}}}},"required":true},"tags":["data"],"parameters":[{"name":"meta","description":"When set to false, all metadata Json items on the top level of an object get suppressed.\nDefault is true","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object"}},"examples":{"SampleResponse":{"value":[{"@unid":"D2E9CF578D0B3844482588140043410F","@noteid":6666,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@lastaccessed":"2022-03-30T08:44:58+08:00","@size":134,"@unread":true,"@etag":"W/\" 6243a80a\"","Color":"Purple","form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@unid":"05B08E4A7874C01E4825881400434111","@noteid":6670,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@lastaccessed":"2022-03-30T08:44:58+08:00","@size":134,"@unread":false,"@etag":"W/\" 6243a80a\"","Color":"Purple","form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@unid":"D650B4BF0DE3BB714825881400434113","@noteid":6674,"@created":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@lastaccessed":"2022-03-30T08:44:58+08:00","@size":134,"@unread":false,"@etag":"W/\" 6243a80a\"","Color":"Purple","form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"}]}}}},"description":"Creation result. Returns success / failure for each document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"bulkGetDocumentsByUnid","summary":"Retrieve multiple documents in a single call by unid","description":"Retrieve multiple documents in a single call by unid","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"RichTextAsMime":{"value":"mime"}},"name":"richTextAs","description":"The format RichText fields will be returned.  The default if unspecified is mime.","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"},{"name":"meta","description":"When set to false, all Json items on the top level of an object get suppressed.\nDefault is true","schema":{"type":"boolean"},"in":"query"}]},"/docmeta/{unid}":{"summary":"Retrieves document meta data including the form name","description":"Returns a document's form, creation date, update date, unid, nodeid. Mainly used in Foundry","get":{"tags":["data"],"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentMeta"}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getDocumentMetadata","summary":"Retrieves document meta data including the form name","description":"Retrieves document meta data including the form name","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"name":"unid","description":"Universal Id of the document to be acted upon","schema":{"type":"string"},"in":"path","required":true}]},"/scope/access":{"summary":"Retrieve ACCESS levels for Domino REST API configuration","description":"Operation on a Domino REST API configuration for a NSF.","get":{"tags":["scope"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScopeAccessUserEntry"},"examples":{"ScopeAccessFound":{"value":{"User":"CN=Doctor Notes/O=ProjectKeep","Level":"MANAGER","Roles":["[SampleRole]"],"Flags":["CREATE_PRAGENT","CREATE_PRFOLDER","PERSON","CREATE_FOLDER","CREATE_LOTUSSCRIPT","PUBLICREADER","PUBLICWRITER"]}}}}},"description":"Successful retrieval"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"status":404,"message":"A scope definition with that name cannot be found: testscope","errorId":1112}}}}},"description":"No such scope"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"deprecated":false,"security":[{"jwt":[]}],"operationId":"getScopeAccess","summary":"Provides information on ACCESS levels for current user","description":"Get information on ACCESS levels for current user","x-keep-version":1},"parameters":[{"examples":{"default":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/document/{unid}":{"summary":"Actions on a document at a specific mode","description":"Update access to a document will typically restrict which fields on the document can be changed.\n\nModes are used to define statuses for a document, and will a definition identifying which fields can be seen and changed. A patch request that includes fields outside those restrictions will throw a 400 error (bad request), specifying which fields are illegal or missing.","get":{"tags":["data"],"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"compute":{"value":"true"}},"name":"computeWithForm","description":"Should a document be computed with its form's \"Default Value\", \"Input Translation\" and \"Input Validation\" formulas before retrieval","schema":{"type":"boolean"},"in":"query"},{"name":"meta","description":"When set to false, all metadata Json items on the top level of an object get suppressed.\nDefault is true","schema":{"type":"boolean"},"in":"query"},{"examples":{"RichTextAsMime":{"value":"mime"},"Plain Text":{"value":"plain"},"as HTML":{"value":"html"},"as markdown":{"value":"markdown"}},"name":"richTextAs","description":"The format RichText fields will be returned.  The default if unspecified is html.","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"},{"name":"markRead","description":"Mark the document as read by the current user when the operation completes","schema":{"type":"boolean"},"in":"query"},{"name":"markUnread","description":"Mark the document as unread by the current user when the operation completes","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"document":{"value":{"@meta":{"noteid":44026,"unid":"1C62D55D75387684482588DA001F4428","created":"2022-10-13T13:41:30.64+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","addedtofile":"2022-10-13T13:41:30.68+08:00","noteclass":["DATA","DOCUMENT"],"unread":true,"revision":"00000001001F442C482588DA","size":570},"Form":"Customer","Color":"Red","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite","Pet":"Black-capped chickadee"}}}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getDocument","summary":"Retrieve a given document at its appropriate mode","description":"Retrieve a given document at its appropriate mode","x-keep-version":1},"put":{"requestBody":{"description":"Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. 'Form' is required.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSimpleRequest"},"examples":{"UpdateDocument":{"value":{"first_name":"Madison","last_name":"Branthwaite","email":"mbranthwaite0@nba.com","gender":"Female","ip_address":"91.254.204.27","Color":"Puce","Pet":"Black-capped chickadee","Form":"TestForm"}}}}},"required":true},"tags":["data"],"parameters":[{"name":"parentUnid","description":"UNID of an existing document, to make this a response document","schema":{"type":"string"},"in":"query"},{"examples":{"revisionSample":{"value":"26372571825596dc0db73d0eacf1eacb"}},"name":"revision","description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.","schema":{"type":"string"},"in":"query"},{"examples":{"RichTextAsMime":{"value":"mime"}},"name":"richTextAs","description":"The format RichText fields will be returned.  The default if unspecified is html.","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"},{"name":"markUnread","description":"Mark the document as unread by the current user when the operation completes","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"SampleUpdateDocument":{"value":{"@meta":{"noteid":44026,"unid":"1C62D55D75387684482588DA001F4428","created":"2022-10-13T13:41:30.64+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","addedtofile":"2022-10-13T13:41:30.68+08:00","noteclass":["DATA","DOCUMENT"],"unread":true,"revision":"00000001001F442C482588DA","size":570},"Form":"Customer","Color":"Red","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite","Pet":"Black-capped chickadee"}}}}},"description":"Successful mode operation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"updateDocument","summary":"Perform an update on the document at the relevant mode","description":"Perform an update on the document at the relevant mode","x-keep-version":1},"delete":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"},"examples":{"success":{"value":{"status":"OK","statusCode":200,"message":"deletion complete","unid":"61CCE871E79E8DDB8025852F004DFF2D"}}}}},"description":"Returns data from the document"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"deleteDocument","summary":"Delete the given document","description":"Delete the given document","x-keep-version":1},"patch":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSimpleRequest"}}},"required":true},"tags":["data"],"parameters":[{"name":"parentUnid","description":"UNID of an existing document, to make this a response document","schema":{"type":"string"},"in":"query"},{"examples":{"revisionSample":{"value":"26372571825596dc0db73d0eacf1eacb"}},"name":"revision","description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.","schema":{"type":"string"},"in":"query"},{"examples":{"RichTextAsMime":{"value":"mime"}},"name":"richTextAs","description":"The format RichText fields will be returned.  The default if unspecified is html.","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"},{"name":"markUnread","description":"Mark the document as unread by the current user when the operation completes","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"SampleUpdateDocument":{"value":{"@meta":{"noteid":44026,"unid":"1C62D55D75387684482588DA001F4428","created":"2022-10-13T13:41:30.64+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","addedtofile":"2022-10-13T13:41:30.68+08:00","noteclass":["DATA","DOCUMENT"],"unread":true,"revision":"00000001001F442C482588DA","size":570},"Form":"Customer","Color":"Red","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite","Pet":"Black-capped chickadee"}}}}},"description":"Successful mode operation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"patchDocument","summary":"Perform a document update on only the fields you specify in the request.","description":"Provide a JSON structure that is a subset of the document items.\nitems not mentioned stay untouched, items with null values are removed","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"name":"unid","description":"Universal Id of the document to be acted upon","schema":{"type":"string"},"in":"path","required":true},{"examples":{"defaultValue":{"value":"default"},"ForApprover":{"value":"approver"}},"name":"mode","description":"mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only","schema":{"type":"string"},"in":"query","required":false}]},"/odata/{dataSource}":{"summary":"Retrieve ODATA service Document","description":"JSON Structure describing what a database can do","get":{"tags":["odata"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ODataDbResponse"},"examples":{"ODataDbSample":{"value":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata","value":[{"name":"Entry","kind":"EntitySet","url":"Entry"},{"name":"OdataSampleForm","kind":"EntitySet","url":"OdataSampleForm"},{"name":"NewForm","kind":"EntitySet","url":"NewForm"},{"name":"SampleEntry","kind":"EntitySet","url":"SampleEntry"},{"name":"TestForm","kind":"EntitySet","url":"TestForm"}]}}}},"text/plain":{"schema":{"type":"string"},"examples":{"ODataDbSimpleText":{"value":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata","value":[{"name":"Entry","kind":"EntitySet","url":"Entry"},{"name":"OdataSampleForm","kind":"EntitySet","url":"OdataSampleForm"},{"name":"NewForm","kind":"EntitySet","url":"NewForm"},{"name":"SampleEntry","kind":"EntitySet","url":"SampleEntry"},{"name":"TestForm","kind":"EntitySet","url":"TestForm"}]}}}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"status":404,"message":"A scope definition with that name cannot be found: demo","errorId":1112}}}}},"description":"No such database"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"basic":[]},{"jwt":[]}],"operationId":"getOdataServiceInfo","summary":"Get OData Configured Forms in a specific Domino REST API database","description":"Return OData Configured Forms and OData Context from a specific Domino REST API database.\n","x-keep-version":1},"parameters":[{"examples":{"Demo":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"path","required":true},{"examples":{"Current":{"value":"4.0"}},"name":"OData-MaxVersion","description":"What do we support","schema":{"type":"string"},"in":"header"},{"examples":{"Current":{"value":"4.0"}},"name":"OData-Version","description":"What version is requested","schema":{"type":"string"},"in":"header"},{"examples":{"Current":{"value":"3.0"}},"name":"MaxDataServiceVersion","description":"What's the dataservice","schema":{"type":"string"},"in":"header"}]},"/odata/{dataSource}/{name}":{"summary":"Retrieve ODATA service Document","description":"JSON Structure describing what a database can do","get":{"tags":["odata"],"parameters":[{"name":"$select","description":"Comma separated list of fields to return","schema":{"type":"string"},"in":"query"},{"name":"name","description":"Form or view name to query","schema":{"type":"string"},"in":"path","required":true},{"name":"$top","description":"How many responses shall be provided","schema":{"type":"integer"},"in":"query"},{"name":"$filter","description":"OData Query to filter results server side","schema":{"type":"string"},"in":"query"},{"name":"$search","description":"Searching for content","schema":{"type":"string"},"in":"query"},{"name":"$orderby","description":"Sort order of result","schema":{"type":"string"},"in":"query"},{"name":"$skip","description":"Start at what number of entries","schema":{"type":"integer"},"in":"query"},{"name":"$count","description":"only count elements","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ODataDbNameResponse"},"examples":{"ODataDbNameResponse":{"value":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata#TestForm","value":[{"@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261","@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261","@odata.etag":"W/\" 6242a8fb\"","Hex0040_unid":"40618262F3167AD74825881400245261","Color":"Yellow","Form":"TestForm","Pet":"Kelp gull","email":"patger7k@soup.io","first_name":"Pablo","gender":"Male","ip_address":"245.54.137.150","last_name":"Atger"},{"@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475","@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475","@odata.etag":"W/\" 6242aac3\"","Hex0040_unid":"99A6E13F05C7153F4825881400250475","Color":"Yellow","Form":"TestForm","Pet":"Kelp gull","email":"patger7k@soup.io","first_name":"Pablo","gender":"Male","ip_address":"245.54.137.150","last_name":"Atger"}]}}}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"status":404,"message":"A scope definition with that name cannot be found: demo","errorId":1112}}}}},"description":"No such database"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"basic":[]},{"jwt":[]}],"operationId":"fetchOdata","summary":"Get documents for the specific Form in OData format","description":"Return documents in a specific Form in OData format","x-keep-version":1},"post":{"requestBody":{"description":"The body of the document is in JSON format. Fields must be created using key/value pairs and their values. As some form modes do not allow editable fields, an empty JSON object should be returned.\n\nYou'll need to use the Key \"Form\" name, and it must be set up in \"odata\" mode.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSimpleRequestUpdate"},"examples":{"CreateDocument":{"value":{"first_name":"Winslow","last_name":"Andrews","email":"wandrews@canofsleep.com","gender":"Male","ip_address":"192.168.1.1","Color":"Pthalo Blue","Pet":"American Howling Retriever"}}}}},"required":true},"tags":["odata"],"parameters":[{"name":"name","description":"Form or view name to query","schema":{"type":"string"},"in":"path","required":true}],"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ODataDocument"},"examples":{"ODataDbNameSample":{"value":{"@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","@odata.etag":"W/\" 62480c60\"","Hex0040_unid":"F2A2C0994C07063E48258818002FCDAB","Color":"Pthalo Blue","Form":"TestForm","Pet":"American Howling Retriever","email":"wandrews@canofsleep.com","first_name":"Winslow","gender":"Male","ip_address":"192.168.1.1","last_name":"Andrews"}}}}},"description":"Successful creation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"basic":[]},{"jwt":[]}],"operationId":"createOdata","summary":"Create a document in a form using OData format","description":"Creates a document in a form using 'odata' mode (odata mode must be configured in the form) and returns the document with OData metadata.","x-keep-version":1},"parameters":[{"examples":{"Demo":{"value":"demo"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"path","required":true},{"name":"name","description":"Form or view name","schema":{"type":"string"},"in":"path","required":true},{"examples":{"Current":{"value":"4.0"}},"name":"OData-MaxVersion","description":"What do we support","schema":{"type":"string"},"in":"header"},{"examples":{"Current":{"value":"4.0"}},"name":"OData-Version","description":"What version is requested","schema":{"type":"string"},"in":"header"},{"examples":{"Current":{"value":"3.0"}},"name":"MaxDataServiceVersion","description":"What's the dataservice","schema":{"type":"string"},"in":"header"}]},"/auth/logout":{"summary":"Log out a current JWT based user","description":"Log out a current JWT based user","get":{"tags":["authentication"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"},"examples":{"logout":{"value":{"statusText":"OK","status":200,"message":"CN=John Doe/O=ProjectKeep logged out (0 days, 1 hours, 59 minutes, 40 seconds.)"}}}}},"description":"Logout body, fixed format"}},"security":[{"jwt":[]}],"operationId":"authLogoutGet","summary":"Logout and invalidate token.","description":"Invalidates token in header. Only use this operation when GET for logout is really needed, otherwise it is recommended to use POST operation for logout.","x-keep-scope":"ANY","x-keep-version":1},"post":{"requestBody":{"description":"Logout body, fixed format","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogoutBody"},"examples":{"AuthLogout":{"value":{"logout":"Yes"}}}}},"required":true},"tags":["authentication"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"},"examples":{"logout":{"value":{"statusText":"OK","status":200,"message":"CN=John Doe/O=ProjectKeep logged out (0 days, 1 hours, 59 minutes, 40 seconds.)"}}}}},"description":"Successful logout"}},"security":[{"jwt":[]}],"operationId":"authLogout","summary":"Logout and invalidate token","description":"Logout and invalidate token","x-keep-version":1,"x-keep-scope":"ANY"}},"/authforoauthflow":{"summary":"Get an JWT session for a given user","description":"Auxilary login for use with OAuth flow to process the consent screen","post":{"requestBody":{"description":"Username and password in Json format","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BasicAuthForOauthFlow"},"examples":{"AuthLogin":{"value":{"password":"{{AdminPassword}}","username":"{{AdminName}}","scope":"oauth"}}}}},"required":true},"tags":["authentication"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResult"}}},"description":"Successful authentication"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"Unauthorized":{"value":{"status":401,"message":"Invalid credentials or account locked"}}}}},"description":"Unauthorized"}},"security":[{}],"operationId":"loginForOAuthFlow","summary":"Get JWT Session for OAuth consent screen","description":"Username, Password & scope = \"oauth\" are required to use this endpoint","x-keep-version":1,"x-keep-scope":"ANY"}},"/info":{"summary":"Provides basic information about the Domino REST API and Domino runtime","description":"Will return Domino and Domino REST API Version\nFor more complete information use the management endpoints typically port 8889","get":{"tags":["admin"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/KeepInfo"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getInfo","summary":"Get information about Domino and Domino REST API Version","description":"JSON element with basic version information","x-keep-version":1,"x-keep-scope":"ANY"}},"/scopes":{"summary":"URL Endpoint for listing Domino REST API  enabled scopes","description":"A list of NSF that have at least one schema linked to a scope name and marked as active - starting point for exploring available data","get":{"tags":["scope"],"parameters":[{"name":"includeAll","description":"Include active and inactive scopes","schema":{"type":"boolean"},"in":"query"},{"name":"skipIcon","description":"Skips the icon data","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/KeepDBShort"}},"examples":{"KeepDatabases":{"value":[{"apiName":"names","nsfPath":"names.nsf","description":"This is scope for names","schemaName":"names","isActive":false},{"apiName":"demotest","nsfPath":"Demo.nsf","description":"This is a test demo scope","schemaName":"demotest","isActive":true},{"apiName":"demolist","nsfPath":"Demo.nsf","description":"This is a test demo for some function of API","schemaName":"demolist","isActive":true}]}}}},"description":"JSON list of scopes enabled for Domino REST API access"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"fetchScopes","summary":"Retrieve lists of scopes available based on query","description":"Get a list of scopes enabled by the Domino Administrator for Domino REST API access as JSON","x-keep-version":1,"x-keep-scope":"ANY"}},"/userinfo":{"summary":"Provides basic information about the currently logged in user","description":"Will return Name and group membership info","get":{"tags":["admin"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInfo"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getUserInfo","summary":"Get information about the currently-authenticated user","description":"JSON element with OIDC-compatible user information","x-keep-version":1,"x-keep-scope":"ANY"},"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyObject"}}}},"tags":["admin"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInfo"}}},"description":"User info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getUserInfoPost","summary":"Get information about the currently-authenticated user","description":"JSON element with OIDC-compatible user information","x-keep-version":1,"x-keep-scope":"ANY"}},"/preview":{"summary":"Lists all endpoints that are marked preview","description":"Allows to see what's coming when activation","get":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PreviewInfo"}}}},"description":"Successful list"}},"security":[{"jwt":[]}],"operationId":"getPreviewFeatures","summary":"Shows preview endpoints","x-keep-version":1},"x-keep-version":1,"x-preview":true,"x-keep-scope":"ANY"},"/openapi":{"summary":"Gets a Domino Database-specific OpenAPI.   Reference link: https://spec.openapis.org/oas/v3.0.2","description":"resolves db, form, views into database specific enums","get":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object"}}},"description":"Data gets returned as OpenAPI compliant file.\nNo reference to OpenAPI here to avoid inception\nof a schema inside a schema"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{}],"operationId":"getOpenAPI","summary":"Get Domino Database-specific OpenAPI spec","description":"Get Domino Database-specific OpenAPI spec","x-keep-version":1},"parameters":[{"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"voltmx","description":"Produce OpenAPI in VoltMX compatible format","schema":{"type":"boolean"},"in":"query"}],"x-keep-scope":"ANY"},"/odata":{"summary":"Get a list of ODATA enabled databases","description":"Get a list of ODATA enabled databases","get":{"tags":["odata"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object"},"examples":{"odataSample":{"value":{"demoschema":{"name":"demoschema","url":"odata/demoschema","meta":"odata/demoschema/$metadata","description":"demoschema","iconname":"binoculars","icon":"Base64 stuff, preferably SVG"},"apitest":{"name":"apitest","url":"odata/apitest","meta":"odata/apitest/$metadata","description":"API Test Schema Based on Demo","iconname":"travel","icon":"Base64 stuff, preferably SVG"}}}}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{}],"operationId":"fetchOdataList","summary":"Get scopes that have been enabled or created in OData as a form mode in JSON Object structure","description":"Return all Domino Rest API databases and scopes that support OData form mode, as well as important OData details such as URL and meta in JSON Object structure.","x-keep-version":1,"x-keep-scope":"ANY"}},"/attachments/{unid}":{"summary":"Add an attachment to a document","description":"Add an attachment to a document","post":{"requestBody":{"description":"It's a file requested. The fieldName is not required. ","content":{"multipart/form-data":{"schema":{"type":"object","properties":{"filename":{"type":"array","items":{"format":"binary","type":"string"}}}}}},"required":true},"tags":["data"],"parameters":[{"name":"fieldName","description":"Name of the rich text field to attach this attachment to.  If this is left off the attachment is attached to the document.","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AttachmentsUNIDResponseMessage"},"examples":{"SingleAttachment":{"value":{"status":"upload complete","filename":"myFile.xlsx"}},"MultipleAttachments":{"value":{"status":"upload complete","filenames":["myFile.xlsx","myFile2.xlsx"]}}}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"createDocumentAttachment","summary":"Creates a new attachment in an existing document","description":"The filename passed will be used, if unique. Otherwise a unique name will be evaluated from the passed filename.","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"name":"unid","description":"Universal Id of the document to be acted upon","schema":{"type":"string"},"in":"path","required":true},{"name":"fieldName","description":"Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.","schema":{"type":"string"},"in":"query","required":false}]},"/bulk/etag":{"summary":"Determine whether multiple documents exist with a single call by unids, returning ETags","description":"Determine whether multiple documents exist with a single call by unids, returning ETags","post":{"requestBody":{"description":"Object with mode and array document UNIDs.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkUnids"},"examples":{"SampleBulkGetDocumentByUNID":{"value":{"mode":"default","unids":["D2E9CF578D0B3844482588140043410F","05B08E4A7874C01E4825881400434111","D650B4BF0DE3BB714825881400434113"]}},"SampleBulkGetDocByUNIDNoMode":{"value":{"unids":["D2E9CF578D0B3844482588140043410F","05B08E4A7874C01E4825881400434111","D650B4BF0DE3BB714825881400434113"]}}}}},"required":true},"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentExistencePayload"},"examples":{"SampleResponse":{"value":{"D2E9CF578D0B3844482588140043410F":"W/\" 6243a80a\""}}}}},"description":"Existence check result. Returns status and ETag for each document, keyed by UNID"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"bulkDocumentEtagByUnid","summary":"Determine whether multiple documents exist with a single call by unids, returning ETags","description":"Determine whether multiple documents exist with a single call by unids, returning ETags","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/bulk/folder":{"summary":"Adds or removes documents from a folder","description":"Adds or removes documents from a folder","post":{"requestBody":{"description":"Object with mode and array document UNIDs.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkFolderDocuments"},"examples":{"SampleBulkGetDocumentByUNID":{"value":{"mode":"default","action":"add","folderName":"My Folder","unids":["D2E9CF578D0B3844482588140043410F","05B08E4A7874C01E4825881400434111","D650B4BF0DE3BB714825881400434113"]}},"SampleBulkGetDocByUNIDNoMode":{"value":{"action":"remove","folderName":"My Folder","unids":["D2E9CF578D0B3844482588140043410F","05B08E4A7874C01E4825881400434111","D650B4BF0DE3BB714825881400434113"]}}}}},"required":true},"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StatusMessage"}},"examples":{"SampleResponse":{"value":{"D2E9CF578D0B3844482588140043410F":"W/\" 6243a80a\""}}}}},"description":"Existence check result. Returns status for each document, keyed by UNID"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"bulkDocumentFolderByUnid","summary":"Adds or removes documents from a folder","description":"Adds or removes documents from a folder","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/lists/{name}":{"summary":"Those are list entries, not the underlying documents","description":"Those are list entries, not the underlying documents","get":{"tags":["data"],"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"mode","description":"Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode.","schema":{"type":"string"},"in":"query"},{"name":"meta","description":"When set to false, all metadata Json items on the top level of an object get suppressed.\nDefault is true","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{}},"examples":{"sample":{"value":[{"@unid":"B66880940B8DDC12802585180049E945","@noteid":82542,"@index":"1","$0":"null","$10":"Aaron Aaron","City":"Kansas City","Created":"2020-02-24T13:27:18.450Z","EMail":"aaaron@renovations.com","FirstName":"Aaron","Id":"CN=Aaron Aaron/O=Renovations","LastName":"Aaron","State":"KS"}]}}}},"description":"Data coming back, including unids. Metadata is listed first, with JSON property names prefixed with \"@\". All entry fields follow, output in alphabetical order."},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"message":"The list {name} is not configured for this database","status":404}}}}},"description":"Specified view name is not found"}},"security":[{"jwt":[]}],"operationId":"fetchViewEntries","summary":"Pulls in view data","description":"Pulls in view data","x-keep-version":1},"parameters":[{"name":"count","description":"How many entries shall be returned, default = 1000, All entries up to Integer.MAX_VALUE = -1","schema":{"type":"integer"},"in":"query"},{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"name","description":"Name of the view or folder","schema":{"type":"string"},"in":"path","required":true},{"name":"scope","description":"What shall the view return:\n- document entries\n- category names\n- all","schema":{"enum":["all","categories","documents"],"type":"string"},"in":"query","required":false},{"name":"start","description":"at which entry should return values start (zero based), default = 0","schema":{"type":"integer"},"in":"query"},{"examples":{"NoKey - 0 key":{"value":""},"State - 1 key":{"value":["MI"]},"State and City - 2 keys":{"value":["MI","Ann Arbor"]}},"name":"key","description":"Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL.  The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","schema":{"type":"array","items":{"type":"string"}},"in":"query"},{"name":"keyAllowPartial","description":"Select by partial Key.  Default is false (key match is exact)","schema":{"type":"boolean"},"in":"query"},{"name":"documents","description":"Shall the query return documents instead of view entries","schema":{"type":"boolean"},"in":"query"},{"name":"meta","description":"When set to false, all Json items on the top level of an object get suppressed.\nDefault is true","schema":{"type":"boolean"},"in":"query"},{"name":"metaAdditional","description":"Additional metadata that is not included in the View.  This may have a slight \nperformance cost so use only if necessary.","schema":{"type":"boolean"},"in":"query"},{"name":"column","description":"Column for alternative sorting. This requires the list to be designed for indexing on this column","schema":{"type":"string"},"in":"query"},{"name":"direction","description":"The direction for alternative sorting. This is ignored unless \"column\" query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set.","schema":{"enum":["asc","desc"],"type":"string"},"in":"query"},{"name":"startsWith","description":"A character combination to perform a partial match to identify a starting point. The character combination will be applied to the \"column\" and \"direction\" passed in the query string. This cannot be combined with the \"keys\" parameter, i.e. you cannot filter on keys and startwith within that key.","schema":{"type":"string"},"in":"query"},{"name":"richTextAs","description":"The format RichText fields will be returned when retrieving documents instead of view entries.  The default if unspecified is mime.","schema":{"$ref":"#/components/schemas/RichTextRepresentation"},"in":"query"},{"name":"distinctDocuments","description":"Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.","schema":{"type":"boolean"},"in":"query"},{"name":"markRead","description":"When retrieving documents instead of view entries, mark them as read by the current user after retrieval","schema":{"type":"boolean"},"in":"query"},{"name":"markUnread","description":"When retrieving documents instead of view entries, mark them as unread by the current user after retrieval","schema":{"type":"boolean"},"in":"query"},{"name":"unreadOnly","description":"Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents","schema":{"type":"boolean"},"in":"query"},{"name":"ftSearchQuery","description":"Full-text search query to filter the contents of the list","schema":{"type":"string"},"in":"query"},{"name":"category","description":"Category to restrict view queries to","schema":{"type":"array","items":{"type":"string"}},"in":"query","required":false},{"name":"startKey","description":"Key value for the first entry to retrieve. This is treated as a greater-than-or-equal lookup","schema":{"type":"string"},"in":"query"},{"name":"untilKey","description":"Key value to stop traversal when used in combination with startKey. This is treated as a greater-than-or-equal lookup and represents the first value to not return","schema":{"type":"string"},"in":"query"},{"name":"keyType","description":"The type of the keys used in startKey and untilKey","schema":{"enum":["text","number","time"],"type":"string"},"in":"query"}]},"/listspivot/{name}":{"summary":"Performs Pivot table operation on list entries","description":"Operates on list entries only, not the underlying documents","get":{"tags":["data"],"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"mode","description":"Document mode to retrieve the documents with. Current user must qualify for those","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object"},"examples":{"listspivotExample":{"value":{"Basic Industries":{"Newsletter":{"count":100,"min":"Daily","max":"Yearly"},"gender":{"count":100,"min":"Female","max":"Male"},"Assets":{"count":100,"min":"1069916.51","max":"988208.57","sum":5.261524021599999E8},"FullName":{"count":100,"min":"Alexis Judd","max":"Zane Gioan"},"Country":{"count":100,"min":"Afghanistan","max":"Yemen"},"email":{"count":100,"min":"","max":"wscamerdine1@weather.com"}},"Capital Goods":{"Newsletter":{"count":142,"min":"Daily","max":"Yearly"},"gender":{"count":142,"min":"Female","max":"Male"},"Assets":{"count":142,"min":"1158322.88","max":"9968502.31","sum":6.702025365799999E8},"FullName":{"count":142,"min":"Adham Farmiloe","max":"Yuri Probets"},"Country":{"count":142,"min":"Andorra","max":"Vietnam"},"email":{"count":142,"min":"","max":"yprobets72@nationalgeographic.com"}},"n/a":{"Newsletter":{"count":536,"min":"Daily","max":"Yearly"},"gender":{"count":536,"min":"Female","max":"Male"},"Assets":{"count":536,"min":"100328.2","max":"9952273.9","sum":2.7953133287000003E9},"FullName":{"count":536,"min":"Abbot Molineux","max":"Zorah Emberson"},"Country":{"count":536,"min":"Afghanistan","max":"Zimbabwe"},"email":{"count":536,"min":"","max":"zromayneko@delicious.com"}},"Energy":{"Newsletter":{"count":112,"min":"Daily","max":"Yearly"},"gender":{"count":112,"min":"Female","max":"Male"},"Assets":{"count":112,"min":"1075211.73","max":"9836423.95","sum":5.6201872244E8},"FullName":{"count":112,"min":"Adriena Jones","max":"Zsa zsa Culvey"},"Country":{"count":112,"min":"Afghanistan","max":"Venezuela"},"email":{"count":112,"min":"","max":"zzsams@macromedia.com"}},"Transportation":{"Newsletter":{"count":33,"min":"Daily","max":"Yearly"},"gender":{"count":33,"min":"Female","max":"Male"},"Assets":{"count":33,"min":"1085519.82","max":"9995833.06","sum":1.7402618585999995E8},"FullName":{"count":33,"min":"Alejandrina Milne","max":"Tam Touzey"},"Country":{"count":33,"min":"Armenia","max":"Yemen"},"email":{"count":33,"min":"alardiner9h@google.de","max":"ttouzeykd@booking.com"}}}}}}},"description":"Data coming back, including unids. Metadata is listed first, with JSON property names prefixed with \"@\". All entry fields follow, output in alphabetical order."},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"pivotViewEntries","summary":"Processes view data as pivot","description":"Computes min, max, count, total of retrieved view entries","x-keep-version":1},"parameters":[{"name":"count","description":"How many entries shall be returned, default = Integer.MaxInteger","schema":{"type":"integer"},"in":"query"},{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"example":{"value":"MarketingInfo"}},"name":"name","description":"Name of the view or folder","schema":{"type":"string"},"in":"path","required":true},{"name":"scope","description":"What shall the view return:\n- document entries\n- category names\n- all","schema":{"enum":["all","categories","documents"],"type":"string"},"in":"query","required":false},{"name":"start","description":"at which entry should return values start (zero based), default = 0","schema":{"type":"integer"},"in":"query"},{"examples":{"NoKey - 0 key":{"value":""},"State - 1 key":{"value":["MI"]},"State and City - 2 keys":{"value":["MI","Ann Arbor"]}},"name":"key","description":"Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL.  The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","schema":{"type":"array","items":{"type":"string"}},"in":"query"},{"name":"column","description":"Column for alternative sorting. This requires the list to be designed for indexing on this column","schema":{"type":"string"},"in":"query"},{"name":"direction","description":"The direction for alternative sorting. This is ignored unless \"column\" query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set.","schema":{"enum":["asc","desc"],"type":"string"},"in":"query"},{"name":"startsWith","description":"A character combination to perform a partial match to identify a starting point. The character combination will be applied to the \"column\" and \"direction\" passed in the query string. This cannot be combined with the \"keys\" parameter, i.e. you cannot filter on keys and startwith within that key.","schema":{"type":"string"},"in":"query"},{"name":"pivotColumn","description":"Name of the column to provide the data for the pivot aggregator","schema":{"type":"string"},"in":"query","required":true}]},"/consents":{"summary":"Operation on all of the consent's that a user have access to","description":"Operation on all of the consent's that a user have access to","get":{"tags":["admin"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ConsentInfo"}}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getCurrentUserConsents","summary":"Get information about the currently-authenticated user's consents,","description":"JSON element with consent data","x-keep-version":1,"x-keep-scope":"ANY"},"delete":{"tags":["admin"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ConsentInfo"}}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"deleteCurrentUserConsents","summary":"Revoke all of consents that a user has access to","description":"Updates the revoke field of the oauth document.","x-keep-version":1,"x-keep-scope":"ANY"}},"/attachmentnames/{unid}":{"summary":"Get an array of file names from a document.","description":"Get an array of file names from a document.","get":{"tags":["data"],"parameters":[{"name":"includeProtocolUrl","description":"If set to true, the response will change to also return protocol URLs on attachments that has a supported protocol for its extensions.","schema":{"type":"boolean"},"in":"query","required":false},{"name":"includeAttachmentMetadata","description":"Include attachment Metadata on files only (not embedded objects)","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"examples":{"Attachment names response":{"value":{"Files":["sample_doc.doc","sample_ppt.ppt","sample_pptx.pptx","sample_xlsm.xlsm","sample_xlsx.xlsx","image.png","sample_docx.docx"]}},"Attachment names response with protocol URLs":{"value":{"Files":[{"filename":"sample_doc.doc","protocolUrls":["ms-word:ofv|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_doc.doc","ms-word:ofe|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_doc.doc"]},{"filename":"sample_ppt.ppt","protocolUrls":["ms-powerpoint:ofv|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_ppt.ppt","ms-powerpoint:ofe|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_ppt.ppt"]},{"filename":"sample_pptx.pptx","protocolUrls":["ms-powerpoint:ofv|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_pptx.pptx","ms-powerpoint:ofe|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_pptx.pptx"]},{"filename":"sample_xlsm.xlsm","protocolUrls":["ms-excel:ofv|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_xlsm.xlsm","ms-excel:ofe|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_xlsm.xlsm"]},{"filename":"sample_xlsx.xlsx","protocolUrls":["ms-excel:ofv|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_xlsx.xlsx","ms-excel:ofe|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_xlsx.xlsx"]},{"filename":"image.png","protocolUrls":[]},{"filename":"sample_docx.docx","protocolUrls":["ms-word:ofv|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_docx.docx","ms-word:ofe|u|https://frascati.projectkeep.io:8880/api/webdav-v1/attachmentdb/742AE0711F57D27A00258AC2003B298D/sample_docx.docx"]}]}}}}},"description":"success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getDocumentAttachmentNames","summary":"Get all attachment names on a document.","description":"Retrieves a list of all attachments on a document","x-keep-version":1},"parameters":[{"name":"unid","description":"Universal Id of the document to be acted upon","schema":{"type":"string"},"in":"path","required":true},{"name":"dataSource","description":"Keep alias for the database to be queried","schema":{"type":"string"},"in":"query","required":true},{"name":"includeEmbedded","description":"If set to true will also parse the RichText fields for embedded files and return their path. This path can be used as the attachment name with the GET /attachments/{unid}/{attachmentName} to download the file.","schema":{"type":"boolean"},"in":"query","required":false}]},"/consent/{client_id}":{"summary":"Retrieves information about of the currently-authenticated user's consents based from application id/client_id","description":"Retrieves information about all of the currently-authenticated user's consents based from application id/client_id","get":{"tags":["admin"],"parameters":[{"name":"client_id","schema":{"type":"string"},"in":"path","required":true},{"name":"scope","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConsentInfo"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getCurrUserConsent","summary":"Get information about the currently-authenticated user's consents,","description":"JSON element with consent values,","x-keep-version":1,"x-keep-scope":"ANY"}},"/consent/revoke/{unid}":{"delete":{"tags":["admin"],"parameters":[{"name":"unid","schema":{"type":"string"},"in":"path","required":true}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConsentInfo"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"deleteCurrUserConsent","summary":"Revoke a consent using the oauth's unid","description":"JSON element with consent values,","x-keep-version":1,"x-keep-scope":"ANY"}},"/query/qrp/json":{"summary":"Runs a DQL query against the documents in the database, extracting data with Query Results Processor","description":"Runs a DQL query against the documents in the database, extracting data with Query Results Processor.\n\nNote: some DQL query options, such as markRead, are ignored during processing.","post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QrpRequest"}}},"required":true},"tags":["data"],"parameters":[{"name":"count","description":"How many entries shall be returned, default = Integer.MaxInteger","schema":{"type":"integer"},"in":"query"},{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"name":"layout","description":"Name of the layout to use for output. When a layout value is provided, the column array gets ignored and the column definitions are read from the database schema (since 1.1.3). The layout can contain formula in the coumn definition. Specifying a non-existing layout name results in a 400 error.\nRequiring a layout to use formula mitigates the risk of Formula-phishing around the barbecan field protection","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{}}}},"description":"Succesful query showing results"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"queryQrpJson","summary":"Send a DQL query and get JSON QRP results back","description":"Send a DQL query and get JSON QRP results back","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true}]},"/profiledocument":{"summary":"Get information for specific profile document","description":"Get information for specific profile document","get":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"Document":{"value":{"value":"' \"{ \"@meta\": { \"noteid\": 2426, \"unid\": \"8654BEBA03791DF0002589D00057C28C\", \"created\": \"2023-06-16T15:58:34.36Z\", \"lastmodified\": \"2023-06-16T15:58:34.36Z\", \"lastaccessed\": \"2023-06-16T15:58:34.36Z\", \"lastmodifiedinfile\": \"2023-06-16T15:58:34.37Z\", \"addedtofile\": \"2023-06-16T15:58:34.36Z\", \"noteclass\": [ \"DATA\", \"DOCUMENT\" ], \"unread\": false, \"editable\": true, \"revision\": \"000000010057C28C002589D0\" }, \"$Name\": \"$profile_009customers_cn=Keep User/o=KeepOrg\", \"$UpdatedBy\": [ \"CN=Keep User/O=KeepOrg\" ], \"$NoPurge\": \" \", \"$ConflictAction\": \"2\" }\"\n'"}}}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getProfileDocument","summary":"Retrieve a profile document using the appropriate profileName","description":"The profile document is created upon first access using the specified profileName. Upon retrieval of the profile document using the same profileName, it will return the existing profile Document. When 'user' parameter is true, it will retrieve the current logged in user associated with the profile document, defaults to false.","x-keep-version":1},"post":{"requestBody":{"description":"Document including a form attribute","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSimpleRequest"}}},"required":true},"tags":["data"],"responses":{"200":{"content":{"application/json":{}},"description":"Succesful creation / update of profile document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"createUpdateProfileDocument","summary":"Create or update a profiledocument.","description":"Requires Author access for user documents and editor access for general profiles","x-keep-version":1},"delete":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Succesful deletion"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"deleteProfileDocument","summary":"Delete a profiledocument.","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"nameExample":{"value":"tmpprofile"}},"name":"profileName","description":"The name of the profile document","schema":{"type":"string"},"in":"query","required":true},{"examples":{"key":{"value":"anotherKey"}},"name":"key","description":"Profile document key.  \nLeave blank if setting the user parameter to true.","schema":{"type":"string"},"in":"query"},{"examples":{"example":{"value":"true"}},"name":"user","description":"Override key with the current user name.  ","schema":{"type":"boolean"},"in":"query","required":false}]},"/richtextprocessors":{"summary":"Operations for richtext processors.","description":"Operations to use regarding richtext processors.","get":{"tags":["admin"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RichtextProcessorList"},"examples":{"Default available richtext processors":{"value":{"processors":["plain","mime","markdown","html"]}}}}},"description":"The list of available richtext processors."}},"security":[{"jwt":[]}],"operationId":"getRichtextProcessors","summary":"Retrieve the list of available richtext processors.","description":"Returns a list of richtext processors a user can use. Each entry can be set to richtextAs query parameter.","x-keep-version":1}},"/apps":{"summary":"Short list of OAuth applications","description":"Only Application Name/client_name, description, icon/logo_uri, Application URL/client_uri to be shown to be able to render the Domino REST API landing page","get":{"tags":["admin"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AppInfo"}}}},"description":"List of active apps"}},"security":[{}],"operationId":"fetchApps","summary":"Get the list of configured OAuth applications","description":"Return Application Name/client_name, Description, Icon/logo_URI, Application URL/client_uri of active OAuth applications","x-keep-version":1},"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OAuthApplicationCallbackRequest"}}},"required":true},"tags":["admin"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OAuthApplicationCallbackResponse"}}},"description":"Successful update"},"401":{"$ref":"#/components/responses/401Unauthorized"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"updateCallbackUrl","summary":"Updates an incomplete OAuth application CallbackURL","description":"For automation with foundry. Will only work on new applications that have no path set in callback url yet","x-keep-version":1}},"/profiledocumentlist":{"summary":"Get information for specific profile document","description":"Get a list of Profile Documents","get":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileDocumentList"},"examples":{"DocumentListExample":{"value":{"profiledocuments":[{"profileName":"sample-profile-1","unid":"6658FEFE249AEF2B00258B410043A454","key":"sample-key","form":"Profile"},{"profileName":"sample-profile-2","unid":"5658GEGE249AEG2B00258B410043A455","key":"","form":""}]}}}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getProfileDocumentList","summary":"Retrieve a list of profile documents.","description":"Retrieve a list of profile documents.\nLeaving off name and/or key returns all profile documents. \n","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"nameExample":{"value":"tmpprofile"}},"name":"profileName","description":"The name of the profile document","schema":{"type":"string"},"in":"query","required":false},{"examples":{"key":{"value":"anotherKey"}},"name":"key","description":"Profile document key.  \nLeave blank if setting the user parameter to true.","schema":{"type":"string"},"in":"query"},{"examples":{"example":{"value":"true"}},"name":"user","description":"Override key with the current user name.  ","schema":{"type":"boolean"},"in":"query","required":false}]},"/richtext/{richTextAs}/{unid}":{"summary":"Return a stream of plain unformatted text from a Rich Text field.","description":"Return RichText in the format specified","get":{"tags":["data"],"parameters":[{"name":"item","description":"Name of the RichText item to retrieve. When omitted \"Body\" is used as item name","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"text/plain":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}},"text/markdown":{"schema":{"type":"string"}},"multipart/form-data":{"schema":{"type":"string"}},"application/octet-stream":{"schema":{"type":"string"}},"application/json":{"schema":{"type":"string"}}},"description":"Return a stream ofdata from a Rich Text field."},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getRichText","summary":"Return a stream of data from a Rich Text field.","description":"Return RichText in the format specified. Build in formats are plain,mime,html,markdown","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"name":"unid","description":"Universal Id of the document to be acted upon","schema":{"type":"string"},"in":"path","required":true},{"examples":{"defaultValue":{"value":"default"},"ForApprover":{"value":"approver"}},"name":"mode","description":"mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only","schema":{"type":"string"},"in":"query"},{"examples":{"plain text":{"value":"plain"},"HTML":{"value":"html"},"MIME":{"value":"mime"},"Markdown":{"value":"markdown"}},"name":"richTextAs","description":"Format to return data as. Build in methods are: plain,mime,html,markdown","schema":{"type":"string"},"in":"path","required":true}]},"/nameddocument":{"summary":"Get information for specific named document","description":"Get information for specific named document","get":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DominoDocument"},"examples":{"Document":{"value":{"value":"' \"{ \"@meta\": { \"noteid\": 2426, \"unid\": \"8654BEBA03791DF0002589D00057C28C\", \"created\": \"2023-06-16T15:58:34.36Z\", \"lastmodified\": \"2023-06-16T15:58:34.36Z\", \"lastaccessed\": \"2023-06-16T15:58:34.36Z\", \"lastmodifiedinfile\": \"2023-06-16T15:58:34.37Z\", \"addedtofile\": \"2023-06-16T15:58:34.36Z\", \"noteclass\": [ \"DATA\", \"DOCUMENT\" ], \"unread\": false, \"editable\": true, \"revision\": \"000000010057C28C002589D0\" }, \"$Name\": \"$profile_009customers_cn=Keep User/o=KeepOrg\", \"$UpdatedBy\": [ \"CN=Keep User/O=KeepOrg\" ], \"$NoPurge\": \" \", \"$ConflictAction\": \"2\" }\"\n'"}}}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getNamedDocument","summary":"Retrieve a named document using the appropriate name","description":"The named document is created upon first access using the specified name. Upon retrieval of the named document using the same name, it will return the existing named document. When 'user' parameter is true, it will retrieve the current logged in user associated with the named document, defaults to false.","x-keep-version":1},"post":{"requestBody":{"description":"Document including a form attribute","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSimpleRequest"}}},"required":true},"tags":["data"],"responses":{"200":{"content":{"application/json":{}},"description":"Succesful creation / update of profile document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"createUpdateNamedDocument","summary":"Create or update a named document.","description":"Requires Author access for user documents and editor access for general named documents","x-keep-version":1},"delete":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Succesful deletion"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"deleteNamedDocument","summary":"Delete a named document.","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"nameExample":{"value":"tmpprofile"}},"name":"name","description":"The name of the named document","schema":{"type":"string"},"in":"query","required":true},{"examples":{"key":{"value":"anotherKey"}},"name":"key","description":"Named document key.  \nLeave blank if setting the user parameter to true.","schema":{"type":"string"},"in":"query"},{"examples":{"example":{"value":"true"}},"name":"user","description":"Override key with the current user name.  ","schema":{"type":"boolean"},"in":"query","required":false}]},"/nameddocumentlist":{"summary":"Get information for specific profile document","description":"Get a list of Named Documents","get":{"tags":["data"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileDocumentList"},"examples":{"DocumentListExample":{"value":{"profiledocuments":[{"profileName":"sample-profile-1","unid":"6658FEFE249AEF2B00258B410043A454","key":"sample-key","form":"Profile"},{"profileName":"sample-profile-2","unid":"5658GEGE249AEG2B00258B410043A455","key":"","form":""}]}}}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getNamedDocumentList","summary":"Retrieve a list of named documents.","description":"Retrieve a list of named documents.\nLeaving off name and/or key returns all named documents. \n","x-keep-version":1},"parameters":[{"examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"name":"dataSource","description":"Scope name","schema":{"type":"string"},"in":"query","required":true},{"examples":{"nameExample":{"value":"tmpprofile"}},"name":"name","description":"The name of the named document","schema":{"type":"string"},"in":"query","required":false},{"examples":{"key":{"value":"anotherKey"}},"name":"key","description":"Named document key.  \nLeave blank if setting the user parameter to true.","schema":{"type":"string"},"in":"query"},{"examples":{"example":{"value":"true"}},"name":"user","description":"Override key with the current user name.  ","schema":{"type":"boolean"},"in":"query","required":false}]},"/operations":{"description":"Derived from compiled restrictions","get":{"tags":["data"],"responses":{"200":{"content":{"application/json":{}},"description":"Successful retrival"},"401":{"$ref":"#/components/responses/401Unauthorized"}},"security":[{"jwt":[]}],"operationId":"getOperationConstrains","summary":"get the list of constrains","x-keep-version":1}}},"components":{"schemas":{"UnidWritable":{"description":"32 char universalId A-Z0-9, primary key unique across replicas","maxLength":32,"minLength":32,"pattern":"[0-9A-F]*","type":"string","readOnly":false,"example":"6834F14BE9CA69F68525871E00583D1B"},"ODataServiceObject":{"title":"Root Type for ODataServiceObject","description":"Entity object for OData service document of a database.","type":"object","properties":{"name":{"description":"The form name. ","type":"string"},"kind":{"description":"EntitySet","type":"string"},"url":{"description":"The form name currently","type":"string"}},"example":{"name":"TestForm","kind":"EntitySet","url":"TestForm"}},"ODataDbResponse":{"title":"Root Type for OdataDbResponse","description":"Response for request of get OData service document of a database.","type":"object","properties":{"@odata.context":{"description":"OData metadata URI of a database.  \nOData metadata is a machine-readable description of the entity model designed to enable client consumption","type":"string"},"value":{"description":"All OData service objects of a database.","type":"array","items":{"$ref":"#/components/schemas/ODataServiceObject"}}},"example":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata","value":[{"name":"Entry","kind":"EntitySet","url":"Entry"},{"name":"OdataSampleForm","kind":"EntitySet","url":"OdataSampleForm"},{"name":"NewForm","kind":"EntitySet","url":"NewForm"},{"name":"SampleEntry","kind":"EntitySet","url":"SampleEntry"},{"name":"TestForm","kind":"EntitySet","url":"TestForm"}]}},"ODataDbNameResponse":{"title":"Root Type for ODataDbNameResponse","description":"Response for request of get OData service document of a database for specified form or view.","type":"object","properties":{"@odata.context":{"description":"This is the context URL (see [OData-Protocol]) for the payload.","type":"string"},"value":{"description":"All the documents in OData formats. ","type":"array","items":{"$ref":"#/components/schemas/ODataDocument"}}},"example":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata#TestForm","value":[{"@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261","@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261","@odata.etag":"W/\" 6242a8fb\"","Hex0040_unid":"40618262F3167AD74825881400245261","Color":"Yellow","Form":"TestForm","Pet":"Kelp gull","email":"patger7k@soup.io","first_name":"Pablo","gender":"Male","ip_address":"245.54.137.150","last_name":"Atger"},{"@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475","@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475","@odata.etag":"W/\" 6242aac3\"","Hex0040_unid":"99A6E13F05C7153F4825881400250475","Color":"Yellow","Form":"TestForm","Pet":"Kelp gull","email":"patger7k@soup.io","first_name":"Pablo","gender":"Male","ip_address":"245.54.137.150","last_name":"Atger"}]}},"KeepInfoDetails":{"title":"Root Type for KeepInfoDetails","description":"Domino REST API specific details","type":"object","properties":{"keep-name":{"type":"string"},"keep-desc":{"type":"string"},"keep-version":{"type":"string"},"keep-vendor":{"type":"string"},"image-build":{"format":"date-time","type":"string"}},"example":{"keep-name":"HCL Domino REST API core API","keep-desc":"Next generation APIs for HCL Domino","keep-version":"1.6.1-SNAPSHOT-LocalBuild","keep-vendor":"HCL Labs","image-build":"2022-07-13 08:38"}},"KeepInfoDomino":{"title":"Root Type for KeepInfoDomino","description":"Domino part of Domino REST API info","type":"object","properties":{"version":{"type":"string"},"buildNumber":{"format":"int32","type":"integer"},"fixpackNumber":{"format":"int32","type":"integer"},"hotfixNumber":{"format":"int32","type":"integer"},"majorVersion":{"format":"int32","type":"integer"},"minorVersion":{"format":"int32","type":"integer"},"qmrNumber":{"format":"int32","type":"integer"},"qmuNumber":{"format":"int32","type":"integer"},"productionBuild":{"type":"boolean"},"platform":{"description":"Platform Domino is running on","type":"string"},"platformbits":{"description":"The bit level of the platform","type":"string"}},"example":{"version":"12.0-2 FP: 0 HF:0","buildNumber":475,"fixpackNumber":0,"hotfixNumber":0,"majorVersion":12,"minorVersion":0,"qmrNumber":2,"qmuNumber":0,"productionBuild":true}},"KeepInfo":{"title":"Root Type for KeepInfo","description":"Basic Information about the running environment","properties":{"KeepProperties":{"$ref":"#/components/schemas/KeepInfoDetails","description":"Domino REST API Build information"},"DominoProperties":{"$ref":"#/components/schemas/KeepInfoDomino","description":"Domino build information"}},"example":{"Keep Properties":{"keep-name":"HCL Domino REST API core API","keep-desc":"Next generation APIs for HCL Domino","keep-version":"1.6.1-SNAPSHOT-463","keep-vendor":"HCL Labs","image-build":"2022-07-11 16:18"},"Domino Properties":{"version":"12.0-2 FP: 0 HF:0","buildNumber":475,"fixpackNumber":0,"hotfixNumber":0,"majorVersion":12,"minorVersion":0,"qmrNumber":2,"qmuNumber":0,"productionBuild":true}}},"DocumentMeta":{"title":"DocumentMeta","description":"Meta data common to all Domino documents that are read-only with the exception of form","required":["Form"],"type":"object","properties":{"unid":{"$ref":"#/components/schemas/Unid","description":"Primary key of a document, unique across NSF databases with matching replicaIds","example":"6834F14BE9CA69F68525871E00583D1B"},"noteid":{"description":"Local (current NSF only) primary key of a document","type":"integer","readOnly":true,"example":"90370"},"created":{"format":"date-time","description":"Date of document creation in ISO format","type":"string","readOnly":true,"example":"2021-07-26T11:03:48-05:00"},"lastmodified":{"format":"date-time","description":"Last update date of a document","type":"string","readOnly":true,"example":"2021-07-26T11:03:48-05:00"},"lastaccessed":{"format":"date-time","description":"Last access date of a document","type":"string","readOnly":true,"example":"2021-07-26T11:03:48-05:00"},"size":{"description":"size in byte of a document or json result","type":"integer","readOnly":true,"example":"114"},"unread":{"description":"Is the document unread by the current user","type":"boolean","readOnly":true,"example":"true"},"etag":{"description":"Weak ETag of the current document","type":"string","readOnly":true,"example":"W/\\\" 60fedce4\\\""},"revision":{"description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.","type":"string","example":"cfb7351dd41a90f4e0c9afc06e30e59b"},"isEditable":{"description":"Could the user who retrieved a document update it","type":"boolean"},"Form":{"description":"Value of form item of a given document","type":"string"}},"example":{"unid":"6834F14BE9CA69F68525871E00583D1B","noteid":90370,"created":"2021-07-26T11:03:48-05:00","lastmodified":"2021-07-26T11:03:48-05:00","revision":"cfb7351dd41a90f4e0c9afc06e30e59b","lastaccessed":"2021-12-15T17:14:44+01:00","size":114,"unread":true,"etag":"W/\" 60fedce4\"","isEditable":false}},"AppInfo":{"title":"Root Type for AppInfo","description":"Light info on configured OAuth applications","type":"object","properties":{"client_name":{"type":"string"},"client_uri":{"type":"string"},"description":{"type":"string"},"logo_uri":{"type":"string"}},"example":{"client_name":"localdemo","client_uri":"https://www.wissel.net/","description":"Showcasing OAUTH possibilities","logo_uri":"compass"}},"AgentWithContextMessage":{"title":"Root Type for AgentWithContextMessage","description":"Runs an existing agent in a given database using a specific document as the agent's run context. The is the status message of the response.","required":["unids"],"type":"object","properties":{"agentName":{"description":"The agentName in the given database. ","type":"string"},"returnMode":{"description":"The mode configured in Domino REST API. ","type":"string"},"unids":{"description":"An array of UNIDs, each unid will be executed by the agent. NOTE : NotesSession.documentContext must be used in the agent to access the relevant document. ","type":"array","items":{"type":"string"}}},"additionalProperties":false,"example":{"agentName":"processJson","unids":["36EBDFD11D4381F280258600003ED607"],"returnMode":"default"}},"AgentPayloadAsync":{"title":"Root Type for AgentPayloadAsync","description":"payload for /run/agent endpoints","required":["agentName"],"type":"object","properties":{"agentName":{"description":"The name of the agent. ","type":"string"},"callbackUrl":{"description":"URL to call, only used if async=true","type":"string"},"method":{"description":"Http request method you want to use when sending the callbackurl. ","type":"string"},"callbackUrlError":{"description":"URL to call if agent responds with status code other than 200. Only used if async=true","type":"string"},"payload":{"description":"Additional content to pass to the agent","type":"object"},"runAsServer":{"description":"Whether the agent should run as current user or as server. If the agent is designed to only run as the current web user, this property cannot be set to true.","type":"boolean"}},"additionalProperties":false,"example":{"agentName":"processJson","payload":{"FirstName":"Adrian","TestVal":"20","TestBoolean":false},"runAsServer":false,"callbackUrl":"https://www.acme.com/api/callback","method":"POST"}},"AuthResult":{"title":"Root Type for AuthResult","description":"Result of a JWT login. Contains the JWT token and for convenience the claim in JSON readable format","type":"object","properties":{"bearer":{"description":"JWT Token for system access","type":"string"},"claims":{"description":"Human readable JSON on the JWT claim content"},"leeway":{"format":"int32","description":"The JWT library makes use of a leeway (in seconds) to account for when there is a clock skew times between the signing and verifying servers. Allow for a small leeway when checking whether a token has expired.","type":"integer"},"expSeconds":{"format":"int32","description":"Expire time in seconds. ","type":"integer"},"issueDate":{"format":"date-time","type":"string"}},"additionalProperties":false,"example":{"bearer":"some.jwt.string","claims":{"iss":"SomeCert","sub":"CN=John Doe/O=Mauraders","scopes":"MAIL $DATA"},"leeway":5,"expSeconds":21600,"issueDate":"2021-04-01T01:32:34+08:00"}},"BasicAuthRequest":{"title":"Root Type for BasicAuthRequest","description":"API way to get a token","required":["password","username"],"type":"object","properties":{"password":{"format":"password","description":"Password, not written on a Post-it","type":"string","example":"supersecret"},"username":{"description":"Who you are or your eMail","type":"string","example":"John Doe"},"scope":{"description":"Optional approved scopes. A scope is a string, the scope field a series of space separated strings. If omitted the default value \"MAIL $DATA\" that give access to PIM functions and any database the user has access to. Other scopes can be the name of database aliases like \"demo\", \"crm\". The values are case sensitive. Regular database scopes are lower case. Scopes can't open access, that's what ACLs do, but limit them. For a user driven login, this makes limited sense, so it is mostly to achieve JWT parameter parity, so scopes can be tested without an IdP issuing a JWT at the end of an OAuth process\n","type":"string","example":"crm"}},"additionalProperties":false,"example":{"password":"supersecret","username":"FirstName LastName","scope":"MAIL $DATA"}},"BulkCreateDocuments":{"title":"Root Type for BulkCreateDocuments","description":"Upload an array of JSON objects to create new documents each","required":["documents"],"type":"object","properties":{"documents":{"description":"JSON source for new Documents","type":"array","items":{"$ref":"#/components/schemas/DominoDocument"}}},"example":{"documents":[{"first_name":"Kristoffer","last_name":"Aaronsohn","email":"kaaronsohnf5@goo.ne.jp","gender":"Male","Color":"Purple","Pet":"Bandicoot, long-nosed","Form":"Customer"},{"first_name":"Kristoffer","last_name":"Aaronsohn","email":"kaaronsohnf5@goo.ne.jp","gender":"Male","Color":"Purple","Pet":"Bandicoot, long-nosed","Form":"Customer"},{"first_name":"Kristoffer","last_name":"Aaronsohn","email":"kaaronsohnf5@goo.ne.jp","gender":"Male","Color":"Purple","Pet":"Bandicoot, long-nosed","Form":"Customer"},{"first_name":"Kristoffer","last_name":"Aaronsohn","email":"kaaronsohnf5@goo.ne.jp","gender":"Male","Color":"Purple","Pet":"Bandicoot, long-nosed","Form":"Customer"},{"first_name":"Kristoffer","last_name":"Aaronsohn","email":"kaaronsohnf5@goo.ne.jp","gender":"Male","Color":"Purple","Pet":"Bandicoot, long-nosed","Form":"Customer"}]}},"BulkUnids":{"title":"Root Type for BulkUnids","description":"Collection of UNIDs for bulk retrieval or deletions","type":"object","properties":{"unids":{"description":"List of UNIDs to act upon","type":"array","items":{"$ref":"#/components/schemas/UnidWritable"}},"mode":{"description":"mode to use to act on the documents. defaults to default","type":"string"},"markRead":{"description":"Mark retrieved documents as read by the current user","type":"boolean"},"markUnread":{"description":"Mark retrieved documents as unread by the current user","type":"boolean"}},"additionalProperties":false,"example":{"unids":["1234567890ABCDEF1234567890ABCDEF","2234567890ABCDEF1234567890ABCDEA","ABCDEF1234567890ABCDEF1234567890"],"mode":"default"}},"BulkUpdateDocuments":{"title":"Root Type for BulkUpdateDocuments","description":"Update documents based on a query, a form mode and a set of fields to be updated","type":"object","properties":{"query":{"description":"DQL query string","type":"string"},"mode":{"description":"Form mode as configured for any of the forms returned by the query","type":"string"},"replaceItems":{"description":"Key value pairs, subject to form mode scrutiny","type":"object"},"maxScanDocs":{"format":"int32","description":"Limit the number of documents to be scanned","type":"integer"},"maxScanEntries":{"format":"int32","description":"Limit the entries (see DQL documentation for it)","type":"integer"},"timeoutSecs":{"format":"int32","description":"Query timeout in seconds","type":"integer"},"viewRefresh":{"description":"Should views get refreshed?","type":"boolean"},"noViews":{"description":"Disable use of views when true","type":"boolean"},"variables":{"description":"Key/Value to replace ?Variables","type":"object"},"start":{"description":"Default is 0.","type":"integer"},"count":{"description":"How many to return default is maxInt","type":"number"},"returnUpdatedDocument":{"description":"Should contain updated document in the response","type":"boolean"},"forms":{"description":"List of forms DQL should be run against","type":"array","items":{"type":"string"}},"includeFormAlias":{"description":"When specifying a list of Forms using the forms array, also include documents with those forms aliases.","type":"boolean"},"ftRefresh":{"description":"Update full-text index before query","type":"boolean"}},"additionalProperties":false,"example":{"query":"Form = 'Marketing' and Newsletter = 'Weekly' and Color = ?Color","mode":"default","replaceItems":{"Newsletter":"every week"},"maxScanDocs":500000,"maxScanEntries":200000,"timeoutSecs":300,"viewRefresh":true,"ftRefresh":false,"noViews":false,"variables":{"Color":"Maroon","Pet":"Giraffe"}}},"DatabaseEntry":{"title":"Root Type for DatabaseEntry","description":"A database living on the sever's file system. Eventually with the API names it is known for","type":"object","properties":{"title":{"type":"string"},"apiNames":{"type":"array","items":{"type":"string"}},"nsfPath":{"type":"string"}},"additionalProperties":false,"example":{"apiNames":["addresses","systemdb"],"nsfPath":"names.nsf","title":"Tango Addressbook"}},"ExecutionRequest":{"title":"Root Type for ExecutionRequest","description":"Code sent to server to be executed and results returned","required":["context","payload"],"type":"object","properties":{"context":{"description":"The data context to be provided for the call.\nBy default `session` and `database` are given, more based on this property"},"payload":{"description":"code to be executed","type":"string"}},"example":{"context":{"collection":["id","id2","id3"],"document":"someunid","query":"","view":"($All)"},"payload":"DIM db as NotesDatabase\nDim doc as NotesDocument"}},"ExecutionResult":{"title":"Root Type for ExecutionResult","description":"Outcome of an operation","type":"object","properties":{"console":{"description":"Anything that went out with print(\"Hello World\") in the agent","type":"string"},"results":{"description":"Array of execution results, should the agent write results","type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"items":{"type":"object","properties":{"age":{"format":"int32","type":"integer"},"name":{"type":"string"}}}}}},"status":{"description":"Success or failure or error count","type":"string"}},"example":{"console":"Some output\nNextLine\nNextLine","results":[{"id":"2136198263921","items":{"age":42,"name":"Joe"}}],"status":"success"}},"FormulaRequest":{"title":"Root Type for FormulaRequest","description":"Body of a post to /run/formula to test or run a formula\nIf save is set to true, user must be the same as current user\n\nCannot set value for both a document unid and a dql query","required":["type","formula","save","user"],"type":"object","properties":{"user":{"description":"User to be tested, can be empty if current user","type":"string"},"type":{"description":"What type of formula shall be tested: Domino or OpenFormula","enum":["domino","openformula"],"type":"string"},"formula":{"description":"The actual formula","type":"string"},"unid":{"description":"UniqueId of a document to test against. Can be empty if formula doesn't rely on fields in a document","type":"string"},"save":{"description":"Should the document be saved back","type":"boolean"},"query":{"description":"DQL Query to build a collection to run the formula against (and eventually save it)","type":"string"}},"additionalProperties":false,"example":{"user":"Peter Pan/Neverland","type":"domino","formula":"@IsMember(\"[admin]\";@UserRoles)","save":false,"unid":"0624B6B9167EF29F48258614006F9A75","query":""}},"FormulaResult":{"title":"Root Type for FormulaResult","description":"Return value when requesting formula execution","required":["request","result"],"type":"object","properties":{"request":{"$ref":"#/components/schemas/FormulaRequest","description":"The original request"},"result":{"description":"What was the outcome of the evaluation","type":"array","items":{"$ref":"#/components/schemas/FormulaResultElement"}}},"example":{"result":[{"unid":"8C525AE6BE15DB6148258831001F5B7F","result":[0]},{"unid":"AA78E397F5397D054825883100453848","result":[0]}]}},"FormulaResultElement":{"title":"Root Type for FormulaResultElement","description":"One simple element of return value when requesting formula execution","required":["unid","result"],"type":"object","properties":{"unid":{"description":"Unique ID of document formula result is from.  If no document or query specified, unid will be an empty string","type":"string"},"result":{"description":"Result is returned as an array.","type":"array","items":{}}},"example":{"unid":"documentUnid","result":["formulaResult1","formulaResult2"]}},"KeepDBShort":{"title":"Root Type for KeepDBShort","description":"Entry available in Domino REST API","type":"object","properties":{"apiName":{"description":"How this database is known to the API","type":"string"},"nsfPath":{"description":"Location on Domino server","type":"string"},"schemaName":{"description":"The internal schema name used","type":"string"},"iconName":{"description":"Alt text for icon","type":"string"},"icon":{"description":"Base64 encoded icon (preferably svg)","type":"string"},"isActive":{"description":"is the definition currently in use","type":"boolean"},"description":{"description":"Description with human readable details of the database's purpose","type":"string"}},"example":{"apiName":"keepconfig","nsfPath":"KeepConfig.nsf","description":"Configuration settings for the Domino REST API, handle with care","schemaName":"keepconfig","isActive":true}},"ListDesignItem":{"title":"Root Type for ListDesignItem","description":"Result from design query. Names and uniqueIds\nTODO: Add form/view details","required":["title","isFolder"],"type":"object","properties":{"title":{"description":"Title of the view or folder","type":"string"},"isFolder":{"description":"true = it is a folder where user interaction or code determines the content\nfalse = it is a view with a fixed query, a.k.a View selection formula","type":"boolean"},"unid":{"description":"UNID of the underlying View design element","type":"string"},"aliases":{"description":"Aliases for the view title","type":"array","items":{"type":"string"}},"type":{"description":"If design item has a type, noted here.","type":"string"},"columns":{"description":"Column information with at least title","type":"array","items":{"$ref":"#/components/schemas/ListDesignColumn"}}},"additionalProperties":false,"example":{"title":"Customers","isFolder":false}},"LogoutBody":{"title":"Root Type for LogoutBody","description":"Code to send for logging out a current JWT based user","required":["logout"],"type":"object","properties":{"logout":{"description":"Body to prevent an accidential logout","enum":["Yes"],"type":"string"}},"additionalProperties":false,"example":{"logout":"Yes"}},"ODataDocument":{"title":"Root Type for ODataDocument","description":"Definition for specified form or view of OData service document of a database.","type":"object","properties":{"@odata.id":{"description":"The ID of the OData entity.","type":"string","example":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB"},"@odata.editLink":{"description":"The link used to edit/update the entity,","type":"string","example":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB"},"@odata.etag":{"description":"Weak ETag of the current document","type":"string","example":"W/\\\" 6242a8fb\\\""},"Form":{"description":"Form name of a document","type":"string","example":"Customer"},"Hex0040_unid":{"description":"Primary key of a document, unique across NSF databases with matching replicaIds","type":"string","example":"6834F14BE9CA69F68525871E00583D1B"}},"example":{"@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","@odata.etag":"W/\" 62480c60\"","Hex0040_unid":"3B5AD791F51B99D548258912003159EC","Color":"Pthalo Blue","Form":"TestForm","Pet":"American Howling Retriever","email":"wandrews@canofsleep.com","first_name":"Winslow","gender":"Male","ip_address":"192.168.1.1","last_name":"Andrews"}},"QueryRequest":{"title":"Root Type for QueryRequest","description":"Query and constraints for a DQL query to Domino. If not passing property 'mode', it will search from mode 'dql'. ","required":["query"],"type":"object","properties":{"maxScanDocs":{"format":"int32","description":"Specifies the maximum allowable number of documents scanned across all query terms. DQL execution returns an error when exceeded. Default is 500,000.","type":"integer"},"maxScanEntries":{"format":"int32","description":"Specifies the maximum allowable number of view entries scanned across all query terms. DQL execution return an error when exceeded. Default is 200,000.","type":"integer"},"noViews":{"description":"Specifies not to perform any view processing in satisfying a query. Default is False (off).","type":"boolean"},"query":{"description":"The DQL query snippet. ","type":"string"},"timeoutSecs":{"format":"int32","description":"Specifies the maximum allowable seconds a DQL query is allowed to run. DQL execution returns an error when exceeded. Default is 300 (5 minutes).","type":"integer"},"variables":{"description":"Key/Value to replace ?Variables in property \"query\". ","type":"object"},"viewRefresh":{"description":"Refresh a UI view to match its associated back-end view.","type":"boolean"},"mode":{"description":"This is form mode configured in Domino REST API for a database. If no mode has been passed, it will use default \"dql\". ","type":"string","example":"dql"},"forms":{"description":"List of form names to be added to the query. Domino REST API will lookup all potential alias values and add them to the query clause","type":"array","items":{"type":"string"}},"includeFormAlias":{"description":"If form names added to the query, this parameter will indicate whether all form alias should be included in the query clause.","type":"boolean"},"markRead":{"description":"Mark documents as read by the current user when retrieved","type":"boolean"},"ftRefresh":{"description":"Refresh the full-text index before the query","type":"boolean"}},"additionalProperties":false,"example":{"maxScanDocs":500000,"maxScanEntries":200000,"noViews":false,"query":"form = 'Customer' and Color = ?Color","timeoutSecs":300,"mode":"default","variables":{"Color":"Maroon","Pet":"Giraffe"},"viewRefresh":true,"ftRefresh":true}},"RichTextRepresentation":{"title":"Root Type for RichTextRepresentation","description":"Format of RichText. Can be extended. Richtext processors namely html, markdown, mime and plain are available by default. If left blank, mime is default.","type":"string"},"AgentAsyncMessage":{"title":"Root Type for AgentAsyncMessage","description":"The status message of specific agent. ","type":"object","properties":{"uuid":{"description":"The uuid of the asynchronous agent to check status of.","type":"string"},"status":{"description":"The status of the asynchronous agent. ","type":"string"}},"additionalProperties":false,"example":{"uuid":"251f1538-5c1d-4b64-b4a5-ae56dade65b6","status":"running"}},"AgentPayload":{"title":"Root Type for AgentPayload","description":"Runs an existing agent in a given database using a specific document as the agent's run context. The is the status message of the response.","type":"object","properties":{"agentName":{"description":"The agentName in the given database. ","type":"string"},"payload":{"description":"Additional content to pass to the agent","type":"object"}},"additionalProperties":false,"example":{"agentName":"processJson"}},"DocumentSimpleRequest":{"title":"Root Type for DocumentSimpleRequest","description":"This is a sample Json format request body to create a domino document. The fields properties are just examples for one testform. ","type":"object","properties":{"Form":{"description":"The form name you want to operate with. ","type":"string"}},"additionalProperties":{"anyOf":[{"type":"number"},{"nullable":true,"type":"string"},{"type":"boolean"},{"type":"object"},{"type":"array","items":{"type":"number"}},{"type":"array","items":{"type":"string"}},{"type":"array","items":{"type":"boolean"}},{"type":"array","items":{"type":"object"}}],"nullable":true,"description":"Document specific fields with single or multi value"},"example":{"first_name":"Winslow","last_name":"Andrews","email":"wandrews@canofsleep.com","gender":"Male","ip_address":"192.168.1.1","Color":"Pthalo Blue","Pet":"American Howling Retriever","Form":"Customer"}},"DocumentSimpleRequestUpdate":{"title":"Root Type for DocumentSimpleRequestUpdate","description":"This is a sample Json format request body to update a domino document. The fields properties are just examples for one testform. ","type":"object","additionalProperties":{"anyOf":[{"type":"number"},{"nullable":true,"type":"string"},{"type":"boolean"},{"type":"object"},{"type":"array","items":{"type":"number"}},{"type":"array","items":{"type":"string"}},{"type":"array","items":{"type":"boolean"}},{"type":"array","items":{"type":"object"}}],"nullable":true,"description":"Document specific fields with single or multi value"},"example":{"first_name":"Winslow","last_name":"Andrews","email":"wandrews@canofsleep.com","gender":"Male","ip_address":"192.168.1.1","Color":"Pthalo Blue","Pet":"American Howling Retriever"}},"DominoDocument":{"title":"DominoDocument","description":"The JSON representation of a Domino document consisting of attributes (starting with @) and NotesItem having a name and one or more values","required":["Form"],"type":"object","properties":{"@meta":{"$ref":"#/components/schemas/DocumentMeta","description":"Document meta data on request"},"Form":{"description":"Form of a document, used to determine additionalProperties in detail","type":"string","example":"Customer"}},"additionalProperties":{"anyOf":[{"nullable":true,"type":"number"},{"nullable":true,"type":"string"},{"type":"boolean"},{"type":"object"},{"type":"array","items":{"type":"number"}},{"type":"array","items":{"type":"string"}},{"type":"array","items":{"type":"boolean"}},{"type":"array","items":{"type":"object"}}],"nullable":true,"description":"Document specific fields with single or multi value"},"example":{"@meta":{"unid":"6834F14BE9CA69F68525871E00583D1B","noteid":90370,"created":"2021-07-26T11:03:48-05:00","lastmodified":"2021-07-26T11:03:48-05:00","lastaccessed":"2021-12-15T17:14:44+01:00","size":114,"unread":true,"etag":"W/\" 60fedce4\"","isEditable":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Hammer","body":{"type":"text/html","encoding":"BASE64","content":"PGh0bWw+Cjxib2R5Pgo8aDIgc3R5bGU9ImNvbG9yOiAjMmU2YzgwOyI+S2VlcCBNaW1lPC9oMj4KPC9ib2R5Pgo8L2h0bWw+"}}},"EmptyObject":{"title":"Root Type for EmptyObject","description":"An empty JSON object, used for POST requests that require no input","type":"object","example":{}},"BasicAuthForOauthFlow":{"title":"Root Type for BasicAuthForOauthFlow","description":"API way to get a token for Domino IdP login","required":["password","username","scope"],"type":"object","properties":{"password":{"format":"password","description":"Password, not written on a Post-it","type":"string"},"username":{"description":"Who you are or your eMail","type":"string"},"scope":{"description":"mandatory scope value of 'oauth'\n","enum":["oauth"],"type":"string"}},"example":{"password":"supersecret","username":"FirstName LastName","scope":"oauth"}},"ListDesignColumn":{"title":"Root Type for ListDesignColumn","description":"Describes a column within a view or folder definition","type":"object","properties":{"name":{"type":"string","example":"$4"},"title":{"type":"string","example":"User Name"},"position":{"format":"int32","type":"integer","example":"1"},"sorted":{"type":"boolean"},"categorized":{"type":"boolean"},"resort-asc":{"type":"boolean"},"resort-desc":{"type":"boolean"},"direction":{"enum":["ascending","descending"],"type":"string"},"totalType":{"description":"The type of totaling/averaging that this column performs","enum":["none","total","average","averagePerSubcategory","percentOfParentCategory","percent"],"type":"string"}},"example":{"name":"$4","title":"User Name","position":1,"sorted":true,"direction":"ascending","categorized":true,"resort-asc":true,"resort-desc":true,"totalType":"none"}},"ScopeAccessUserEntry":{"title":"Root Type for scopeAccessUserEntry","description":"Details of the current User Entry for a specific Database.","type":"object","properties":{"User":{"description":"Current user logged in","type":"string"},"Level":{"description":"ACL Level of the current logged in user","type":"string"},"Roles":{"description":"All of the roles of the current user logged in on the Domino REST API database","type":"array","items":{"type":"string"}},"Flags":{"description":"Specifies what the current user are capable of doing on the Domino REST API database","type":"array","items":{"type":"string"}}},"example":{"User":"LocalDomainAdmins","Level":"MANAGER","Roles":["Admin"],"Flags":["NODELETE","AUTHOR_NOCREATE"]}},"AttachmentsUNIDResponseMessage":{"title":"Root Type for AttachmentsUNIDResponseMessage","description":"The response message for attachments/unid","type":"object","properties":{"status":{"description":"Short descriptive message","type":"string"},"filename":{"description":"The filename user has uploaded.","type":"array","items":{"type":"string"}}},"additionalProperties":false,"example":{"status":"upload complete","filename":"1.txt"}},"DocumentExistencePayload":{"title":"Root Type for DocumentExistencePayload","description":"An object keyed by UNID and containing existence/etag status","type":"object","example":{"12345":{"exists":true,"etag":"67890"}}},"BulkFolderDocuments":{"title":"Root Type for BulkUnids","description":"Collection of UNIDs for bulk folder operations","required":["folderName","action"],"type":"object","properties":{"unids":{"description":"List of UNIDs to act upon","type":"array","items":{"$ref":"#/components/schemas/UnidWritable"}},"mode":{"description":"mode to use to act on the documents. defaults to default","type":"string"},"folderName":{"description":"Name of the folder to add/remove documents to/from","type":"string"},"action":{"description":"Folder add/remove action","enum":["add","remove"],"type":"string"}},"additionalProperties":false,"example":{"unids":["1234567890ABCDEF1234567890ABCDEF","2234567890ABCDEF1234567890ABCDEA","ABCDEF1234567890ABCDEF1234567890"],"mode":"default","folderName":"Inbox","action":"add"}},"PreviewInfo":{"title":"Root Type for PreviewInfo","description":"Information which APIs are considered \"Priview\", so customers need to use them with care, mostly for testing","type":"object","properties":{"api":{"type":"string"},"active":{"type":"boolean"},"path":{"type":"string"},"method":{"type":"string"},"description":{"type":"string"},"summary":{"type":"string"},"operation":{"type":"string"}},"example":{"api":"basis","active":true,"path":"/raw","method":"post","description":"Create a new document for a specified form.","summary":"Create a new document for a specified form without data conversion","operation":"createDocumentRaw"}},"QrpRequest":{"description":"Request body to execute a Query Results Processor operation","required":["dql","columns"],"type":"object","properties":{"dql":{"$ref":"#/components/schemas/QueryRequest","description":"DQL query information"},"columns":{"description":"Columns to extract from the queried documents","type":"array","items":{"$ref":"#/components/schemas/QrpColumn"}},"returnUnid":{"description":"Return the document UNID in results instead of the note ID","type":"boolean"},"returnReplicaId":{"description":"Return the replica ID in results instead of the DB file path","type":"boolean"}}},"QrpColumn":{"title":"Root Type for QrpColumn","description":"Column added in a QRP request","type":"object","properties":{"name":{"type":"string"},"sort":{"type":"string"},"categorized":{"type":"boolean"}},"example":{"name":"FirstName","sort":"ascending","categorized":true}},"RichtextProcessorList":{"title":"Root Type for RichtextProcessorList","description":"List of available richtext processors to use for richtextAs query parameter.","type":"object","properties":{"processors":{"type":"array","items":{"type":"string"}}},"example":{"processors":["plain","mime","markdown","html"]}},"DocumentList":{"title":"Root Type for DocumentList","description":"An array list of documents.","type":"object","allOf":[{"type":"object","properties":{"value":{"type":"array","items":{"$ref":"#/components/schemas/DominoDocument"},"example":"{\n\t\"value\": [\n\t\t{\n\t\t\t\"profileName\": \"sample-profile-1\",\n\t\t\t\"unid\": \"6658FEFE249AEF2B00258B410043A454\",\n\t\t\t\"key\": \"sample-key\"\n\t\t},\n\t\t{\n\t\t\t\"profileName\": \"sample-profile-2\",\n\t\t\t\"unid\": \"5658GEGE249AEG2B00258B410043A455\",\n\t\t\t\"key\": \"sample-key\"\n\t\t}\n\t]\n}"}}}],"example":{"value":[{"profileName":"sample-profile-1","unid":"6658FEFE249AEF2B00258B410043A454","key":"sample-key"},{"profileName":"sample-profile-2","unid":"5658GEGE249AEG2B00258B410043A455","key":"sample-key"}]}},"ProfileDocumentList":{"title":"Root Type for ProfileDocumentList","description":"The output for ProfileDocumentList","type":"object","properties":{"profiledocuments":{"type":"array","items":{"type":"object","properties":{"profileName":{"type":"string"},"unid":{"type":"string"},"key":{"type":"string"},"form":{"type":"string"}}}}},"example":{"profiledocuments":[{"profileName":"my profile6","unid":"9F3AA571B42E380385258B4200452EB6","key":"my key3","form":"CustomerProfile"},{"profileName":"my profile4","unid":"9424608A339E737385258B4200452EB0","key":"","form":"Profile"}]}},"IdpListResponse":{"description":"List of external IdPs that is OFBA configured.","required":["name","wellKnown","ofba_config"],"type":"object","properties":{"name":{"description":"Name of external IdP","type":"string","example":"KeycloakIdP"},"wellKnown":{"description":"OIDC URL of external IdP","type":"string","example":"https://{keycloak_host}/realms/{realm_name}"},"ofba_config":{"$ref":"#/components/schemas/IdpOfbaConfiguration","description":"External IdP's configuration for OFBA login"}},"example":{"name":"KeycloakIdP","wellKnown":"https://{keycloak_host}/realms/{realm_name}","ofba_config":{"active":true,"client_id":"{client_id}","scope":["$DATA"]}}},"IdpOfbaConfiguration":{"description":"Configuration of external IdPs for OFBA login","required":["active","client_id","scope"],"type":"object","properties":{"active":{"description":"Flag if external IdP is in use for OFBA purposes","type":"boolean","example":"true"},"client_id":{"description":"External IdP client ID","type":"string"},"application_id_uri":{"description":"Optional configuration. Used for Azure.","type":"string"},"scope":{"description":"Scope to use","type":"array","items":{"type":"string"}}},"example":{"active":true,"client_id":"{client_id}","scope":["$DATA"]}},"ViewInfo":{"title":"Root Type for ViewInfo","description":"","type":"object","properties":{"name":{"description":"Name of the view, matches design","type":"string"},"alias":{"description":"Collection of alternate names, might match aliases of the Domino design","type":"array","items":{"type":"string"}},"unid":{"description":"Primary key to find the view","type":"string"},"selectionFormula":{"description":"The formula to select documents for a view.","type":"string"},"columns":{"description":"List of columns in the view","type":"array","items":{"type":"object","properties":{"title":{"description":"Title of the column.","type":"string"},"formula":{"description":"Formula of the column.","type":"string"},"name":{"description":"Name of the column.","type":"string"},"externalName":{"description":"Another name for the column, if this is present, this will be what the column will be known as.","type":"string"}}}}},"example":{"name":"(Customers)","alias":["Kunden","ग्राहकों"],"unid":"ABCD12345","selectionFormula":"SELECT (Form = \"Customer\")","columns":[{"title":"CustomerID","formula":"@DocNumber","name":"$1"},{"title":"FirstName","formula":"","name":"first_name"},{"title":"LastName","formula":"","name":"last_name"}]}},"OAuthApplicationSecretRequest":{"title":"Root Type for OAuthApplicationSecretRequest","description":"Meta data to generated secret for an application.","required":["status"],"type":"object","properties":{"status":{"description":"Whether the application is active or disabled.","enum":["isActive","disabled"],"type":"string","example":"isActive"},"client_id":{"description":"Parameter to prevent error for apps that call this API. Value of this gets ignored internally. Use the path parameter for passing client_id.","type":"string"}},"additionalProperties":false,"example":{"status":"isActive"}},"OAuthApplicationSecretResponse":{"title":"Root Type for OAuthApplicationSecretResponse","description":"Response for a client_secret request. Client seccret is returned once","required":["client_id","client_secret"],"type":"object","properties":{"client_id":{"description":"application ID, required as header for access","type":"string"},"client_secret":{"description":"The application secret generated by Domino REST API for the external application","type":"string"}},"additionalProperties":false,"example":{"client_id":"9c5fed-38c4-441808","client_secret":"7e368d-6b3b-54eda8"}},"AdminBackup":{"title":"Root Type for AdminBackup","description":"Definition of a Domino REST API configuration.","type":"object","properties":{"version":{"description":"Basic information about Domino REST API. ","type":"object"},"databases":{"description":"All database configuration, including keepconfig(KeepConfig.nsf) which has configuration settings for the Domino REST API. ","type":"object"},"apps":{"description":"Application configuration. ","type":"object"}},"example":{"version":{"keep-name":"HCL Domino REST API core API","keep-desc":"Next generation APIs for HCL Domino","image-build":"2022-10-14T03:03:04Z","keep-vendor":"HCL Labs","keep-version":"v1.0 (Build 1.9.0-SNAPSHOT-LocalBuild)"},"databases":{"demort":{"apiName":"demort","nsfPath":"Demo.nsf","iconName":"beach","icon":"Base64 stuff, preferably SVG","description":"test","formulaEngine":"domino","schemaName":"demort","requireRevisionToUpdate":false,"allowDecryption":true,"dqlAccess":true,"dqlFormula":{"formulaType":"domino","formula":"@True"},"allowCode":true,"openAccess":true,"unid":"6C726915B22B8439482588DA00042F96","forms":[{"formName":"fromSalesforce","alias":[],"formModes":[{"modeName":"default","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":[],"fields":[{"name":"Body","type":"TYPE_STRING","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"readOnly":false,"writeOnly":false,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"readAccessFields":[{"name":"Body","type":"TYPE_STRING","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"readOnly":false,"writeOnly":false,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"writeAccessFields":[{"name":"Body","type":"TYPE_STRING","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"readOnly":false,"writeOnly":false,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}]}]}],"views":[{"name":"Customers","alias":[],"unid":"86C72C1BF64B6DF04825847100373215"}],"agents":[],"formAliases":{},"isActive":true},"names":{"apiName":"names","nsfPath":"names.nsf","iconName":"mountain","schemaName":"names","requireRevisionToUpdate":false,"allowDecryption":false,"dqlAccess":false,"dqlFormula":{"formulaType":"domino","formula":"@False"},"allowCode":false,"openAccess":true,"forms":[],"views":[],"agents":[],"formAliases":{},"isActive":false},"keepconfig":{"apiName":"keepconfig","nsfPath":"KeepConfig.nsf","iconName":"mountain","icon":"Base64 stuff, preferably SVG","description":"Primary directory of this Domain","schemaName":"keepconfig","requireRevisionToUpdate":false,"allowDecryption":false,"dqlAccess":true,"dqlFormula":{"formulaType":"domino","formula":"@False"},"allowCode":true,"openAccess":true,"forms":[],"views":[],"agents":[],"formAliases":{},"isActive":true}},"apps":{"unknown":{"@unid":"0952193E783BF633C12588DB003AA430","author":"CN=chan clement/O=ProjectKeep","client_id":"7a2e3e-bfbc-eb6dfd","client_name":"Manager App","hasSecret":false,"client_uri":"http://test.local","contacts":["CN=chan clement/O=ProjectKeep"],"description":"Created by MANAGER","logo_uri":"cruise","redirect_uris":["http://test.local"],"scope":"managerscope","status":"isActive","token_endpoint_auth_method":"client_secret_basic"}}}},"AdminCache":{"title":"Root Type for AdminCache","description":"Definition of a Domino REST API cache of design element summaries.","type":"object","properties":{"cached":{"description":"If the specified database has been cached, then return true. Otherwise false.  ","type":"boolean"},"apiName":{"description":"How this database is known to the API.","type":"string"},"nsfPath":{"description":"Location on Domino server.","type":"string"},"formcount":{"format":"int32","description":"Form count exsit in the Domino REST API cache folder. ","type":"integer"},"viewcount":{"format":"int32","description":"View count exsit in the Domino REST API cache folder. ","type":"integer"},"agentcount":{"format":"int32","description":"Agent count exsit in the Domino REST API cache folder. ","type":"integer"},"librarycount":{"format":"int32","description":"Library count exsit in the Domino REST API cache folder. ","type":"integer"},"replicaid":{"description":"A 16-character combination of letters and numbers that represents the replica ID of a Notes database.","type":"string"},"title":{"description":"The title of the database.","type":"string"}},"example":{"cached":true,"apiName":"testdb","nsfPath":"Demo.nsf","formcount":8,"viewcount":5,"agentcount":2,"librarycount":0}},"AgentInfo":{"title":"Root Type for AgentInfo","description":"Definition of agent information","type":"object","properties":{"name":{"description":"Name of the agent, matches design","type":"string"},"alias":{"description":"Collection of alternate names, might match aliases of the Domino design","type":"array","items":{"type":"string"}},"unid":{"description":"Primary key to find the agent","type":"string"}},"example":{"name":"(CustomerUpdates)","alias":["KundenAbruf","ग्राहकों"],"unid":"ABCD12345"}},"DesignAgentSimple":{"title":"Root Type for DesignAgentSimple","description":"Definition design information for specific design element Agent.","type":"object","properties":{"@trigger":{"description":"Indicates when this agent runs.","type":"string","readOnly":true},"@documentset":{"description":"Represents a specified set of target documents that are manipulated by an agent.\n\nThe following types run an agent on:\n\nall - All the documents in the database.\n\nallinview - All documents in a view.\n\nmodified - All new and modified documents.\n\nrunonce - The current document once.\n\nselected - Only the selected documents.\n\nunreadinview - All unread documents in a view.\n\nnone","type":"string"},"@unid":{"description":"The Note UNID of the agent.","type":"string"},"@name":{"description":"The name of the agent.","type":"string"},"@validForKeep":{"description":"If this agent has been configured to use in Domino REST API. ","type":"boolean","readOnly":true},"@noteid":{"description":"The note ID of the agent, which is uniquely identifies a document within a particular database.","type":"string"},"@type":{"description":"Indicates the type of the agent (simple action, formula, LotusScript, imported Java, or Java).","type":"string"}},"example":{"@trigger":"MANUAL","@documentset":"SELECTED","@unid":"3F8E64B529DA6CF848258435004A37CC","@name":"Fix Body","@validForKeep":"","@noteid":"","@type":"LOTUSSCRIPT"}},"DesignColumnSimple":{"description":"This is one Datatype used to compose other schemas, DesignViewSimple and DesignViewSimpleRequest","required":["name","formula","separateMultipleValues"],"type":"object","properties":{"name":{"description":"","type":"string"},"title":{"description":"","type":"string"},"formula":{"description":"","type":"string"},"sort":{"description":"","enum":["ascending","descending","none"],"type":"string"},"separateMultipleValues":{"description":"","type":"boolean"}}},"DesignFieldSimple":{"description":"This is one Datatype used to compose other schemas, DesignFormSimple, DesignFormSimpleRequest and DesignSubFormSimple","required":["name","type"],"type":"object","properties":{"name":{"description":"","type":"string"},"type":{"description":"","enum":["text","number","richtext","datetime"],"type":"string"},"allowMultiValues":{"description":"","type":"boolean"}}},"DesignFormSimple":{"description":"Definition design information for specific design element Form.","required":["name","fields"],"type":"object","properties":{"@conflictaction":{"description":"Indicates how to handle form replication conflicts. ","type":"string","readOnly":true,"example":"createconflicts"},"@hide":{"type":"string","readOnly":true},"@name":{"description":"The name of the form.","type":"string","readOnly":true,"example":"TestForm"},"@noteid":{"description":"The note ID of a document, which is uniquely identifies a document within a particular database.","type":"string","readOnly":true,"example":"276"},"@unid":{"description":"Universal Id of the document, uniquely identifies a document across all replicas of a database","type":"string","readOnly":true,"example":"360A6B7035CD03C248258816000DDB47"},"@alias":{"description":"Alternate names or alias of the form.","type":"string","readOnly":true,"example":"TestForm"},"fields":{"description":"The fields on a forms. ","type":"array","items":{"$ref":"#/components/schemas/DesignFieldSimple"}}},"example":{"@alias":"TestForm","@conflictaction":"createconflicts","@hide":"web mobile","@name":"TestForm","@noteid":"276","@unid":"360A6B7035CD03C248258816000DDB47","first_name":{"kind":"editable","type":"text"},"last_name":{"kind":"editable","type":"text"},"email":{"kind":"editable","type":"text"},"gender":{"kind":"editable","type":"text"},"ip_address":{"kind":"editable","type":"text"},"Color":{"kind":"editable","type":"text"},"Pet":{"kind":"editable","type":"text"},"@created":{"kind":"editable","type":"datetime"},"$FILES":{"kind":"editable","type":"attachment"}}},"DesignFormSimpleRequest":{"title":"Root Type for DesignFormSimpleRequest","description":"Definition of request to create specific design element Form.","type":"object","properties":{"name":{"description":"The name of the form.","type":"string"},"alias":{"description":"Alternate names or alias of the form.","type":"string"},"fields":{"description":"The fields on a forms. ","type":"array","items":{"$ref":"#/components/schemas/DesignFieldSimple"}}},"example":{"name":"Entry","alias":"","fields":[{"name":"name","type":"text","allowmultivalues":false},{"name":"email","type":"text","allowmultivalues":false},{"name":"newField","type":"text","allowmultivalues":true}]}},"DesignNSFSimple":{"description":"Basic database object. NOTE: This is fit for limited current purpose, not complete for production","required":["title","nsfPath"],"type":"object","properties":{"title":{"description":"Datbase title","type":"string","example":"Our esteemed customers"},"templateName":{"description":"programmatic filename of the template, like 'demo.ntf'","type":"string","example":"DAOSsnap.ntf"},"nsfPath":{"description":"Path in internet style relative to the Domino data directory","type":"string","example":"crm/customers.nsf"}},"additionalProperties":false},"DesignSubFormSimple":{"title":"Root Type for DesignSubFormSimple","description":"Definition design information for specific design element Form.","type":"object","properties":{"@conflictaction":{"description":"Indicates how to handle form replication conflicts. ","type":"string","readOnly":true,"example":"createconflicts"},"@hide":{"type":"string","readOnly":true},"@name":{"description":"The name of the form.","type":"string","readOnly":true,"example":"subFormSharedField"},"@noteid":{"description":"The note ID of a document, which is uniquely identifies a document within a particular database.","type":"string","readOnly":true,"example":"276"},"@unid":{"description":"Universal Id of the document, uniquely identifies a document across all replicas of a database","type":"string","readOnly":true,"example":"360A6B7035CD03C248258816000DDB47"},"@alias":{"description":"Alternate names or alias of the form.","type":"string","readOnly":true,"example":"subFormAlias"},"fields":{"description":"The fields on a subform. ","type":"array","items":{"$ref":"#/components/schemas/DesignFieldSimple"}}},"example":{"@alias":"subFormAlias","@conflictaction":"createconflicts","@hide":"","@name":"subFormSharedField","@noteid":"282","@unid":"CC96242D1260ED3B4825881E002A410B","Group":{"kind":"editable","type":"text","allowmultivalues":false},"Group_Leader":{"kind":"editable","type":"text","allowmultivalues":false}}},"DesignViewSimple":{"description":"Definition design information for specific design element View.","required":["name","columns","selectionFormula"],"type":"object","properties":{"@name":{"description":"The name of the view.","type":"string","readOnly":true,"example":"Customers"},"@noteid":{"description":"The note ID of a view, which is uniquely identifies a view within a particular database.","type":"string","readOnly":true,"example":"222"},"@unid":{"description":"Universal Id of the view, uniquely identifies a view across all replicas of a database","type":"string","readOnly":true,"example":"86C72C1BF64B6DF04825847100373215"},"@alias":{"description":"Alternate names or alias of the view.","type":"string","readOnly":true},"selectionFormula":{"description":"","type":"string"},"columns":{"description":"","type":"array","items":{"$ref":"#/components/schemas/DesignColumnSimple"}}},"example":{"@alias":"","@name":"Customers","@noteid":"1be","@unid":"86C72C1BF64B6DF04825847100373215","$0":{"title":"#","formula":"@DocNumber"},"$1":{"title":"Created","formula":"@Created"},"last_name":{"title":"LastName","formula":""},"first_name":{"title":"FirstName","formula":""},"email":{"title":"eMail","formula":""},"Color":{"title":"Color","formula":""},"Pet":{"title":"Pet","formula":""}}},"DesignViewSimpleRequest":{"title":"Root Type for DesignViewSimpleRequest","description":"Definition of request to create specific design element View.","type":"object","properties":{"name":{"description":"The name of the view.","type":"string"},"selectionFormula":{"description":"The formula to select documents for a view. ","type":"string"},"columns":{"description":"","type":"array","items":{"$ref":"#/components/schemas/DesignColumnSimple"}}},"example":{"name":"entries","selectionFormula":"Form = \"Entry\"","columns":[{"name":"name","title":"name","separatemultiplevalues":false,"sort":"ascending","formula":"name"},{"name":"email","title":"email","separatemultiplevalues":false,"sort":"ascending","formula":"email"}]}},"ErrorMessage":{"title":"Root Type for ErrorMessage","description":"Detailed error message, might contain stacktrace","type":"object","properties":{"details":{"type":"string"},"message":{"type":"string"},"status":{"format":"int32","type":"integer"}},"example":{"details":"Long list of details","message":"We screwed up","status":500}},"KeepAccess":{"title":"Root Type for KeepAccess","description":"Provides information of access level required for Domino REST API operations:\n- Domino REST API mapping in Domino directory\n- Domino REST API configuration in individual databases\n\nMasks ACL and Role checks for users of the API","required":["CreateDbMapping","DeleteDbMapping"],"type":"object","properties":{"CreateDbMapping":{"description":"Can the current user create Domino REST API configuration mappings","type":"boolean"},"DeleteDbMapping":{"description":"Can the current user delete Domino REST API configuration mappings","type":"boolean"},"databases":{"description":"Details of access to a given database","type":"array","items":{"$ref":"#/components/schemas/KeepAccessDetail"}}},"example":{"CreateDbMapping":true,"DeleteDbMapping":true,"databases":[{"path":"demo.nsf","readKeepConfig":true,"createDeleteKeepConfig":true,"configurations":["demotest"],"activeConfigurations":{"demotest":"demotest"}},{"path":"names.nsf","readKeepConfig":true,"createDeleteKeepConfig":true,"configurations":["names"],"activeConfigurations":{"names":"names"}}]}},"KeepAccessDetail":{"title":"Root Type for KeepAccessDetail","description":"Information about access to an individual database and, if access is sufficient, information about available configurations","type":"object","properties":{"path":{"description":"Path relativ to the data directory of an NSF","type":"string","example":"apps/demo.nsf"},"readKeepConfig":{"description":"Can the given user read existing Domino REST API configurations","type":"boolean","example":"true"},"createDeleteKeepConfig":{"description":"Can the current user create or delete Domino REST API configurations","type":"boolean","example":"true"},"configurations":{"description":"List of Domino REST API configurations, ready to be mapped, in the design of a database","type":"array","items":{"$ref":"#/components/schemas/KeepAccessQuery"},"example":"[\n    {\n        \"name\": \"alternateapprovals\",\n        \"description\": \"Schema alternateapprovals\",\n        \"iconName\": \"mountain\"\n    },\n    {\n        \"name\": \"capprov\",\n        \"description\": \"central approval\",\n        \"iconName\": \"archeology\"\n    },\n    {\n        \"name\": \"default2\",\n        \"description\": \"Get approvals for training, travel and gear\",\n        \"iconName\": \"sell\"\n    }\n]"},"activeConfigurations":{"description":"Map of confgurations in use. Key is the public name, value the NSF internal name","type":"array","items":{"type":"object"},"example":"{\n    \"demo\": \"demo\"\n}"}},"example":{"path":"demo.nsf","readKeepConfig":true,"createDeleteKeepConfig":true,"configurations":[{"name":"alternateapprovals","description":"Schema alternateapprovals","iconName":"mountain"},{"name":"capprov","description":"central approval","iconName":"archeology"},{"name":"default2","description":"Get approvals for training, travel and gear","iconName":"sell"}],"activeConfigurations":{"demo":"demo"}}},"KeepAccessQuery":{"title":"Root Type for KeepAccessQuery","description":"Query to be send to check if user can read/update/delete Domino REST API configurations","required":["checkAllNsf","onlyConfigured"],"type":"object","properties":{"databases":{"description":"List of file path to enquiry","type":"array","items":{"type":"string"}},"checkAllNsf":{"description":"Should the query check all databases on the current server - might take a while. Excludes mail files","type":"boolean","example":"false"},"onlyConfigured":{"description":"Should only databases with existing Domino REST API configurations be returned","type":"boolean"}},"example":{"checkAllNsf":false,"onlyConfigured":false,"databases":["demo.nsf","apps/crm.nsf"]}},"KeepAccessShort":{"title":"Root Type for KeepAccessShort","description":"Provides simple information of access level required for Domino REST API access get operations:\n- Domino REST API mapping in Domino directory\n- Domino REST API configuration in individual databases\n\nMasks ACL and Role checks for users of the API","type":"object","properties":{"CreateDbMapping":{"description":"Can the current user create Domino REST API configuration mappings","type":"boolean"},"DeleteDbMapping":{"description":"Can the current user delete Domino REST API configuration mappings","type":"boolean"}},"example":{"CreateDbMapping":true,"DeleteDbMapping":true}},"KeepDatabase":{"title":"Root Type for KeepDatabase","description":"REST API Configuration of a domino database including views, forms, agents, modes. Used only for admin endpoints.","required":["nsfPath","formulaEngine","isActive"],"type":"object","properties":{"apiName":{"description":"How this database is known to the API","type":"string"},"description":{"description":"Description with human readable details of the database's purpose","type":"string"},"formulaEngine":{"description":"Script engine to be used to resolve permission formulas in FormModes or DQL access.\nNative Domino, OpenFormula or JavaScript\n\nCurrently only Native Domino is implemented","enum":["domino","openformula","javascript"],"type":"string"},"icon":{"description":"Base64 of an icon. SVG preferred","type":"string"},"iconName":{"description":"alt text for icon","type":"string"},"isActive":{"description":"Allows to enable/disable API access without removing cofiguration. This is used for scope. active is used for schema. ","type":"boolean"},"agents":{"description":"List of agents that are permitted to be called from the API","type":"array","items":{"$ref":"#/components/schemas/AgentInfo"}},"allowCode":{"description":"Can JS code be submitted for execution","type":"boolean"},"configuredForms":{"description":"All forms that are configured for access via the Domino REST API. Details in keepdatabaseconfig_formmode","type":"array","items":{"type":"string","readOnly":true}},"dqlAccess":{"description":"Does the API allow DQL queries to be submitted? DQL can query any document. Handle with care","type":"boolean"},"forms":{"description":"Array with form configurations including form modes","type":"array","items":{"$ref":"#/components/schemas/KeepForm"}},"openAccess":{"description":"Can this database be accessed from a browser e.g. in a React app) or app without providing AppId and AppSecret. Still proper authentication using a JWT bearer is required","type":"boolean"},"dqlFormula":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to execute when DQL Access is permitted to determine if it is permitted for the current user.\nDomino or OpenFormula"},"formAliases":{"description":"Collection of key / value pairs to map primary form names to potential alias values. A Notes document created with a form containing the alias will have the last alias value in its Form field","type":"object"},"requireRevisionToUpdate":{"description":"If db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.\r\n ","type":"boolean"},"views":{"description":"Array of Views that are available in the Domino REST API","type":"array","items":{"$ref":"#/components/schemas/ViewInfo"}},"nsfPath":{"description":"Location on Domino server","type":"string"},"schemaName":{"description":"name (without .json extension) of schema file in nsf REST file resources","type":"string"},"allowDecryption":{"description":"Allow decrypt the database","type":"boolean"},"cacheTimestamp":{"description":"timestamp for when design data were last added","type":"integer"},"@unid":{"description":"Universal Id of the document to be acted upon","type":"string","readOnly":true},"dxlpath":{"description":"DXL path for this database","type":"string","readOnly":true},"availableViews":{"description":"Array of Views that are available in the Domino REST API","type":"array","items":{"$ref":"#/components/schemas/ViewInfo"}},"prohibitRefresh":{"description":"indicates if the schema is protected against refresh by the design tast","type":"boolean"},"@warnings":{"description":"List of design elements that are not in the database.","type":"array","items":{"type":"string"}},"qrpLayouts":{"description":"Stored layout definitions for use with QRP calls. Unlike normal calls to QRP endpoints, these layouts can define formulas for columns","type":"array","items":{"$ref":"#/components/schemas/KeepQrpLayout"}}},"example":{"schemaName":"demoapi","description":"Demo database","nsfPath":"Demo.nsf","icon":"Base64 stuff, preferably SVG","iconName":"mountain","isActive":true,"requireRevisionToUpdate":false,"allowDecryption":true,"formulaEngine":"domino","openAccess":true,"allowCode":true,"dqlAccess":true,"dqlFormula":{"formulaType":"domino","formula":"@True"},"views":[{"name":"Customers","alias":["Customers"],"unid":"86C72C1BF64B6DF04825847100373215"},{"name":"MarketingInfo","alias":["MarketingInfo"],"unid":"10EA9EC66EA748BC4825851100420810"},{"name":"ChineseCustomers","alias":["ChineseCustomers"],"unid":"3FE5CD63E179F21600258680006DB25B"},{"name":"($All)","alias":["($All)"],"unid":"0E35D520A1EBBB5B48258435003E8284"},{"name":"Samples","alias":["Samples"],"unid":"5318911D496571410025860D00544B17"}],"agents":[],"forms":[{"formName":"Customer","alias":[],"formModes":[{"modeName":"default","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":["Form","first_name","email"],"fields":[{"name":"Body","fieldAccess":"RW","type":"object","format":"richtext","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":[],"summaryField":false},{"name":"color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"email","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"employee_count","fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"first_name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"hobbies","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"last_name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Owner","fieldAccess":"RW","type":"string","format":"authors","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY","READWRITERS"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"readAccessFields":[{"name":"Body","fieldAccess":"RW","type":"object","format":"richtext","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":[],"summaryField":false},{"name":"color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"email","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"employee_count","fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"first_name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RO","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"hobbies","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"last_name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Owner","fieldAccess":"RW","type":"string","format":"authors","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY","READWRITERS"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"writeAccessFields":[{"name":"Body","fieldAccess":"RW","type":"object","format":"richtext","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":[],"summaryField":false},{"name":"color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"email","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"employee_count","fieldAccess":"RW","type":"integer","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"first_name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"hobbies","fieldAccess":"RW","type":"array","format":"string","items":{"fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"last_name","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Owner","fieldAccess":"RW","type":"string","format":"authors","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY","READWRITERS"],"summaryField":true},{"name":"Pet","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}]}]},{"formName":"SampleForm","alias":[],"formModes":[{"modeName":"default","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"onLoad":{"formulaType":"domino","formula":""},"onSave":{"formulaType":"domino","formula":""},"computeWithForm":false,"required":[],"fields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"readAccessFields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}],"writeAccessFields":[{"name":"Color","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Form","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Shape","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true},{"name":"Taste","fieldAccess":"RW","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"minLenght":-1,"maxLength":-1,"itemFlags":["SUMMARY"],"summaryField":true}]}]}],"formAliases":{"Entry":"Entry","SampleEntry":"SampleEntry","Customer":"Customer","IdPConfig":"IdP Configuration","OdataSampleForm":"OdataSampleForm","TestForm":"TestForm"},"@unid":"3D59BBE2676B2A45002588FD001E4B2A"}},"KeepField":{"title":"Root Type for KeepField","description":"Field description for fields / items in a KeepFormMode.\nDescribes name, type, and multi-value capability.\nModeled after json-schema where multi-value = array\nextension to json-schema limited to x-access-name\nto specify Domino Names, Reader, Author nature\nAll other field copied from JSON Schema","required":["type","name"],"type":"object","properties":{"name":{"description":"Field name. While anything theoretical is possible we stick to letters and numbers with the first letter capitalized. Not a hard rule to accomodate existing data","type":"string","example":"Form"},"type":{"description":"Data type, from JSON spec. Can be:\n- object\n- array\n- string\n- number\n- integer\n- boolean","enum":["object","array","string","number","integer","boolean"],"type":"string","example":"string"},"multivalue":{"description":"Can the field process multiple values, HCL Domino style.\nWhen missing => false","type":"boolean","readOnly":true,"example":"true"},"fieldGroup":{"description":"Domino multi-value fields can be grouped together to form a kind oc child record in a document. The fieldGroup defines such a grouping. It only is relevant for multi-value fields and isn't populated by default","type":"string","example":"recipients"},"description":{"description":"Long text explanation what the field is about","type":"string","example":"Enter the following information yada yada yada"},"format":{"description":"Format definition for Strings, extended from json-schema with readers, authors, names, json","enum":["authors","binary","byte","date","date-time","double","float","int32","int64","names","password","readers","richtext","boolean","string","json","attachments"],"type":"string","example":"names"},"items":{"description":"Item description can contain type and format","type":"object"},"minitems":{"description":"for array type: minimum number of items","type":"integer","example":"2"},"uniqueitems":{"description":"Shall array members be unique","type":"boolean","example":"true"},"minimum":{"description":"lowest value, value included","type":"number","example":"2"},"maximum":{"description":"maximum value, not included","type":"number","example":"42"},"exclusiveMinimum":{"description":"Minimum value, not included","type":"number","example":"4"},"maxLength":{"description":"not longer than that","type":"integer","example":"93"},"minLength":{"description":"Low long is a String","type":"integer","example":"4"},"fieldAccess":{"description":"Determines the access to a field as Read/Write, ReadOnly or WriteOnly","enum":["RW","RO","WO"],"type":"string"}},"example":{"name":"Age","type":"array","fieldGroup":"person","items":{"type":"integer","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1}},"KeepFieldGroup":{"title":"Root Type for KeepFieldGroup","description":"A KeepFieldGroup describes the properites of a group of multi-value Notes items that form \"child records\" inside a single Notes document. Besides multi-value items, items with a common name and a counting suffix can form a field group","required":["type","name","suffix"],"type":"object","properties":{"name":{"description":"Name tha links this definition to fieldGroup entries in KeepFields","type":"string","example":"itemLine"},"type":{"description":"How is the group formed: by multi-value or common field name with counting suffix ","enum":["byName","multiValue"],"type":"string","example":"multiValue"},"suffix":{"description":"Separation character(s) between item name and counter","type":"string","example":"_"},"firstWithoutSuffix":{"description":"For name linked items, does the first have the suffix (Name_1) or not (Name)","type":"boolean","example":"true"},"max":{"format":"int32","description":"MAximum number of rows/item names to use","type":"integer","example":"42"}},"example":{"name":"OrderLine","type":"byName","suffix":"_","firstWithoutSuffix":true,"max":50}},"KeepForm":{"description":"Definition of a Domino REST API form including form modes","required":["formName","formModes"],"type":"object","properties":{"formName":{"description":"Name of the form as stored in the document, might be an alias","type":"string"},"fieldGroups":{"description":"Definition of fieldgroups that form detail records inside a document","type":"array","items":{"$ref":"#/components/schemas/KeepFieldGroup"}},"formModes":{"description":"Array of FormModes configured for this database. Might be empty","minItems":1,"uniqueItems":true,"type":"array","items":{"$ref":"#/components/schemas/KeepFormMode"}},"alias":{"description":"Alternate names or alias of the form.","type":"array","items":{"type":"string"}}}},"KeepFormMode":{"title":"Root Type for KeepFormMode","description":"Form modes for Domino REST API Database config","required":["deleteAccessFormula","modeName","fields","readAccessFormula","writeAccessFormula"],"type":"object","properties":{"computeWithForm":{"description":"Compute with form before saving","type":"boolean"},"deleteAccessFormula":{"$ref":"#/components/schemas/KeepFormula","description":"Formuls to determine delete access"},"modeName":{"description":"lowercase, name of the mode. Special names are default and odata ","type":"string"},"onLoad":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to run after loading a document, before returning to the caller"},"onSave":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to run after receiving a document, before save"},"readAccessFormula":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to determine read access for this mode"},"writeAccessFormula":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to determine write permissions"},"validationRules":{"description":"formula rules to determine access","type":"array","items":{"$ref":"#/components/schemas/KeepFormula"}},"fields":{"anyOf":[{"type":"array","items":{"type":"string"}},{"type":"array","items":{"$ref":"#/components/schemas/KeepField"}}],"description":"all fields in this mode","type":"array","items":{"$ref":"#/components/schemas/KeepField"}},"required":{"description":"List of fields that are required to be provided","type":"array","items":{"type":"string"}},"readAccessFields":{"description":"read access fields in this mode","type":"array","items":{"$ref":"#/components/schemas/KeepField"}},"writeAccessFields":{"description":"write access fields in this mode","type":"array","items":{"$ref":"#/components/schemas/KeepField"}}},"example":{"modeName":"default","validationRules":[],"readAccessFormula":{"formulaType":"domino","formula":"@True"},"writeAccessFormula":{"formulaType":"domino","formula":"@True"},"deleteAccessFormula":{"formulaType":"domino","formula":"@False"},"computeWithForm":false,"required":["Form","first_name","email"],"fields":[{"name":"color","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"email","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"first_name","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"Form","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RO","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"hobbies","type":"array","format":"string","items":{"type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"last_name","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"Pet","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true}],"readAccessFields":[{"name":"color","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"email","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"first_name","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"Form","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RO","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"hobbies","type":"array","format":"string","items":{"type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"last_name","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"Pet","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true}],"writeAccessFields":[{"name":"color","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"email","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"first_name","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"hobbies","type":"array","format":"string","items":{"type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},"minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"last_name","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true},{"name":"Pet","type":"string","format":"string","minitems":-1,"uniqueitems":false,"minimum":0,"maximum":0,"exclusiveMinimum":-1,"fieldAccess":"RW","minLenght":-1,"maxLength":-1,"summaryField":true}]}},"KeepFormula":{"title":"Root Type for KeepFormula","description":"Formula in a scripting environment, that can be used for true/false evaluation or as a pre-load/save execution.","required":["formulaType"],"type":"object","properties":{"formulaType":{"description":"computation model, currently Domino only","enum":["domino"],"type":"string"},"formula":{"description":"Formula code to run","type":"string"},"message":{"description":"Optional message to use for fasilure of formula","type":"string"}},"example":{"formulaType":"Domino","formula":"@IsMember(\"[RaiseRequest]\"; @UserNamesList)"}},"QuickConfigParam":{"description":"Definition of request to quick config a domino database","required":["nsfPath"],"type":"object","properties":{"scopeName":{"description":"Name that is used in ?datSsource= parameter to access configured resource","type":"string","example":"\"demo\""},"nsfPath":{"description":"path relative to Domino data directory to nsf database","type":"string","example":"\"storeops/sales.nsf\""},"schemaName":{"description":"name (without .json extension) of schema file in nsf REST file resources. Default value is \"default\"","type":"string"},"create":{"description":"If nsf file not exist, create one empty database or not.","type":"boolean","example":"true"},"description":{"description":"Description to the configured scope","type":"string"},"icon":{"description":"Base64 of an icon. SVG preferred","type":"string"},"iconName":{"description":"alt text for icon","type":"string"},"maximumAccessLevel":{"description":"Determines the maximum ACL Level for the scope definition.\nDefault if not provided is Editor","enum":["NoAccess","Depositor","Reader","Author","Editor","Designer","Manager"],"type":"string"},"additionalModes":{"description":"y default quick config creates default modes only. afor some clients additional modes like \"dql\", \"odata\" or some custom mode are required and can be specified here","type":"array","items":{"type":"string"},"example":"[\"dql\", \"odata\"]"},"allowDeletion":{"description":"if set to true, thw DeleteAccess in the Schema will be set to true","type":"boolean","example":"true"}}},"RestConfigShort":{"title":"Root Type for RestConfigShort","description":"Short summary of a rest configuration","type":"object","properties":{"apiName":{"description":"How this database is known to the API","type":"string"},"comment":{"description":"The comment assigned to the design element","type":"string"},"template":{"description":"The name of the note-specific template this design element is set to derive from","type":"string"},"prohibitRefresh":{"description":"When notes database has been configured \"Inherit from the design template\", if \"Prohibit design refresh or replace to modify\" is checked, the design element will not be affected when you replace or refresh the design.","type":"boolean"}},"additionalProperties":false,"example":{"apiName":"restcon","comment":"REST API configuration restcon2","template":"","prohibitRefresh":false}},"OAuthApplicationRequest":{"title":"Root Type for OAuthApplicationRequest","description":"Meta data to register an application for OAuth IdP","required":["client_name","scope","client_uri","redirect_uris"],"type":"object","properties":{"client_name":{"description":"Human readable Application name","type":"string"},"description":{"description":"Description what the application does","type":"string"},"redirect_uris":{"description":"List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url","type":"array","items":{"type":"string"}},"scope":{"description":"Scopes the application can (and will) request. When the application requests other scopes, token is denied","type":"string"},"client_uri":{"description":"Start page of application. Can be used to create list of apps","type":"string"},"logo_uri":{"description":"Optional: application logo URL","type":"string"},"status":{"description":"Is this application active","enum":["isActive","disabled"]},"contacts":{"description":"URL, eMail, handles to contact people responsible for the app","type":"array","items":{"type":"string"}},"token_endpoint_auth_method":{"description":"Token endpoint authentication","type":"string"},"client_id":{"description":"Application ID. Empty on creation, required for update","type":"string"}},"additionalProperties":false,"example":{"client_name":"My App","description":"Super cool demo App","redirect_uris":["http://localhost/callback","https://domino.projectcastle.io/identity","https://www.projectcastle.io/oauth"],"scope":"demo $DECRYPT","client_uri":"https://www.projectcastle.io/coolapp","logo_uri":"https://www.projectcastle.io/castle.jpg","contacts":["admin@projectcastle.io"],"token_endpoint_auth_method":"client_secret_basic","status":"isActive"}},"OAuthApplicationRequestUpdate":{"title":"Root Type for OAuthApplicationRequestUpdate","description":"Meta data to register an application for updating OAuth IdP","type":"object","properties":{"client_name":{"description":"Human readable Application name","type":"string"},"description":{"description":"Description what the application does","type":"string"},"redirect_uris":{"description":"List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url","type":"array","items":{"type":"string"}},"scope":{"description":"Scopes the application can (and will) request. When the application requests other scopes, token is denied","type":"string"},"client_uri":{"description":"Start page of application. Can be used to create list of apps","type":"string"},"logo_uri":{"description":"Optional: application logo URL","type":"string"},"status":{"description":"Is this application active","enum":["isActive","disabled"]},"contacts":{"description":"URL, eMail, handles to contact people responsible for the app","type":"array","items":{"type":"string"}},"token_endpoint_auth_method":{"description":"Token endpoint authentication","type":"string"},"isActive":{"description":"DEPRECATED, Don't use","type":"string"},"client_id":{"description":"Internal application id. Ignored here, taken from URL query parameter","type":"string"}},"additionalProperties":false,"example":{"client_name":"My App","description":"Super cool demo App","redirect_uris":["http://localhost/callback","https://domino.projectcastle.io/identity","https://www.projectcastle.io/oauth"],"scope":"demo $DECRYPT","client_uri":"https://www.projectcastle.io/coolapp","logo_uri":"https://www.projectcastle.io/castle.jpg","contacts":["admin@projectcastle.io"],"token_endpoint_auth_method":"client_secret_basic","status":"isActive"}},"OAuthApplicationResponse":{"title":"Root Type for OAuthApplicationResponse","description":"Response for registering an application for OAuth IdP","required":["client_id","client_name","client_uri","redirect_uris","scope","status","token_endpoint_auth_method"],"type":"object","properties":{"client_name":{"description":"Human readable Application name","type":"string"},"description":{"description":"Desscription what the application does","type":"string"},"client_id":{"description":"System generated client Id. Used for auth request and as user name for Token requests","type":"string"},"redirect_uris":{"description":"List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url","type":"array","items":{"type":"string"}},"scope":{"description":"Scopes the application can (and will) request. When the application requests other scopes, token is denied","type":"string"},"client_uri":{"description":"Start page of application. Can be used to create list of apps","type":"string"},"logo_uri":{"description":"Optional: application logo URL","type":"string"},"token_endpoint_auth_method":{"description":"Token endpoint authentication","enum":["client_secret_basic"],"type":"string"},"status":{"description":"Is this application active","enum":["isActive","disabled"],"type":"string"},"contacts":{"description":"URL, eMail, handles to contact people responsible for the app","type":"array","items":{"type":"string"}},"@unid":{"description":"Universal Id of the document.","type":"string","readOnly":true},"@author":{"description":"The person who created the external application","type":"string","readOnly":true},"hasSecret":{"description":"Flag to indicate if an application has a secret configured","type":"boolean"}},"additionalProperties":false,"example":{"@unid":"F1490F201EB9D8C5482588B50013F519","author":"CN=John Doe/O=ProjectKeep","client_id":"429022-562b-641620","client_name":"My App","hasSecret":false,"client_uri":"https://www.projectcastle.io/coolapp","contacts":["admin@projectcastle.io","CN=John Doe/O=ProjectKeep"],"description":"Super cool demo App-testupdate","logo_uri":"http://www.projectcastle.io/castle.jpg","redirect_uris":["http://domino.projectcastle.io/identity","http://localhost/callback","http://www.projectcastle.io/oauth"],"scope":"demo $DECRYPT","status":"disabled","token_endpoint_auth_method":"client_secret_basic"}},"Unid":{"description":"32 char universalId A-Z0-9, primary key unique across replicas","maxLength":32,"minLength":32,"pattern":"[0-9A-F]*","type":"string","readOnly":true,"example":"6834F14BE9CA69F68525871E00583D1B"},"StatusMessage":{"title":"Root Type for StatusMessage","description":"Keep-formatted status message","required":["message","status","statusCode"],"type":"object","properties":{"status":{"description":"Success / failure status","type":"string"},"statusCode":{"format":"int32","description":"HTTP status code","type":"integer"},"message":{"description":"Short descriptive message","type":"string"},"unid":{"$ref":"#/components/schemas/Unid","description":"Document primary key"},"details":{"description":"Json Object containing further details, if appropriate","type":"string"}},"example":{"status":"OK","statusCode":200,"message":"deletion complete","unid":"61CCE871E79E8DDB8025852F004DFF2D"}},"RestMapping":{"title":"Root Type for RestMapping","description":"Maps a rest config from its internal name to the name it is visible. Info can be seen in the Internet sites of the domino directory. Also known as scope","required":["apiName","nsfPath","schemaName","isActive"],"type":"object","properties":{"@meta":{"description":"Document meta data.","type":"object"},"apiName":{"description":"Name that is used in ?datSsource= parameter to access mapped resource","pattern":"[a-z0-9]","type":"string"},"isActive":{"description":"Allows to enable/disable API access without removing cofiguration","type":"boolean"},"@Revisions":{"description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. ","type":"array","items":{"type":"string"},"example":"[\r\n    \"2022-08-03T18:10:22.72+08:00\",\r\n    \"2022-08-08T10:14:30.19+08:00\"\r\n]"},"@UpdatedBy":{"description":"The user who update the doc.","type":"array","items":{"type":"string"},"example":"[\r\n    \"CN=John Doe/O=ProjectKeep\"\r\n]"},"schemaName":{"description":"name (without .json extension) of schema file in nsf REST file resources","pattern":"[a-z0-9]","type":"string"},"nsfPath":{"description":"path relative to Domino data directory to nsf database","type":"string"},"description":{"description":"Human readable explanation","type":"string"},"Form":{"description":"Form name","type":"string","example":"KeepDatabase"},"Type":{"description":"","type":"string","example":"KeepDatabase"},"createSchema":{"description":"Default to be false if you don't set this property. It won't create the schema. When set to be true, it will create schema using given schemaName. ","type":"integer"},"server":{"description":"Domino server name that this scope is enabled on. Empty or '*' mean that this scope is enabled on all Domino servers. ","type":"string"},"maximumAccessLevel":{"description":"Limits, but not extends the access level granted to an API user.\nMirrors the MaximumInternetAccess in DB ACLs.\nDefault if not provided is Editor","enum":["NoAccess","Depositor","Author","Editor","Designer","Manager","Reader"],"type":"string"}},"additionalProperties":false,"example":{"@meta":{"noteid":2342,"unid":"1E280A1798C5C313482588D9002671A2","created":"2022-10-12T14:59:54.58+08:00","lastmodified":"2022-10-12T15:13:36.56+08:00","lastaccessed":"2022-10-12T15:10:26.59+08:00","lastmodifiedinfile":"2022-10-12T15:13:36.57+08:00","addedtofile":"2022-10-12T14:59:54.7+08:00","noteclass":["DATA","DOCUMENT"],"unread":true,"revision":"000000060027B2B8482588D9"},"$UpdatedBy":["CN=John Doe/O=ProjectKeep"],"$Revisions":["2022-10-12T14:59:54.7+08:00","2022-10-12T15:09:02.71+08:00","2022-10-12T15:09:25.33+08:00","2022-10-12T15:09:45.99+08:00"],"apiName":"demoapi","createSchema":0,"description":"The famous demo database","isActive":true,"nsfPath":"Demo.nsf","schemaName":"demoapi","Form":"KeepDatabase","Type":"KeepDatabase","server":"*"}},"UserInfo":{"title":"Root Type for UserInfo","description":"Provies information about the user, their groups, where the msil file is","required":["sub"],"type":"object","properties":{"scope":{"type":"string"},"names":{"type":"array","items":{"type":"string"}},"email":{"type":"string"},"mailServer":{"type":"string"},"mailFile":{"type":"string"},"sub":{"description":"Subject full username","type":"string"},"name":{"description":"User name","type":"string"},"given_name":{"description":"User's given name, if known","type":"string"},"family_name":{"description":"User's family name, if known","type":"string"},"preferred_username":{"description":"A short username suitable for a new-account creation hint","type":"string"}},"example":{"sub":"CN=Jane Doe/O=SomeOrg","name":"CN=Jane Doe/O=SomeOrg","given_name":"Jane","family_name":"Doe","preferred_username":"j.doe","email":"janedoe@example.com","names":["CN=Jane Doe/O=SomeOrg","Jane Doe","*","*/O=SomeOrg","ExampleGroup"],"mailServer":"CN=frascati.projectkeep.io/O=ProjectKeep","mailFile":"mail/dnotes.nsf","scope":"MAIL $DATA $DECRYPT"}},"ConsentInfo":{"title":"Root Type for ConsentInfo","description":"Provies information about the users consent values","type":"object","properties":{"username":{"type":"string"},"scope":{"type":"string"},"client_id":{"type":"string"},"redirect_uri":{"type":"string"},"code_expires_at":{"type":"string"},"refresh_token_expires_at":{"type":"string"}},"example":{"username":"CN=Jane Doe/O=SomeOrg","scope":"CN=Jane Doe/O=SomeOrg","client_id":"7e06d6-ed62-0f5c1c","redirect_uri":"http://localhost:8880","code_expires_at":"somedatetimevalue","refresh_token_expires_at":"somedatetimevalue"}},"OAuthApplicationCallbackRequest":{"title":"Root Type for OAuthApplicationRequest","description":"Meta data to register an application for OAuth IdP","required":["redirect_uri","client_id","client_secret"],"type":"object","properties":{"redirect_uri":{"description":"Callback URL Must use https with the exception of http://localhost/some_url, Must match existing host & protocol","type":"string"},"client_secret":{"description":"Existing client secret","type":"string"},"client_id":{"description":"Application ID","type":"string"}},"additionalProperties":false,"example":{"client_id":"89ffb32c-0e10-11ef-8cf2-0210c0ae4e47","client_secret":"9d71f0aa-0e10-11ef-b374-0210c0ae8f88","redirect_uri":"https://foundry.projectcastle.io/app/66556fed55"}},"OAuthApplicationCallbackResponse":{"title":"Root Type for OAuthApplicationResponse","description":"Response for registering an application for OAuth IdP","required":["client_id","client_uri","redirect_uris","status"],"type":"object","properties":{"client_id":{"description":"System generated client Id. Used for auth request and as user name for Token requests","type":"string"},"redirect_uris":{"description":"List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url","type":"array","items":{"type":"string"}},"client_uri":{"description":"Start page of application. Can be used to create list of apps","type":"string"},"status":{"description":"Is this application active","enum":["isActive","disabled"],"type":"string"},"hasSecret":{"description":"Flag to indicate if an application has a secret configured","type":"boolean"}},"additionalProperties":false,"example":{"client_id":"429022-562b-641620","hasSecret":true,"client_uri":"https://www.projectcastle.io/coolapp","redirect_uris":["http://domino.projectcastle.io/identity","http://localhost/callback","http://www.projectcastle.io/oauth"],"status":"isActive"}},"KeepQrpLayout":{"title":"Root Type for KeepQrpLayout","description":"Definition for a stored layout for QRP results","required":["name","columns","formNames"],"type":"object","properties":{"formNames":{"description":"Array of form names for which this layout can be used in QRP calls","type":"array","items":{"type":"string"}},"columns":{"description":"Definitions for columns to be returned in QRP calls","type":"array","items":{"$ref":"#/components/schemas/KeepQrpColumn"}},"name":{"description":"Unique name for this layout for use in QRP query calls","type":"string"}},"example":{"formNames":["Employee","Customer"],"columns":[{"name":"$FullName","sortOrder":"ascending","formula":"FirstName + ' ' + LastName","categorized":false}]}},"KeepQrpColumn":{"title":"Root Type for KeepQrpColumn","description":"Definition of a column for use in stored QRP output layouts","required":["name"],"type":"object","properties":{"name":{"type":"string"},"sortOrder":{"enum":["unordered","ascending","descending"],"type":"string"},"formula":{"type":"string"},"categorized":{"type":"boolean"}},"example":{"name":"$FullName","sortOrder":"ascending","formula":"FirstName + ' ' + LastName","categorized":false}}},"responses":{"400BadRequest":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Invalid request. Shows up when submission is flaky:\n- Wrong authentication\n- Wrong content-type\n- Missing or wrong parameter types"},"401Unauthorized":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"Unauthorized":{"value":{"status":401,"message":"Invalid credentials or account locked"}}}}},"description":"401 Unauthorized"},"403Forbidden":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"Forbidden":{"value":{"message":"Nice try chap, ask before next time","status":403}}}}},"description":"Forbidden"},"404NotFound":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"message":"This is not the data you seek!","status":404}}}}},"description":"Content not found"},"405MethodNotAllowed":{"description":"Method not allowed"},"406NotAcceptable":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"GenericRejection":{"value":{"details":"The haferlup needs left turning shrufti","message":"This is not a supported operation. Try again","status":406}}}}},"description":"Invalid operation - something got requested that isn't supported"},"500InternalServerError":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"GenericError":{"value":{"details":"Dreaded pirate NullPointer","message":"Sorry pal, we screwed up","status":500}}}}},"description":"The server screwed up"},"501NotImplemented":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NextVersion":{"value":{"details":"We do sprints, not marathons","message":"Not now, maybe tomorrow","status":501}}}}},"description":"Working on it, just not yet"}},"securitySchemes":{"basic":{"scheme":"basic","type":"http","description":"Basic authentication for Excel oData feed"},"jwt":{"scheme":"bearer","type":"http","description":"Token based auth (preferred)"}}},"security":[{"jwt":[]},{},{"basic":[]}],"tags":[{"name":"admin","description":"The endpoints are for retrieving information on the current user, retrieve all oauth-configured applications and information about the current Domino and Domino REST API"},{"name":"data","description":"CRUD of Domino NoSQL data in JSON format. Workhorse APIs, used by applications to operate"},{"name":"authentication","description":"URL Endpoints to get access to the system"},{"name":"code","description":"URL Endpoints to run code against data"},{"name":"odata","description":"Endpoints serving OData compliant information"},{"name":"scope","description":"Endpoints to retrieve information about scopes. Domino databases are made known through a scope that defines access to forms, fields, views and agents. Readable by mortal users"}]}