{"openapi":"3.0.2","info":{"title":"HCL Domino REST API admin","version":"1.1.2","description":"Administration for users, groups, acl","contact":{"name":"HCL America Inc","url":"https://opensource.hcltechsw.com/Domino-rest-api/","email":"HeyHCL@pnp-hcl.com"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0"}},"servers":[{"url":"/api/admin-v1","description":"KEEP enabled server"}],"paths":{"/acl/roles":{"summary":"Gets all roles for an ACL","get":{"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/aclRoles"},"examples":{"success":{"value":{"roles":["[Admin]","[DbAdmin]","[Marketing]"]}}}}},"description":"Array of roles"}},"security":[{"jwt":[]}],"operationId":"fetchRoles","summary":"Gets the roles from an ACL","description":"Gets the roles from an ACL","x-keep-version":1},"parameters":[{"examples":{"database":{"value":"demo"}},"name":"dataSource","description":"Keep database name","schema":{"type":"string"},"in":"query","required":false},{"name":"nsfPath","description":"Domino database filepath","schema":{"type":"string"},"in":"query"}]},"/acl/entries":{"summary":"Get all ACL entries or put one","get":{"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/aclEntry"}},"examples":{"aclEntryList":{"value":[{"name":"LocalDomainAdmins","type":"GROUP","level":"MANAGER","roles":["Admin"],"flags":["CREATE_FOLDER","CREATE_PRFOLDER","CREATE_LOTUSSCRIPT","PUBLIC_READER"]},{"name":"Anonymous","type":"","level":"NOACCESS","roles":[],"flags":[]}]}}}},"description":"Success"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"fetchAclEntries","summary":"Gets ACL entries","description":"Gets ACL entries","x-keep-version":1},"parameters":[{"examples":{"database":{"value":"demo"}},"name":"dataSource","description":"Keep database name","schema":{"type":"string"},"in":"query","required":false},{"name":"nsfPath","description":"Domino database filepath","schema":{"type":"string"},"in":"query"}]},"/acl/entries/{aclEntryName}":{"summary":"Get an individual ACL Entry or delete an entry","get":{"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/aclEntry"},"examples":{"aclEntry":{"value":{"name":"LocalDomainAdmins","type":"GROUP","level":"MANAGER","roles":["Admin"],"flags":["CREATE_FOLDER","CREATE_PRFOLDER","CREATE_LOTUSSCRIPT","PUBLIC_READER"]}}}}},"description":"Success"}},"security":[{"jwt":[]}],"operationId":"getAclEntry","summary":"Gets an ACL Entry","description":"Gets an ACL Entry","x-keep-version":1},"put":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/aclEntry"},"examples":{"AclEntry":{"value":{"name":"John Doe/Mauraders","type":"PERSON","level":"AUTHOR","roles":[],"flags":["NODELETE"]}}}}},"required":true},"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/aclEntry"},"examples":{"aclEntry":{"value":{"name":"LocalDomainAdmins","type":"GROUP","level":"MANAGER","roles":["Admin"],"flags":["CREATE_FOLDER","CREATE_PRFOLDER","CREATE_LOTUSSCRIPT","PUBLIC_READER"]}}}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"replaceCreateAclEntry","summary":"Create or Update an ACL Entry","description":"Create or Update an ACL Entry","x-keep-version":1},"delete":{"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"},"examples":{"complete":{"value":{"status":"deletion complete"}}}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"deleteAclEntry","summary":"Delete an ACL Entry","description":"Delete an ACL Entry","x-keep-version":1},"parameters":[{"examples":{"database":{"value":"demo"}},"name":"dataSource","description":"Keep database name","schema":{"type":"string"},"in":"query","required":false},{"examples":{"DemoDomainAdmins":{"value":"DemoDomainAdmins"}},"name":"aclEntryName","description":"ACL Entry name","schema":{"type":"string"},"in":"path","required":true},{"name":"nsfPath","description":"Domino database filepath","schema":{"type":"string"},"in":"query"}]},"/access/group":{"summary":"Endpoint to create a group of members in the server directory, default names.nsf.","description":"Endpoint to create a group of members in the server directory, default names.nsf.","post":{"requestBody":{"description":"Group to create","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/accessAutopopulatedGroup"},{"$ref":"#/components/schemas/accessManualGroup"}]},"examples":{"CreateGroup":{"value":{"name":"{{groupName}}","category":"","description":"","internetAddress":"","mailDomain":"","owners":[""],"type":"acl-only","members":["John Doe/Mauraders"]}}}}},"required":true},"tags":["admin-user"],"responses":{"200":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/accessAutopopulatedGroup"},{"$ref":"#/components/schemas/accessManualGroup"}]},"examples":{"sampleAccessGroupResponse":{"value":{"name":"GroupTestPut","description":"This is a test group","internetAddress":"","mailDomain":"","category":"","administrators":[],"owners":[""],"type":"acl-only","members":["John Doe/Mauraders","John Doe/ProjectKeep","Ying Feng/HCLPNP"],"@unid":"B468C002AA12708D482588E0005646E0"}}}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"createGroup","summary":"Creates a group, with a starting set of members","description":"Creates a group, with a starting set of members","x-keep-version":1}},"/access/group/{unid}":{"summary":"Gets, updates or deletes a group by UNID in the server directory, default names.nsf.","description":"Use specific methods to add or remove members","get":{"tags":["admin-user"],"parameters":[{"name":"resolveMembers","description":"Whether to resolve down to individual users or not. Resolving down to individual members will affect performance.\n\nIf you omit this parameter or setting to false, the members are returned as they appear in the group document. So members maybe individuals or groups.","schema":{"type":"boolean"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/accessAutopopulatedGroup"},{"$ref":"#/components/schemas/accessManualGroup"}]},"examples":{"exampleGroup":{"value":{"name":"LocalDomainServers","description":"This group should contain all Domino servers in your domain. Many databases give servers in this group Manager access.","category":"Administration","owners":["Lotus Notes Template Development"],"type":"multi-purpose","members":["CN=LP2-AP-51723551/O=HCLPNP"],"@unid":"4CBB696EB667155D85256B020060D449"}}}}},"description":"Success"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getGroup","summary":"Gets a group by name","description":"Gets a group by name","x-keep-version":1},"put":{"requestBody":{"description":"Updated group object","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/accessAutopopulatedGroup"},{"$ref":"#/components/schemas/accessManualGroup"}]},"examples":{"UpdateGroup":{"value":{"name":"{{groupName}}","category":"","description":"This is a test group","internetAddress":"","mailDomain":"","owners":[""],"type":"acl-only","members":["John Doe/Mauraders"]}}}}},"required":true},"tags":["admin-user"],"responses":{"200":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/accessAutopopulatedGroup"},{"$ref":"#/components/schemas/accessManualGroup"}]},"examples":{"sampleResponse":{"value":{"name":"testGroup","administrators":["CN=John Doe/O=ProjectKeep"],"owners":["CN=John Doe/O=ProjectKeep"],"type":"multi-purpose","members":["CN=Zhang San/O=HCLPNP"],"@unid":"B416B6056A97EF794825880E00584A89"}}}}},"description":"Success"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"updateGroup","summary":"Changes a group, including renaming","description":"Changes a group, including renaming","x-keep-version":1},"delete":{"tags":["admin-user"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"},"examples":{"complete":{"value":{"statusText":"OK","status":200,"message":"deletion complete","unid":"826135FA23333D7D482588E000582F0D"}}}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"deleteGroup","summary":"Deletes a group","description":"Deletes a group","x-keep-version":1},"patch":{"requestBody":{"description":"List of members","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/accessMembers"}},"examples":{"UpdateGroupMembers":{"value":[{"members":["Fred Doe/Mauraders"],"process":"add","type":"members"},{"members":["John Doe/Mauraders"],"process":"remove","type":"members"}]}}}},"required":true},"tags":["admin-user"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/accessGroupPatchResponse"},"examples":{"success":{"value":{"statusText":"OK","status":200,"message":"update complete","details":{"errors":["Additional members are only available for auto-populated groups"]}}}}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"updateGroupMembers","summary":"Adds / removes members from a group","description":"Adds / removes members from a group","x-keep-version":1},"parameters":[{"name":"unid","schema":{"type":"string"},"in":"path","required":true}]},"/access/user":{"summary":"Endpoint to create a user in the server directory, default names.nsf.","description":"Endpoint to create a user in the server directory, default names.nsf.","post":{"requestBody":{"description":"User to create","content":{"application/json":{"schema":{"$ref":"#/components/schemas/user"},"examples":{"CreateUser":{"value":{"FullName":"CN=Frank Zappa/O=Anonymous","FirstName":"Frank","LastName":"Zappa","ShortName":"fzappa","InternetAddress":"fz@anonymous.org"}}}}},"required":true},"tags":["admin-user"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/user"}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"createUser","summary":"Adds a Person to a master directory","description":"Adds a Person document to a master directory, does not register the user.  Does not set internet password.","x-keep-version":1}},"/access/user/{unid}":{"summary":"One specific person in the server directory, default names.nsf.","description":"One specific person in the server directory, default names.nsf.","get":{"tags":["admin-user"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/accessUserResponse"},"examples":{"userExample":{"value":{"@meta":{"noteid":7642,"unid":"77EC5BE972137D30482588E7001A2163","created":"2022-10-26T12:45:24.83+08:00","lastmodified":"2022-10-26T23:04:46.7+08:00","lastaccessed":"2022-10-26T23:04:46.7+08:00","lastmodifiedinfile":"2022-10-26T23:04:46.71+08:00","addedtofile":"2022-10-26T12:45:24.85+08:00","noteclass":["DATA","DOCUMENT"],"unread":false,"revision":"000000030052D5BE482588E7"},"Form":"Person","Type":"Person","CompanyName":"HCL-update-11-12","FirstName":"Agents0-11-12","FullName":"CN=Agents0 Admin0/O=Agents","LastName":"Admin0-11","MailAddress":"test@update.com-11","MailDomain":"HCLPNP","MailServer":"CN=Manticore/O=Agents","OfficePhoneNumber":"update123456789-11","PhoneNumber":"987654321-11","CellPhoneNumber":"123123123-11","$UpdatedBy":["CN=John Doe/O=PNP"],"$Revisions":["2022-10-26T12:45:24.85+08:00","2022-10-26T23:04:27.82+08:00"]}}}}},"description":"Person details from addressbook"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"deprecated":false,"security":[{"jwt":[]}],"operationId":"getUser","summary":"Retrieve a person from a master directory","description":"Retrieve a person document information from a shared directory","x-keep-version":1},"put":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/user"},"examples":{"UpdateUser":{"value":{"officephonenumber":"","mailaddress":"","firstname":"Agents0","companyname":"","phonenumber":"123456789","maildomain":"Agents","fullname":"CN=Agents0 Admin0/O=Agents","mailserver":"CN=Manticore/O=Agents","middleinitial":"","lastname":"Admin0","Type":"Person","Form":"Person"}}}}}},"tags":["admin-user"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/accessUserResponse"},"examples":{"userExample":{"value":{"@meta":{"noteid":7642,"unid":"77EC5BE972137D30482588E7001A2163","created":"2022-10-26T12:45:24.83+08:00","lastmodified":"2022-10-26T23:04:46.7+08:00","lastaccessed":"2022-10-26T23:04:46.7+08:00","lastmodifiedinfile":"2022-10-26T23:04:46.71+08:00","addedtofile":"2022-10-26T12:45:24.85+08:00","noteclass":["DATA","DOCUMENT"],"unread":false,"revision":"000000030052D5BE482588E7"},"Form":"Person","Type":"Person","CompanyName":"HCL-update-11-12","FirstName":"Agents0-11-12","FullName":"CN=Agents0 Admin0/O=Agents","LastName":"Admin0-11","MailAddress":"test@update.com-11","MailDomain":"HCLPNP","MailServer":"CN=Manticore/O=Agents","OfficePhoneNumber":"update123456789-11","PhoneNumber":"987654321-11","CellPhoneNumber":"123123123-11","$UpdatedBy":["CN=John Doe/O=PNP"],"$Revisions":["2022-10-26T12:45:24.85+08:00","2022-10-26T23:04:27.82+08:00"]}}}}},"description":"Person details from addressbook"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"deprecated":false,"security":[{"jwt":[]}],"operationId":"updateUser","summary":"Updates a person from a master directory","description":"Updates a person document information from a shared directory","x-keep-version":1},"delete":{"tags":["admin-user"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"List of people"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"deprecated":false,"security":[{"jwt":[]}],"operationId":"deleteUser","summary":"Removes a person from a master directory","description":"Deletes a person document from a shared directory","x-keep-version":1},"parameters":[{"name":"unid","description":"Unique ID of the person document","schema":{"type":"string"},"in":"path","required":true}]},"/access/users":{"summary":"List of people in the server directory, default names.nsf.","description":"List of people in the server directory, default names.nsf.","get":{"tags":["admin-user"],"parameters":[{"name":"skip","description":"How many of the result entries shall be skipped. Used for pagination. Default is 0","schema":{"type":"integer"},"in":"query"},{"name":"count","description":"How many entries shall be maximal returned? Default is 1000","schema":{"type":"integer"},"in":"query"},{"name":"startsWith","description":"Beginning of first name or full name","schema":{"type":"string"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{}}}},"description":"List of people"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"operationId":"fetchUsers","summary":"Retrieves people from a master directory","description":"Retrieves list of people in a shared directory","x-keep-version":1}},"/acl/roles/{roleName}":{"summary":"Endpoint for managing roles in a database ACL","get":{"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/aclRoleRolenameResponse"},"examples":{"sampleRoleWithRoleName":{"value":{"roleName":"[SampleRole]","members":[{"name":"-Default-","level":"MANAGER"}]}}}}},"description":"Array of Strings for a given role Name"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getRoleInfo","summary":"Returns who has the given role in that database","description":"Returns who has the given role in that database","x-keep-version":1},"put":{"requestBody":{"description":"JSON object with new role name, if renaming a role. Otherwise do not include a body","content":{"application/json":{"schema":{"$ref":"#/components/schemas/aclRoleChange"},"examples":{"rename":{"value":{"newName":"DbAdmin"}}}}},"required":true},"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/aclRoleRolenamePutResponse"},"examples":{"success":{"value":{"roleName":"[DbAdmin]"}}}}},"description":"Echo of updated role name"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"replaceCreateRole","summary":"Adds a role, or rename a role","description":"The request body has one property 'newName'\n\n    - If 'newName' is the same with 'roleName', and it doesn't exist in the database ACL, it will add the new role. \n    - If 'newName' is not the same with 'roleName', the 'roleName' exists in the database ACL, it will rename the 'roleName' with the 'newName'. ","x-keep-version":1},"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/roleEdit"},"examples":{"roleExample":{"value":{"action":"replace","members":["-Default-","LocalDomainAdmins","LocalDomainServers"]}}}}},"required":true},"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/aclRoleRolenamePostResponse"},"examples":{"sampleResponse":{"value":{"roleName":"[SampleRole]","action":"replace","members":["-Default-","LocalDomainAdmins","LocalDomainServers"]}}}}},"description":"Successful Post"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"updateRoleHolders","summary":"Updates ACL entries with Roles. Will not create a non-existing role or ACL entry.","description":"Can add, delete, replace the members for a given role. Could not create a non-existing role or ACL entry.\n\nThe request body property 'action', what action to take: add, replace, delete\n\n    -replace will ensure given members have the role\n    -add will add the role to the operated members\n    -delete will remove listed members in the given role\n    \nNote: Please use valid format for Groups (Should be a valid Group Name) and Persons (eg. CN=John Doe/O=KeepOrg; Canonical Format), will return an empty array on 'members' if there are no updates made on the role.\n","x-keep-version":1},"delete":{"tags":["admin-database"],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"},"examples":{"success":{"value":{"status":"deletion complete"}}}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"deleteRole","summary":"Deletes a role","x-keep-version":1},"parameters":[{"examples":{"database":{"value":"demo"}},"name":"dataSource","description":"Keep database name","schema":{"type":"string"},"in":"query","required":false},{"examples":{"Admin":{"value":"Admin"}},"name":"roleName","description":"Name of ACL Role without the []","schema":{"type":"string"},"in":"path","required":true},{"name":"nsfPath","description":"Domino database filepath","schema":{"type":"string"},"in":"query"}]},"/access/groups":{"summary":"Get a list of groups in the server directory, default names.nsf.","description":"Get a list of groups in the server directory, default names.nsf.","get":{"tags":["admin-user"],"parameters":[{"name":"name","description":"Name of the group to search. Optional supports partial match","schema":{"type":"string"},"in":"query","required":false},{"name":"resolveMembers","description":"Whether to resolve down to individual users or not. Resolving down to individual members will affect performance.\n\nIf you omit this parameter or setting to false, the members are returned as they appear in the group document. So members maybe individuals or groups.","schema":{"type":"boolean"},"in":"query"},{"name":"start","description":"At which position should the result be returned. Default = 0","schema":{"type":"integer"},"in":"query"},{"name":"count","description":"How many results should be returned","schema":{"type":"integer"},"in":"query"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"oneOf":[{"$ref":"#/components/schemas/accessAutopopulatedGroup"},{"$ref":"#/components/schemas/accessManualGroup"}]}}}},"description":"Success"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"operationId":"getGroups","summary":"Gets a group or multiple groups by name","description":"Gets a group or multiple groups by name","x-keep-version":1}}},"components":{"schemas":{"aclEntry":{"title":"Root Type for AclEntry","description":"ACL Entry","type":"object","properties":{"name":{"type":"string"},"type":{"type":"string"},"level":{"type":"string"},"roles":{"type":"array","items":{"type":"string"}},"flags":{"type":"array","items":{"type":"string"}}},"example":{"name":"LocalDomainAdmins","type":"GROUP","level":"MANAGER","roles":["Admin"],"flags":["NODELETE","AUTHOR_NOCREATE"]}},"errormessage":{"title":"Root Type for errormessage","description":"Detailed error message, might contain stacktrace","type":"object","properties":{"details":{"type":"string"},"message":{"type":"string"},"status":{"format":"int32","type":"integer"}},"example":{"details":"Long list of details","message":"We screwed up","status":500}},"aclRoleChange":{"description":"Object to change a role name","required":["newName"],"type":"object","properties":{"newName":{"description":"New name for role","type":"string"}},"example":{"newName":"Marketing"}},"accessManualGroup":{"oneOf":[{"required":["members"],"type":"object","properties":{"members":{"description":"","type":"array","items":{"type":"string"}}}},{"$ref":"#/components/schemas/accessGroup"}],"description":"Group for access that is not auto-populated but manually managed","type":"object"},"accessAutopopulatedGroup":{"oneOf":[{"required":["autopopulatedRule"],"type":"object","properties":{"autopopulatedRule":{"description":"Rule for autopopulation","type":"string"},"excludedMembers":{"description":"Members to ignore for auto-population","type":"array","items":{"type":"string"}},"additionalMembers":{"description":"Members to add for auto-population","type":"array","items":{"type":"string"}},"members":{"description":"Members used by the group. Read-only","type":"array","items":{"type":"string"},"readOnly":true}}},{"$ref":"#/components/schemas/accessGroup"}],"description":"Group with auto-population enabled","type":"object"},"accessMembers":{"description":"Used for adding / removing members from a group","required":["type","members","process"],"type":"object","properties":{"type":{"description":"","enum":["members","additionalMembers","excludedMembers"],"type":"string"},"members":{"description":"","type":"array","items":{"type":"string"}},"process":{"description":"Add or remove member from group","enum":["add","remove"],"type":"string"}},"example":{"type":"members","members":["Paul Withers","John Doe"],"process":"add"}},"accessGroup":{"description":"","required":["name","type","members"],"type":"object","properties":{"name":{"description":"","type":"string"},"type":{"description":"How the group can be used within the Domino environment","enum":["multi-purpose","acl-only","mail-only","servers-only","deny-access"],"type":"string"},"category":{"description":"","type":"string"},"description":{"description":"","type":"string"},"mailDomain":{"description":"Mail domain to use, only relevant for mail-only groups or multi-purpose groups intended for use for mail as well","type":"string"},"internetAddress":{"description":"Email address used for emailing the group","type":"string"},"administrators":{"description":"List of owners for the group","type":"array","items":{"type":"string"}},"owners":{"description":"List of owners for the group","type":"array","items":{"type":"string"}}}},"roleEdit":{"title":"Root Type for roleEdit","description":"Request to chnage use of a role","type":"object","properties":{"action":{"description":"what action to take: add, replace, delete\n\nreplace will ensure given members have the role, nobody else\nadd will add the roles, ignore members who have it\ndelete will remove the role from listed members","enum":["add","delete","replace"],"type":"string"},"members":{"description":"The members want to operate against the role","type":"array","items":{"type":"string"}}},"example":{"action":"replace","members":["Peter Pan/Toons","Paul Panther/Toons","LocalDomainServers"]}},"user":{"title":"Root Type for user","description":"Notes/Domino user minimal example","type":"object","properties":{"officephonenumber":{"type":"string"},"mailaddress":{"type":"string"},"firstname":{"type":"string"},"companyname":{"type":"string"},"phonenumber":{"type":"string"},"maildomain":{"type":"string"},"fullname":{"type":"string"},"mailserver":{"type":"string"},"middleinitial":{"type":"string"},"lastname":{"type":"string"}},"example":{"officephonenumber":"","mailaddress":"","firstname":"Agents0","companyname":"","phonenumber":"123456789","maildomain":"Agents","fullname":"CN=Agents0 Admin0/O=Agents","mailserver":"CN=Manticore/O=Agents","middleinitial":"","lastname":"Admin0"}},"fullTextIndexBody":{"description":"","required":["options","filepath"],"type":"object","properties":{"options":{"description":"","type":"array","items":{"enum":["Default","Attachments","Binary_attachments","Recreate_index","Case_sensitive","Word_variants","Word_sentence_paragraph_breaks","Encrypted_fields","Summary_fields_only","Delete_index"]}},"filepath":{"description":"Filepath of database to full text index","type":"string","example":"demo.nsf"}},"additionalProperties":false,"example":{"filepath":"Demo.nsf","options":["Auto"]}},"accessUserResponse":{"title":"Root Type for accessUserGetResponse","description":"This is the response definition for GET access user","type":"object","properties":{"@meta":{"description":"Document meta data.","type":"object","properties":{"noteid":{"format":"int32","type":"integer"},"unid":{"type":"string"},"created":{"type":"string"},"lastmodified":{"type":"string"},"lastaccessed":{"type":"string"},"lastmodifiedinfile":{"type":"string"},"addedtofile":{"type":"string"},"noteclass":{"type":"array","items":{"type":"string"}},"unread":{"type":"boolean"},"revision":{"type":"string"}}},"CompanyName":{"type":"string"},"FirstName":{"type":"string"},"FullName":{"type":"string"},"LastName":{"type":"string"},"MailAddress":{"type":"string"},"MailDomain":{"type":"string"},"MailServer":{"type":"string"},"MiddleInitial":{"type":"string"},"OfficePhoneNumber":{"type":"string"},"PhoneNumber":{"type":"string"},"Form":{"description":"The form for a user","type":"string","example":"Person"},"Type":{"description":"The type for a user document","type":"string","example":"Person"},"$UpdatedBy":{"description":"The user who update the doc.","type":"array","items":{"type":"string"},"example":"[\r\n    \"CN=John Doe/O=ProjectKeep\"\r\n]"},"$Revisions":{"description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. ","type":"array","items":{"type":"string"},"example":"[\r\n        \"2022-10-26T12:45:24.85+08:00\",\r\n        \"2022-10-26T23:04:27.82+08:00\"\r\n    ]"}},"example":{"@meta":{"noteid":7642,"unid":"77EC5BE972137D30482588E7001A2163","created":"2022-10-26T12:45:24.83+08:00","lastmodified":"2022-10-26T23:04:46.7+08:00","lastaccessed":"2022-10-26T23:04:46.7+08:00","lastmodifiedinfile":"2022-10-26T23:04:46.71+08:00","addedtofile":"2022-10-26T12:45:24.85+08:00","noteclass":["DATA","DOCUMENT"],"unread":false,"revision":"000000030052D5BE482588E7"},"Form":"Person","Type":"Person","CompanyName":"HCL-update-11-12","FirstName":"Agents0-11-12","FullName":"CN=Agents0 Admin0/O=Agents","LastName":"Admin0-11","MailAddress":"test@update.com-11","MailDomain":"HCLPNP","MailServer":"CN=Manticore/O=Agents","OfficePhoneNumber":"update123456789-11","PhoneNumber":"987654321-11","CellPhoneNumber":"123123123-11","$UpdatedBy":["CN=John Doe/O=PNP"],"$Revisions":["2022-10-26T12:45:24.85+08:00","2022-10-26T23:04:27.82+08:00"]}},"aclRoles":{"title":"Root Type for aclRoles","description":"The acl role definition","type":"object","properties":{"roles":{"type":"array","items":{"type":"string"}}},"example":{"roles":["[UserCreator]","[UserModifier]","[GroupCreator]","[GroupModifier]","[NetCreator]","[NetModifier]","[ServerCreator]","[ServerModifier]"]}},"aclRoleRolenameResponse":{"title":"Root Type for aclRoleRolenameResponse","description":"The response definition for one acl role","type":"object","properties":{"roleName":{"description":"The name of the role","type":"string"},"members":{"description":"The members exist in the role","type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"level":{"type":"string"}}}}},"example":{"roleName":"[UserCreator]","members":[{"name":"CN=fy/O=fy","level":"MANAGER"},{"name":"LocalDomainServers","level":"MANAGER"}]}},"aclRoleRolenamePutResponse":{"title":"Root Type for aclRoleRolenamePutResponse","description":"Definition of response for PUT of acl role.","type":"object","properties":{"roleName":{"description":"The name of the role","type":"string"}},"example":{"roleName":"[SampleRole]"}},"aclRoleRolenamePostResponse":{"title":"Root Type for aclRoleRolenamePostResponse","description":"Definition of response for POST of acl role","type":"object","properties":{"roleName":{"description":"The name of the role","type":"string"},"action":{"description":"action to take: add, replace, delete","type":"string"},"members":{"description":"The members exist in the role","type":"array","items":{"type":"string"}}},"example":{"roleName":"[SampleRole]","action":"replace","members":["-Default-","LocalDomainAdmins","LocalDomainServers"]}},"accessGroupPatchResponse":{"title":"Root Type for accessGroupPathResponse","description":"Definition of response for PATCH access group","type":"object","properties":{"statusText":{"description":"Success / failure status","type":"string"},"status":{"format":"int32","description":"HTTP status code","type":"integer"},"message":{"description":"Short descriptive message","type":"string"},"details":{"description":"The detail information about the members being added or removed.","type":"object","properties":{"members - add":{"type":"array","items":{"type":"string"}},"members - remove":{"type":"array","items":{"type":"string"}}}}},"example":{"statusText":"OK","status":200,"message":"update complete","details":{"members - add":["Paul Withers2"],"members - remove":["John Doe1"]}}},"placeholderAccessUserCertRequest":{"title":"Root Type for placeholderAccessUserCert","description":"Placeholder of access user certificate. \n\nvoltmx-domino-adapter is using openapi-generator to convert the api json file to java class. If no speicifc schema set to the request body and response for the endpoint, it will fail. ","type":"object","properties":{"placeholderDataType":{"type":"string"}},"example":{"placeholderDataType":"For voltmx-domino-adapter"}},"placeholderAccessUserCertResponse":{"title":"Root Type for placeholderAccessUserCertResponse","description":"Placeholder of access user certificate. \n\nvoltmx-domino-adapter is using openapi-generator to convert the api json file to java class. If no speicifc schema set to the request body and response for the endpoint, it will fail. ","type":"object","properties":{"placeholderDataType":{"type":"string"}},"example":{"placeholderDataType":"For voltmx-domino-adapter"}},"UserAccessRequest":{"title":"Root Type for UserAccessRequest","description":"Definition the request to update a person from a master directory","type":"object","properties":{"LoginName":{"description":"The username of the user to login Domino","type":"string"},"FullName":{"description":"Display Name field for the user that is logged into the domain.","type":"string"},"eMail":{"description":"Email address used for emailing the user","type":"string"},"isActive":{"description":"Whether the user is active. ","type":"boolean"},"password":{"description":"Password, not written on a Post-it","type":"string"},"mailFile":{"description":"Location on Domino server","type":"string"}},"example":{"LoginName":"John Doe","FullName":"CN=John Doe/O=Mauraders","eMail":"stephan@projectkeep.io","isActive":true,"password":"password","mailFile":"DemoMail.nsf"}},"StatusMessage":{"title":"Root Type for StatusMessage","description":"Keep-formatted status message","required":["message","status","statusCode"],"type":"object","properties":{"status":{"description":"Success / failure status","type":"string"},"statusCode":{"format":"int32","description":"HTTP status code","type":"integer"},"message":{"description":"Short descriptive message","type":"string"},"unid":{"$ref":"#/components/schemas/Unid","description":"Document primary key"},"details":{"description":"Json Object containing further details, if appropriate","type":"string"}},"example":{"status":"OK","statusCode":200,"message":"deletion complete","unid":"61CCE871E79E8DDB8025852F004DFF2D"}},"Unid":{"description":"32 char universalId A-Z0-9, primary key unique across replicas","maxLength":32,"minLength":32,"pattern":"[0-9A-F]*","type":"string","readOnly":true,"example":"6834F14BE9CA69F68525871E00583D1B"},"ErrorMessage":{"title":"Root Type for ErrorMessage","description":"Detailed error message, might contain stacktrace","type":"object","properties":{"details":{"type":"string"},"message":{"type":"string"},"status":{"format":"int32","type":"integer"}},"example":{"details":"Long list of details","message":"We screwed up","status":500}}},"responses":{"400BadRequest":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Invalid request. Shows up when submission is flaky:\n- Wrong authentication\n- Wrong content-type\n- Missing or wrong parameter types"},"401Unauthorized":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"Unauthorized":{"value":{"status":401,"message":"Invalid credentials or account locked"}}}}},"description":"401 Unauthorized"},"403Forbidden":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"Forbidden":{"value":{"message":"Nice try chap, ask before next time","status":403}}}}},"description":"Forbidden"},"404NotFound":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NotFound":{"value":{"message":"This is not the data you seek!","status":404}}}}},"description":"Content not found"},"405MethodNotAllowed":{"description":"Method not allowed"},"406NotAcceptable":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"GenericRejection":{"value":{"details":"The haferlup needs left turning shrufti","message":"This is not a supported operation. Try again","status":406}}}}},"description":"Invalid operation - something got requested that isn't supported"},"500InternalServerError":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"GenericError":{"value":{"details":"Dreaded pirate NullPointer","message":"Sorry pal, we screwed up","status":500}}}}},"description":"The server screwed up"},"501NotImplemented":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"},"examples":{"NextVersion":{"value":{"details":"We do sprints, not marathons","message":"Not now, maybe tomorrow","status":501}}}}},"description":"Working on it, just not yet"}},"securitySchemes":{"jwt":{"scheme":"bearer","type":"http","description":"Token based auth (preferred)"}}},"security":[{"jwt":[]}],"tags":[{"name":"admin-database","description":"Domino database administration"},{"name":"admin-user","description":"User and Group Management"}],"x-keep-version":1}