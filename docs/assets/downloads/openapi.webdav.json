{
  "openapi": "3.0.2",
  "info": {
    "contact": {
      "email": "HeyHCL@pnp-hcl.com",
      "name": "HCL America Inc",
      "url": "https://opensource.hcltechsw.com/Domino-rest-api/"
    },
    "description": "REST APIs for office operations.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "title": "HCL Domino REST API webdav",
    "version": "1.3.0"
  },
  "servers": [
    {
      "description": "Actual Server",
      "url": "https://frascati.projectkeep.io/api/webdav-v1"
    },
    {
      "description": "Keep enabled server",
      "url": "/api/webdav-v1"
    }
  ],
  "paths": {
    "/attachment/{dataSource}/{unid}/{attachmentName}": {
      "description": "Attachment webdav operations. Does not include webdav methods (PROPFIND, LOCK, UNLOCK) because it is not supported by OpenAPI.",
      "get": {
        "description": "Returns attachment file",
        "operationId": "webdavGetAttachment",
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "Returns attachment file"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Not found": {
                    "value": {
                      "errorId": 0,
                      "message": "No attachment item found for filename sample.docxss",
                      "status": 404
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            },
            "description": "Attachment file not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Returns attachment",
        "tags": [
          "office-attachment"
        ]
      },
      "head": {
        "description": "Get content type and length of attachment in headers",
        "operationId": "webdavHeadAttachment",
        "responses": {
          "200": {
            "description": "Return attachment metadata in header"
          },
          "404": {
            "description": "Attachment file not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Get attachment metadata",
        "tags": [
          "office-attachment"
        ]
      },
      "options": {
        "description": "Checks Authentication cookie and verifies it. Will return a 403 response if cookie does not exists or invalid.",
        "operationId": "webdavOptionsAttachment",
        "responses": {
          "200": {
            "description": "When request has Authentication cookie and is valid.",
            "headers": {
              "Allow": {
                "examples": {
                  "All allowed HTTP methods for this endpoint": {
                    "value": "GET, POST, PUT, OPTIONS, LOCK, UNLOCK, PROPFIND"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "DAV": {
                "examples": {
                  "Supported webdav": {
                    "value": "1"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "MS-Author-Via": {
                "examples": {
                  "MS-Author-Via": {
                    "value": "DAV"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Return 403 when there is no Authentication cookie or Authentication cookie is invalid.",
            "headers": {
              "DAV": {
                "examples": {
                  "Supported webdav": {
                    "value": "1"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "MS-Author-Via": {
                "examples": {
                  "MS-Author-Via": {
                    "value": "DAV"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "X-FORMS_BASED_AUTH_DIALOG_SIZE": {
                "examples": {
                  "Login dialogue size": {
                    "value": "800x600"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "X-FORMS_BASED_AUTH_REQUIRED": {
                "examples": {
                  "Login URL": {
                    "value": "https://sample.projectkeep.io/api/webdav-v1/login"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "X-FORMS_BASED_AUTH_RETURN_URL": {
                "examples": {
                  "Success URL": {
                    "value": "https://sample.projectkeep.io/api/webdav-v1/success/"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Options call to start OFBA dance",
        "tags": [
          "office-attachment"
        ]
      },
      "parameters": [
        {
          "description": "Document UNID where attachment can be found",
          "examples": {
            "UNID": {
              "value": "5897522795BADD9300258BCE006586E4"
            }
          },
          "in": "path",
          "name": "unid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Unid"
          }
        },
        {
          "description": "Name of attachment",
          "examples": {
            "Word file": {
              "value": "sample.docx"
            }
          },
          "in": "path",
          "name": "attachmentName",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Scope where the document containing the attachment is at",
          "examples": {
            "Scope": {
              "value": "myapproval"
            }
          },
          "in": "path",
          "name": "dataSource",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Overwrites attachment data",
        "operationId": "webdavPutAttachment",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentFileUploaded"
                }
              }
            },
            "description": "Confirms that file is uploaded"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Not found": {
                    "value": {
                      "errorId": 0,
                      "message": "No attachment item found for filename sample.docxss",
                      "status": 404
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            },
            "description": "Attachment file not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Overwrite attachment",
        "tags": [
          "office-attachment"
        ]
      },
      "summary": "Webdav operations for attachments",
      "x-keep-scope": "ANY",
      "x-keep-version": 1
    },
    "/jsonlogin": {
      "description": "Consumes application/json to login. Used in OFBA login dialogue.",
      "post": {
        "description": "Login and returns a JWT token in a cookie if successful. This will also redirect to the OFBA success path URL. Use this to get Authentication cookie that contains JWT.",
        "operationId": "webdavJsonLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "Login": {
                  "value": {
                    "password": "**********",
                    "scope": "$DATA",
                    "username": "some text"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/BasicAuthRequest"
              }
            }
          },
          "description": "Username and password in Json format",
          "required": true
        },
        "responses": {
          "302": {
            "description": "Upon successful login, redirects to OFBA success URL.",
            "headers": {
              "Location": {
                "examples": {
                  "Location of OFBA success URL": {
                    "value": "https://frascati.projectkeep.io/api/webdav-v1/success"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "set-cookie": {
                "examples": {
                  "JWT as cookie": {
                    "value": "Authentication=<jwt>"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "errorId": 1008,
                      "message": "Invalid credentials or account locked",
                      "status": 401
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {}
        ],
        "summary": "Get JWT Session in a cookie",
        "tags": [
          "ofba-authentication"
        ],
        "x-keep-scope": "ANY",
        "x-keep-version": 1
      },
      "summary": "Login that consumes application/json"
    },
    "/login": {
      "description": "All endpoints used to authenticate with KEEP in OFBA dialogue",
      "get": {
        "description": "Returns an HTML form for OFBA dialogue. Will return an HTML compatible with older browsers if browser client used by OFBA is old.",
        "operationId": "getLoginFormOfba",
        "responses": {
          "200": {
            "content": {
              "text/html": {}
            },
            "description": "HTML for OFBA dialogue"
          }
        },
        "security": [
          {}
        ],
        "summary": "Get login HTML for OFBA",
        "tags": [
          "ofba-authentication"
        ]
      },
      "post": {
        "description": "Consumes application/x-www-form-urlencoded. Will return JWT in a cookie if successful, then redirects to OFBA success URL. Use this to get Authentication cookie that contains JWT.",
        "operationId": "webdavLogin",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BasicAuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "302": {
            "description": "Upon successful login, redirects to OFBA success URL.",
            "headers": {
              "Location": {
                "examples": {
                  "Location of OFBA success URL": {
                    "value": "https://frascati.projectkeep.io/api/webdav-v1/success"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "set-cookie": {
                "examples": {
                  "JWT as cookie": {
                    "value": "Authentication=<jwt>"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "errorId": 1008,
                      "message": "Invalid credentials or account locked",
                      "status": 401
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {}
        ],
        "summary": "Login to get JWT in cookie",
        "tags": [
          "ofba-authentication"
        ]
      },
      "summary": "Login endpoints for OFBA dialogue",
      "x-keep-scope": "ANY",
      "x-keep-version": 1
    },
    "/login/callback": {
      "description": "Callback endpoints after successful external IdP login.",
      "get": {
        "description": "Render an HTML page in OFBA dialogue after external IdP login success.",
        "operationId": "getIdpCallbackOfba",
        "responses": {
          "200": {
            "content": {
              "text/html": {}
            },
            "description": "Callback HTML page for external IdP"
          }
        },
        "security": [
          {}
        ],
        "summary": "Get HTML page after external IdP login",
        "tags": [
          "ofba-authentication"
        ]
      },
      "post": {
        "description": "Callback HTML automatically calls this endpoint in order to put external IdP JWT into a cookie then redirects into OFBA success URL.",
        "operationId": "callbackAuthOfba",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfbaIdpCallbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "302": {
            "description": "Returns external IdP JWT in a cookie then redirects to OFBA success URL",
            "headers": {
              "Location": {
                "examples": {
                  "Location of OFBA success URL": {
                    "value": "https://frascati.projectkeep.io/api/webdav-v1/success"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "set-cookie": {
                "examples": {
                  "JWT as cookie": {
                    "value": "Authentication=<jwt>"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {}
        ],
        "summary": "Transform external IdP JWT into a cookie",
        "tags": [
          "ofba-authentication"
        ]
      },
      "summary": "OFBA callback endpoints for external IdPs",
      "x-keep-scope": "ANY",
      "x-keep-version": 1
    },
    "/login/idpList": {
      "description": "All external IdPs that have OFBA configuration will be included in the OFBA login dialogue",
      "get": {
        "description": "All external IdPs that have OFBA configuration will be included in the OFBA login dialogue",
        "operationId": "getExternalIdp",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdpListResponse"
                }
              }
            },
            "description": "Returns a list of external IdPs"
          }
        },
        "security": [
          {}
        ],
        "summary": "Get external IdPs",
        "tags": [
          "ofba-authentication"
        ]
      },
      "summary": "Get external IdPs",
      "x-keep-scope": "ANY",
      "x-keep-version": 1
    },
    "/success": {
      "description": "Endpoint to call if OFBA flow is successful. Does nothing.",
      "get": {
        "description": "Endpoint to call if OFBA flow is successful. Does nothing.",
        "operationId": "getOfbaSuccess",
        "responses": {
          "200": {
            "description": "Empty 200 response."
          }
        },
        "security": [
          {}
        ],
        "summary": "Signifies OFBA success",
        "tags": [
          "ofba-authentication"
        ]
      },
      "summary": "Signifies OFBA success",
      "x-keep-scope": "ANY",
      "x-keep-version": 1
    },
    "/view/{dataSource}/{name}": {
      "description": "Virtual spreadsheet webdav operations. Does not include webdav methods (PROPFIND, LOCK, UNLOCK) because it is not supported by OpenAPI.",
      "get": {
        "description": "Returns spreadsheet file from view data",
        "operationId": "webdavGetVirtualSpreadsheet",
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "Returns attachment file"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Bad request": {
                    "value": {
                      "errorId": 1112,
                      "message": "Only xlsx extension is supported.",
                      "status": 404
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            },
            "description": "If filename does not end with .xlsx"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Not found": {
                    "value": {
                      "errorId": 0,
                      "message": "No attachment item found for filename sample.docxss",
                      "status": 404
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            },
            "description": "Attachment file not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Get virtual spreadsheet from view data",
        "tags": [
          "virtualspreadsheet"
        ]
      },
      "head": {
        "description": "Get content type and length of virtual spreadsheet in headers",
        "operationId": "webdavHeadVirtualSpreadsheet",
        "responses": {
          "200": {
            "description": "Return attachment metadata in header"
          },
          "400": {
            "description": "If filename does not end with .xlsx"
          },
          "404": {
            "description": "Attachment file not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Get virtual spreadsheet metadata",
        "tags": [
          "virtualspreadsheet"
        ]
      },
      "options": {
        "description": "Checks Authentication cookie and verifies it. Will return a 403 response if cookie does not exists or invalid.",
        "operationId": "webdavOptionsVirtualSpreadsheet",
        "responses": {
          "200": {
            "description": "When request has Authentication cookie and is valid.",
            "headers": {
              "Allow": {
                "examples": {
                  "All allowed HTTP methods for this endpoint": {
                    "value": "GET, POST, PUT, OPTIONS, LOCK, UNLOCK, PROPFIND"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "DAV": {
                "examples": {
                  "Supported webdav": {
                    "value": "1"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "MS-Author-Via": {
                "examples": {
                  "MS-Author-Via": {
                    "value": "DAV"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Return 403 when there is no Authentication cookie or Authentication cookie is invalid.",
            "headers": {
              "DAV": {
                "examples": {
                  "Supported webdav": {
                    "value": "1"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "MS-Author-Via": {
                "examples": {
                  "MS-Author-Via": {
                    "value": "DAV"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "X-FORMS_BASED_AUTH_DIALOG_SIZE": {
                "examples": {
                  "Login dialogue size": {
                    "value": "800x600"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "X-FORMS_BASED_AUTH_REQUIRED": {
                "examples": {
                  "Login URL": {
                    "value": "https://sample.projectkeep.io/api/webdav-v1/login"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "X-FORMS_BASED_AUTH_RETURN_URL": {
                "examples": {
                  "Success URL": {
                    "value": "https://sample.projectkeep.io/api/webdav-v1/success/"
                  }
                },
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Options call to start OFBA dance",
        "tags": [
          "virtualspreadsheet"
        ]
      },
      "parameters": [
        {
          "description": "Scope where the document containing the attachment is at",
          "examples": {
            "Scope": {
              "value": "myapproval"
            }
          },
          "in": "path",
          "name": "dataSource",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "View name. Append it with .xlsx",
          "examples": {
            "View name": {
              "value": "Customers"
            }
          },
          "in": "path",
          "name": "name",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Saves each view entry row in the virtual spreadsheet",
        "operationId": "webdavPutVirtualSpreadsheet",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualSpreadsheetUploaded"
                }
              }
            },
            "description": "Confirms that file is uploaded"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Bad request": {
                    "value": {
                      "errorId": 1112,
                      "message": "Only xlsx extension is supported.",
                      "status": 404
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            },
            "description": "If filename does not end with .xlsx"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "Not found": {
                    "value": {
                      "errorId": 0,
                      "message": "No attachment item found for filename sample.docxss",
                      "status": 404
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            },
            "description": "Attachment file not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "summary": "Overwrite view data with spreadsheet data",
        "tags": [
          "virtualspreadsheet"
        ]
      },
      "summary": "Webdav operations for virtual spreadsheet",
      "x-keep-scope": "ANY",
      "x-keep-version": 1
    }
  },
  "components": {
    "schemas": {
      "AttachmentFileUploaded": {
        "description": "Confirms file status after upload",
        "example": {
          "file": "sample.docx",
          "uploaded": true
        },
        "properties": {
          "file": {
            "description": "Filename or path",
            "example": "sample.docx",
            "type": "string"
          },
          "uploaded": {
            "description": "Boolean value that specifies if file is successfully uploaded or not",
            "example": "true",
            "type": "boolean"
          }
        },
        "required": [
          "file",
          "uploaded"
        ],
        "type": "object"
      },
      "BasicAuthRequest": {
        "additionalProperties": false,
        "description": "API way to get a token",
        "example": {
          "password": "supersecret",
          "scope": "MAIL $DATA",
          "username": "FirstName LastName"
        },
        "properties": {
          "password": {
            "description": "Password, not written on a Post-it",
            "example": "supersecret",
            "format": "password",
            "type": "string"
          },
          "scope": {
            "description": "Optional approved scopes. A scope is a string, the scope field a series of space separated strings. If omitted the default value \"MAIL $DATA\" that give access to PIM functions and any database the user has access to. Other scopes can be the name of database aliases like \"demo\", \"crm\". The values are case sensitive. Regular database scopes are lower case. Scopes can't open access, that's what ACLs do, but limit them. For a user driven login, this makes limited sense, so it is mostly to achieve JWT parameter parity, so scopes can be tested without an IdP issuing a JWT at the end of an OAuth process\n",
            "example": "crm",
            "type": "string"
          },
          "username": {
            "description": "Who you are or your eMail",
            "example": "John Doe",
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ],
        "title": "Root Type for BasicAuthRequest",
        "type": "object"
      },
      "ErrorMessage": {
        "description": "Detailed error message, might contain stacktrace",
        "example": {
          "details": "Long list of details",
          "message": "We screwed up",
          "status": 500
        },
        "properties": {
          "details": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "Root Type for ErrorMessage",
        "type": "object"
      },
      "IdpListResponse": {
        "description": "List of external IdPs that is OFBA configured.",
        "example": {
          "name": "KeycloakIdP",
          "ofba_config": {
            "active": true,
            "client_id": "{client_id}",
            "scope": [
              "$DATA"
            ]
          },
          "wellKnown": "https://{keycloak_host}/realms/{realm_name}"
        },
        "properties": {
          "name": {
            "description": "Name of external IdP",
            "example": "KeycloakIdP",
            "type": "string"
          },
          "ofba_config": {
            "$ref": "#/components/schemas/IdpOfbaConfiguration",
            "description": "External IdP's configuration for OFBA login"
          },
          "wellKnown": {
            "description": "OIDC URL of external IdP",
            "example": "https://{keycloak_host}/realms/{realm_name}",
            "type": "string"
          }
        },
        "required": [
          "name",
          "ofba_config",
          "wellKnown"
        ],
        "type": "object"
      },
      "IdpOfbaConfiguration": {
        "description": "Configuration of external IdPs for OFBA login",
        "example": {
          "active": true,
          "client_id": "{client_id}",
          "scope": [
            "$DATA"
          ]
        },
        "properties": {
          "active": {
            "description": "Flag if external IdP is in use for OFBA purposes",
            "example": "true",
            "type": "boolean"
          },
          "application_id_uri": {
            "description": "Optional configuration. Used for Azure.",
            "type": "string"
          },
          "client_id": {
            "description": "External IdP client ID",
            "type": "string"
          },
          "scope": {
            "description": "Scope to use",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "active",
          "client_id",
          "scope"
        ],
        "type": "object"
      },
      "OfbaIdpCallbackRequest": {
        "description": "Request body for external IdP callback authentication",
        "example": {
          "access_token": "<jwt>",
          "expires_in": 7200
        },
        "properties": {
          "access_token": {
            "description": "External IdP JWT token",
            "type": "string"
          },
          "expires_in": {
            "description": "External IdP expiry in seconds.",
            "example": "7200",
            "type": "integer"
          }
        },
        "required": [
          "access_token",
          "expires_in"
        ],
        "type": "object"
      },
      "Unid": {
        "description": "32 char universalId A-Z0-9, primary key unique across replicas",
        "example": "6834F14BE9CA69F68525871E00583D1B",
        "maxLength": 32,
        "minLength": 32,
        "pattern": "[0-9A-F]*",
        "readOnly": true,
        "type": "string"
      },
      "VirtualSpreadsheetUploaded": {
        "description": "Confirms view status after virtual spreadsheet upload",
        "example": {
          "errors": [],
          "uploaded": true
        },
        "properties": {
          "errors": {
            "description": "Array of error messages encountered when uploading virtual spreadsheet",
            "items": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "type": "array"
          },
          "uploaded": {
            "description": "Boolean value that specifies if file is successfully uploaded or not",
            "example": "true",
            "type": "boolean"
          }
        },
        "required": [
          "errors",
          "uploaded"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "jwt": {
        "description": "Token based auth (preferred)",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "jwt": []
    },
    {}
  ],
  "tags": [
    {
      "description": "All operations used for MS-OFBA.",
      "name": "ofba-authentication"
    },
    {
      "description": "Operations for Office files. ",
      "name": "office-attachment"
    },
    {
      "description": "Operations for virtual spreadsheet feature.",
      "name": "virtualspreadsheet"
    }
  ]
}